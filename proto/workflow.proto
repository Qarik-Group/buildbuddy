syntax = "proto3";

import "proto/context.proto";

package workflow;

message CreateWorkflowRequest {
  // The request context.
  context.RequestContext request_context = 1;

  // The name of this workflow.
  // Ex. "Let It Flow"
  string name = 2;

  message GitRepo {
    // The HTTPS URL of the Git repository that will be checked
    // out and built as part of this project.
    // Ex. "https://github.com/buildbuddy-io/buildbuddy-internal"
    string repo_url = 1;

    // The access token to use when cloning this repository.
    // For Github, and Gitlab, this is known as a Personal Access Token.
    //
    // For Bitbucket, this is known as an App Password, which requires
    // an associated username. The app password requires the following
    // permissions: [webhooks: r+w, pull requests: r+w; repo: r+w]
    //
    // Ex. "ABASDBASDBASBD"
    string access_token = 2;

    // The username to use when cloning this repository.
    // This is required for Bitbucket, whose "app passwords" require an
    // associated username.
    string username = 3;
  }

  // The git repository to associate with this project. For now, only a single
  // git repository is supported.
  GitRepo git_repo = 3;
}

message CreateWorkflowResponse {
  // The response context.
  context.ResponseContext response_context = 1;

  // ID of the created workflow.
  // Ex. "WF4576963743584254779"
  string id = 2;

  // The unique webhook URL for this project. Sending a POST request to this
  // URL will trigger a build of this project.
  // Ex. "https://app.buildbuddy.io/webhooks/workflows/abcd123letitflow"
  string webhook_url = 3;
}

message DeleteWorkflowRequest {
  // The request context.
  context.RequestContext request_context = 1;

  // ID of the workflow to delete.
  // Ex. "WF4576963743584254779"
  string id = 2;
}

message DeleteWorkflowResponse {
  // The response context.
  context.ResponseContext response_context = 1;
}

message GetWorkflowsRequest {
  // The request context.
  context.RequestContext request_context = 1;
}

message GetWorkflowsResponse {
  // The response context.
  context.ResponseContext response_context = 1;

  message Workflow {
    // ID of the workflow to delete.
    // Ex. "WF4576963743584254779"
    string id = 1;

    // The name of this workflow.
    // Ex. "Let It Flow"
    string name = 2;

    // The HTTPS URL of the Git repository that will be checked
    // out and built as part of this project.
    // Ex. "https://github.com/buildbuddy-io/buildbuddy-internal"
    string repo_url = 3;

    // The unique webhook URL for this project. Sending a POST request to this
    // URL will trigger a build of this project.
    // Ex. "https://app.buildbuddy.io/webhooks/workflows/abcd123letitflow"
    string webhook_url = 4;
  }

  repeated Workflow workflow = 2;
}

enum GitProvider {
  UNKNOWN_GIT_PROVIDER = 0;
  GITHUB = 1;
}

message Repo {
  // Repo URL.
  // ex: https://github.com/acme-inc/acme
  string url = 1;
}

message GetReposRequest {
  context.RequestContext request_context = 1;

  // The provider to fetch repos for (required).
  GitProvider git_provider = 2;
}

message GetReposResponse {
  context.ResponseContext response_context = 1;

  // Repos fetched from the provider.
  repeated Repo repo = 2;
}
