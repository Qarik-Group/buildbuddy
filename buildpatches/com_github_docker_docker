--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/backend/build/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "build",
+    srcs = [
+        "backend.go",
+        "tag.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/backend/build",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/events",
+        "//builder",
+        "//builder/builder-next",
+        "//daemon/events",
+        "//image",
+        "//pkg/stringid",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":build",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/httputils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "httputils",
+    srcs = [
+        "decoder.go",
+        "errors_deprecated.go",
+        "form.go",
+        "httputils.go",
+        "httputils_write_json.go",
+        "write_log_stream.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/httputils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/network",
+        "//api/types/versions",
+        "//errdefs",
+        "//pkg/ioutils",
+        "//pkg/jsonmessage",
+        "//pkg/stdcopy",
+        "//vendor/github.com/gorilla/mux",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":httputils",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "httputils_test",
+    srcs = [
+        "form_test.go",
+        "httputils_test.go",
+    ],
+    embed = [":httputils"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/middleware/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "middleware",
+    srcs = [
+        "cors.go",
+        "debug.go",
+        "experimental.go",
+        "middleware.go",
+        "version.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/middleware",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/types/versions",
+        "//pkg/ioutils",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":middleware",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "middleware_test",
+    srcs = [
+        "debug_test.go",
+        "version_test.go",
+    ],
+    embed = [":middleware"],
+    deps = [
+        "//api/server/httputils",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/build/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "build",
+    srcs = [
+        "backend.go",
+        "build.go",
+        "build_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/build",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/filters",
+        "//api/types/versions",
+        "//errdefs",
+        "//pkg/ioutils",
+        "//pkg/progress",
+        "//pkg/streamformatter",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":build",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/checkpoint/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "checkpoint",
+    srcs = [
+        "backend.go",
+        "checkpoint.go",
+        "checkpoint_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/checkpoint",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":checkpoint",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/container/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,43 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "container",
+    srcs = [
+        "backend.go",
+        "container.go",
+        "container_routes.go",
+        "copy.go",
+        "exec.go",
+        "inspect.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/container",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/filters",
+        "//api/types/versions",
+        "//container",
+        "//errdefs",
+        "//pkg/archive",
+        "//pkg/ioutils",
+        "//pkg/signal",
+        "//pkg/stdcopy",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/golang/gddo/httputil",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/net/websocket",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":container",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/debug/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "debug",
+    srcs = [
+        "debug.go",
+        "debug_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/debug",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":debug",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/distribution/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "distribution",
+    srcs = [
+        "backend.go",
+        "distribution.go",
+        "distribution_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/distribution",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/registry",
+        "//errdefs",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest/manifestlist",
+        "//vendor/github.com/docker/distribution/manifest/schema1",
+        "//vendor/github.com/docker/distribution/manifest/schema2",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":distribution",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/grpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc",
+    srcs = [
+        "backend.go",
+        "grpc.go",
+        "grpc_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/grpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/router",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/net/http2",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/image/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "image",
+    srcs = [
+        "backend.go",
+        "image.go",
+        "image_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/image",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/image",
+        "//api/types/registry",
+        "//api/types/versions",
+        "//errdefs",
+        "//pkg/ioutils",
+        "//pkg/streamformatter",
+        "//pkg/system",
+        "//registry",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":image",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/network/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "network",
+    srcs = [
+        "backend.go",
+        "filter.go",
+        "network.go",
+        "network_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/network",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/network",
+        "//api/types/versions",
+        "//errdefs",
+        "//vendor/github.com/docker/libnetwork",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":network",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "plugin",
+    srcs = [
+        "backend.go",
+        "plugin.go",
+        "plugin_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/filters",
+        "//errdefs",
+        "//pkg/ioutils",
+        "//pkg/streamformatter",
+        "//plugin",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/session/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "session",
+    srcs = [
+        "backend.go",
+        "session.go",
+        "session_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/session",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/router",
+        "//errdefs",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":session",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/swarm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "swarm",
+    srcs = [
+        "backend.go",
+        "cluster.go",
+        "cluster_routes.go",
+        "helpers.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/swarm",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//api/types/versions",
+        "//errdefs",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":swarm",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "swarm_test",
+    srcs = ["helpers_test.go"],
+    embed = [":swarm"],
+    deps = [
+        "//api/types/swarm",
+        "//vendor/github.com/docker/go-units",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/system/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "system",
+    srcs = [
+        "backend.go",
+        "system.go",
+        "system_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/system",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/server/router/build",
+        "//api/types",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/registry",
+        "//api/types/swarm",
+        "//api/types/time",
+        "//api/types/versions",
+        "//builder/builder-next",
+        "//pkg/ioutils",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":system",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/volume/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "volume",
+    srcs = [
+        "backend.go",
+        "volume.go",
+        "volume_routes.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router/volume",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/router",
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/volume",
+        "//errdefs",
+        "//vendor/github.com/pkg/errors",
+        "//volume/service/opts",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":volume",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/router/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "router",
+    srcs = [
+        "experimental.go",
+        "local.go",
+        "router.go",
+    ],
+    importpath = "github.com/docker/docker/api/server/router",
+    visibility = ["//visibility:public"],
+    deps = ["//api/server/httputils"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":router",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/server/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "server",
+    srcs = [
+        "middleware.go",
+        "server.go",
+    ],
+    importpath = "github.com/docker/docker/api/server",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/server/httputils",
+        "//api/server/middleware",
+        "//api/server/router",
+        "//api/server/router/debug",
+        "//dockerversion",
+        "//errdefs",
+        "//vendor/github.com/gorilla/mux",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":server",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "server_test",
+    srcs = ["server_test.go"],
+    embed = [":server"],
+    deps = [
+        "//api",
+        "//api/server/httputils",
+        "//api/server/middleware",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/backend/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "backend",
+    srcs = [
+        "backend.go",
+        "build.go",
+    ],
+    importpath = "github.com/docker/docker/api/types/backend",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//pkg/streamformatter",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":backend",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/blkiodev/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "blkiodev",
+    srcs = ["blkio.go"],
+    importpath = "github.com/docker/docker/api/types/blkiodev",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":blkiodev",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/container/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "container",
+    srcs = [
+        "config.go",
+        "container_changes.go",
+        "container_create.go",
+        "container_top.go",
+        "container_update.go",
+        "container_wait.go",
+        "host_config.go",
+        "hostconfig_unix.go",
+        "hostconfig_windows.go",
+        "waitcondition.go",
+    ],
+    importpath = "github.com/docker/docker/api/types/container",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/blkiodev",
+        "//api/types/mount",
+        "//api/types/strslice",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-units",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":container",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/events/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "events",
+    srcs = ["events.go"],
+    importpath = "github.com/docker/docker/api/types/events",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":events",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/filters/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "filters",
+    srcs = ["parse.go"],
+    importpath = "github.com/docker/docker/api/types/filters",
+    visibility = ["//visibility:public"],
+    deps = ["//api/types/versions"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":filters",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "filters_test",
+    srcs = [
+        "example_test.go",
+        "parse_test.go",
+    ],
+    embed = [":filters"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/image/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "image",
+    srcs = ["image_history.go"],
+    importpath = "github.com/docker/docker/api/types/image",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":image",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/mount/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mount",
+    srcs = ["mount.go"],
+    importpath = "github.com/docker/docker/api/types/mount",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mount",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/network/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "network",
+    srcs = ["network.go"],
+    importpath = "github.com/docker/docker/api/types/network",
+    visibility = ["//visibility:public"],
+    deps = ["//api/types/filters"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":network",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/plugins/logdriver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "entry_proto",
+    srcs = ["entry.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "entry_go_proto",
+    importpath = "github.com/docker/docker/api/types/plugins/logdriver",
+    proto = ":entry_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "logdriver",
+    srcs = [
+        "gen.go",
+        "io.go",
+    ],
+    embed = [":entry_go_proto"],
+    importpath = "github.com/docker/docker/api/types/plugins/logdriver",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logdriver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/registry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "registry",
+    srcs = [
+        "authenticate.go",
+        "registry.go",
+    ],
+    importpath = "github.com/docker/docker/api/types/registry",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":registry",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/strslice/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "strslice",
+    srcs = ["strslice.go"],
+    importpath = "github.com/docker/docker/api/types/strslice",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":strslice",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "strslice_test",
+    srcs = ["strslice_test.go"],
+    embed = [":strslice"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/swarm/runtime/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "runtime_proto",
+    srcs = ["plugin.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "runtime_go_proto",
+    importpath = "github.com/docker/docker/api/types/swarm/runtime",
+    proto = ":runtime_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "runtime",
+    srcs = ["gen.go"],
+    embed = [":runtime_go_proto"],
+    importpath = "github.com/docker/docker/api/types/swarm/runtime",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":runtime",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/swarm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "swarm",
+    srcs = [
+        "common.go",
+        "config.go",
+        "container.go",
+        "network.go",
+        "node.go",
+        "runtime.go",
+        "secret.go",
+        "service.go",
+        "swarm.go",
+        "task.go",
+    ],
+    importpath = "github.com/docker/docker/api/types/swarm",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/swarm/runtime",
+        "//vendor/github.com/docker/go-units",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":swarm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/time/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "time",
+    srcs = [
+        "duration_convert.go",
+        "timestamp.go",
+    ],
+    importpath = "github.com/docker/docker/api/types/time",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":time",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "time_test",
+    srcs = [
+        "duration_convert_test.go",
+        "timestamp_test.go",
+    ],
+    embed = [":time"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/versions/v1p19/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "v1p19",
+    srcs = ["types.go"],
+    importpath = "github.com/docker/docker/api/types/versions/v1p19",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/versions/v1p20",
+        "//vendor/github.com/docker/go-connections/nat",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":v1p19",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/versions/v1p20/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "v1p20",
+    srcs = ["types.go"],
+    importpath = "github.com/docker/docker/api/types/versions/v1p20",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//vendor/github.com/docker/go-connections/nat",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":v1p20",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/versions/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "versions",
+    srcs = ["compare.go"],
+    importpath = "github.com/docker/docker/api/types/versions",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":versions",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "versions_test",
+    srcs = ["compare_test.go"],
+    embed = [":versions"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/volume/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "volume",
+    srcs = [
+        "volume_create.go",
+        "volume_list.go",
+    ],
+    importpath = "github.com/docker/docker/api/types/volume",
+    visibility = ["//visibility:public"],
+    deps = ["//api/types"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":volume",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "auth.go",
+        "client.go",
+        "configs.go",
+        "error_response.go",
+        "error_response_ext.go",
+        "graph_driver_data.go",
+        "id_response.go",
+        "image_delete_response_item.go",
+        "image_summary.go",
+        "plugin.go",
+        "plugin_device.go",
+        "plugin_env.go",
+        "plugin_interface_type.go",
+        "plugin_mount.go",
+        "plugin_responses.go",
+        "port.go",
+        "service_update_response.go",
+        "stats.go",
+        "types.go",
+        "volume.go",
+    ],
+    importpath = "github.com/docker/docker/api/types",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//api/types/filters",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/registry",
+        "//api/types/swarm",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = [
+        "common.go",
+        "common_unix.go",
+        "common_windows.go",
+    ],
+    importpath = "github.com/docker/docker/api",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/adapters/containerimage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containerimage",
+    srcs = ["pull.go"],
+    importpath = "github.com/docker/docker/builder/builder-next/adapters/containerimage",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//distribution",
+        "//distribution/metadata",
+        "//distribution/xfer",
+        "//image",
+        "//layer",
+        "//pkg/progress",
+        "//reference",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/gc",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/reference",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/containerd/containerd/remotes/docker/schema1",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/imageutil",
+        "//vendor/github.com/moby/buildkit/util/leaseutil",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/moby/buildkit/util/resolver",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/identity",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/time/rate",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containerimage",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/adapters/localinlinecache/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "localinlinecache",
+    srcs = ["inlinecache.go"],
+    importpath = "github.com/docker/docker/builder/builder-next/adapters/localinlinecache",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//image",
+        "//reference",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/cache/remotecache/registry",
+        "//vendor/github.com/moby/buildkit/cache/remotecache/v1:remotecache",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":localinlinecache",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/adapters/snapshot/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snapshot",
+    srcs = [
+        "layer.go",
+        "leasemanager.go",
+        "snapshot.go",
+    ],
+    importpath = "github.com/docker/docker/builder/builder-next/adapters/snapshot",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/graphdriver",
+        "//layer",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":snapshot",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/exporter/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exporter",
+    srcs = [
+        "export.go",
+        "writer.go",
+    ],
+    importpath = "github.com/docker/docker/builder/builder-next/exporter",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//image",
+        "//layer",
+        "//reference",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/exporter/containerimage/exptypes",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/moby/buildkit/util/system",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":exporter",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/imagerefchecker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "imagerefchecker",
+    srcs = ["checker.go"],
+    importpath = "github.com/docker/docker/builder/builder-next/imagerefchecker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//image",
+        "//layer",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":imagerefchecker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/worker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,61 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "worker",
+    srcs = [
+        "gc.go",
+        "gc_unix.go",
+        "gc_windows.go",
+        "worker.go",
+    ],
+    importpath = "github.com/docker/docker/builder/builder-next/worker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//builder/builder-next/adapters/containerimage",
+        "//distribution",
+        "//distribution/metadata",
+        "//distribution/xfer",
+        "//image",
+        "//layer",
+        "//pkg/progress",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/rootfs",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/executor",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/exporter/local",
+        "//vendor/github.com/moby/buildkit/exporter/tar",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/mounts",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/ops",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/source/git",
+        "//vendor/github.com/moby/buildkit/source/http",
+        "//vendor/github.com/moby/buildkit/source/local",
+        "//vendor/github.com/moby/buildkit/util/archutil",
+        "//vendor/github.com/moby/buildkit/util/compression",
+        "//vendor/github.com/moby/buildkit/util/contentutil",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":worker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/builder-next/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,209 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "builder-next",
+    srcs = [
+        "builder.go",
+        "controller.go",
+        "executor_unix.go",
+        "executor_windows.go",
+        "reqbodyhandler.go",
+    ],
+    importpath = "github.com/docker/docker/builder/builder-next",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/filters",
+        "//builder",
+        "//builder/builder-next/adapters/containerimage",
+        "//builder/builder-next/adapters/localinlinecache",
+        "//builder/builder-next/adapters/snapshot",
+        "//builder/builder-next/exporter",
+        "//builder/builder-next/imagerefchecker",
+        "//builder/builder-next/worker",
+        "//daemon/config",
+        "//daemon/graphdriver",
+        "//daemon/images",
+        "//pkg/idtools",
+        "//pkg/streamformatter",
+        "//pkg/system",
+        "//vendor/github.com/containerd/containerd/content/local",
+        "//vendor/github.com/containerd/containerd/metadata",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/docker/libnetwork",
+        "//vendor/github.com/moby/buildkit/api/services/control",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/cache/remotecache/inline",
+        "//vendor/github.com/moby/buildkit/cache/remotecache/local",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/control",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/builder",
+        "//vendor/github.com/moby/buildkit/frontend/gateway",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/forwarder",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot/containerd",
+        "//vendor/github.com/moby/buildkit/solver/bboltcachestorage",
+        "//vendor/github.com/moby/buildkit/util/archutil",
+        "//vendor/github.com/moby/buildkit/util/entitlements",
+        "//vendor/github.com/moby/buildkit/util/leaseutil",
+        "//vendor/github.com/moby/buildkit/util/tracing",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/metadata",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/stringid",
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+            "//vendor/github.com/moby/buildkit/executor/runcexecutor",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/network",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/moby/buildkit/executor",
+            "//vendor/github.com/moby/buildkit/executor/oci",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":builder-next",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/dockerfile/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,138 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "dockerfile",
+    srcs = [
+        "buildargs.go",
+        "builder.go",
+        "builder_unix.go",
+        "builder_windows.go",
+        "containerbackend.go",
+        "copy.go",
+        "copy_unix.go",
+        "copy_windows.go",
+        "dispatchers.go",
+        "dispatchers_unix.go",
+        "dispatchers_windows.go",
+        "evaluator.go",
+        "imagecontext.go",
+        "imageprobe.go",
+        "internals.go",
+        "internals_linux.go",
+        "internals_windows.go",
+        "metrics.go",
+    ],
+    importpath = "github.com/docker/docker/builder/dockerfile",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api",
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/strslice",
+        "//builder",
+        "//builder/remotecontext",
+        "//container",
+        "//errdefs",
+        "//image",
+        "//pkg/archive",
+        "//pkg/chrootarchive",
+        "//pkg/containerfs",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/jsonmessage",
+        "//pkg/progress",
+        "//pkg/signal",
+        "//pkg/streamformatter",
+        "//pkg/stringid",
+        "//pkg/system",
+        "//pkg/urlutil",
+        "//runconfig/opts",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/instructions",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/shell",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/syncmap",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/moby/sys/symlink",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/moby/sys/symlink",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//api/types/mount",
+            "//pkg/reexec",
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dockerfile",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "dockerfile_test",
+    srcs = [
+        "buildargs_test.go",
+        "copy_test.go",
+        "dispatchers_test.go",
+        "dispatchers_unix_test.go",
+        "dispatchers_windows_test.go",
+        "evaluator_test.go",
+        "imagecontext_test.go",
+        "internals_linux_test.go",
+        "internals_test.go",
+        "internals_windows_test.go",
+        "mockbackend_test.go",
+        "utils_test.go",
+    ],
+    embed = [":dockerfile"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/strslice",
+        "//builder",
+        "//builder/remotecontext",
+        "//container",
+        "//image",
+        "//layer",
+        "//pkg/archive",
+        "//pkg/containerfs",
+        "//pkg/reexec",
+        "//pkg/system",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/instructions",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/shell",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/idtools",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/dockerignore/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dockerignore",
+    srcs = ["deprecated.go"],
+    importpath = "github.com/docker/docker/builder/dockerignore",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/moby/buildkit/frontend/dockerfile/dockerignore"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dockerignore",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/remotecontext/git/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "git",
+    srcs = ["gitutils.go"],
+    importpath = "github.com/docker/docker/builder/remotecontext/git",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/sys/symlink",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sys/execabs",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":git",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "git_test",
+    srcs = ["gitutils_test.go"],
+    embed = [":git"],
+    deps = [
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/remotecontext/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,86 @@
+load("@rules_proto//proto:defs.bzl", "proto_library")
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+load("@io_bazel_rules_go//proto:def.bzl", "go_proto_library")
+
+proto_library(
+    name = "remotecontext_proto",
+    srcs = ["tarsum.proto"],
+    visibility = ["//visibility:public"],
+)
+
+go_proto_library(
+    name = "remotecontext_go_proto",
+    importpath = "github.com/docker/docker/builder/remotecontext",
+    proto = ":remotecontext_proto",
+    visibility = ["//visibility:public"],
+)
+
+go_library(
+    name = "remotecontext",
+    srcs = [
+        "archive.go",
+        "detect.go",
+        "filehash.go",
+        "generate.go",
+        "git.go",
+        "lazycontext.go",
+        "mimetype.go",
+        "remote.go",
+        "tarsum.go",
+    ],
+    embed = [":remotecontext_go_proto"],
+    importpath = "github.com/docker/docker/builder/remotecontext",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/backend",
+        "//builder",
+        "//builder/remotecontext/git",
+        "//errdefs",
+        "//pkg/archive",
+        "//pkg/chrootarchive",
+        "//pkg/containerfs",
+        "//pkg/fileutils",
+        "//pkg/ioutils",
+        "//pkg/pools",
+        "//pkg/tarsum",
+        "//pkg/urlutil",
+        "//vendor/github.com/containerd/continuity/driver",
+        "//vendor/github.com/hashicorp/go-immutable-radix",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/dockerignore",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/tonistiigi/fsutil",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remotecontext",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "remotecontext_test",
+    srcs = [
+        "detect_test.go",
+        "mimetype_test.go",
+        "remote_test.go",
+        "tarsum_test.go",
+        "utils_test.go",
+    ],
+    embed = [":remotecontext"],
+    deps = [
+        "//builder",
+        "//pkg/archive",
+        "//pkg/containerfs",
+        "//pkg/reexec",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ builder/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "builder",
+    srcs = ["builder.go"],
+    importpath = "github.com/docker/docker/builder",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//container",
+        "//image",
+        "//layer",
+        "//pkg/containerfs",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":builder",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ cli/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "config",
+    srcs = ["configdir.go"],
+    importpath = "github.com/docker/docker/cli/config",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/homedir"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ cli/debug/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "debug",
+    srcs = ["debug.go"],
+    importpath = "github.com/docker/docker/cli/debug",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":debug",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "debug_test",
+    srcs = ["debug_test.go"],
+    embed = [":debug"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ cli/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cli",
+    srcs = [
+        "cobra.go",
+        "error.go",
+        "required.go",
+    ],
+    importpath = "github.com/docker/docker/cli",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/term",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/spf13/cobra",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cli",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,280 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "client",
+    srcs = [
+        "build_cancel.go",
+        "build_prune.go",
+        "checkpoint_create.go",
+        "checkpoint_delete.go",
+        "checkpoint_list.go",
+        "client.go",
+        "client_deprecated.go",
+        "client_unix.go",
+        "client_windows.go",
+        "config_create.go",
+        "config_inspect.go",
+        "config_list.go",
+        "config_remove.go",
+        "config_update.go",
+        "container_attach.go",
+        "container_commit.go",
+        "container_copy.go",
+        "container_create.go",
+        "container_diff.go",
+        "container_exec.go",
+        "container_export.go",
+        "container_inspect.go",
+        "container_kill.go",
+        "container_list.go",
+        "container_logs.go",
+        "container_pause.go",
+        "container_prune.go",
+        "container_remove.go",
+        "container_rename.go",
+        "container_resize.go",
+        "container_restart.go",
+        "container_start.go",
+        "container_stats.go",
+        "container_stop.go",
+        "container_top.go",
+        "container_unpause.go",
+        "container_update.go",
+        "container_wait.go",
+        "disk_usage.go",
+        "distribution_inspect.go",
+        "errors.go",
+        "events.go",
+        "hijack.go",
+        "image_build.go",
+        "image_create.go",
+        "image_history.go",
+        "image_import.go",
+        "image_inspect.go",
+        "image_list.go",
+        "image_load.go",
+        "image_prune.go",
+        "image_pull.go",
+        "image_push.go",
+        "image_remove.go",
+        "image_save.go",
+        "image_search.go",
+        "image_tag.go",
+        "info.go",
+        "interface.go",
+        "interface_experimental.go",
+        "interface_stable.go",
+        "login.go",
+        "network_connect.go",
+        "network_create.go",
+        "network_disconnect.go",
+        "network_inspect.go",
+        "network_list.go",
+        "network_prune.go",
+        "network_remove.go",
+        "node_inspect.go",
+        "node_list.go",
+        "node_remove.go",
+        "node_update.go",
+        "options.go",
+        "ping.go",
+        "plugin_create.go",
+        "plugin_disable.go",
+        "plugin_enable.go",
+        "plugin_inspect.go",
+        "plugin_install.go",
+        "plugin_list.go",
+        "plugin_push.go",
+        "plugin_remove.go",
+        "plugin_set.go",
+        "plugin_upgrade.go",
+        "request.go",
+        "secret_create.go",
+        "secret_inspect.go",
+        "secret_list.go",
+        "secret_remove.go",
+        "secret_update.go",
+        "service_create.go",
+        "service_inspect.go",
+        "service_list.go",
+        "service_logs.go",
+        "service_remove.go",
+        "service_update.go",
+        "swarm_get_unlock_key.go",
+        "swarm_init.go",
+        "swarm_inspect.go",
+        "swarm_join.go",
+        "swarm_leave.go",
+        "swarm_unlock.go",
+        "swarm_update.go",
+        "task_inspect.go",
+        "task_list.go",
+        "task_logs.go",
+        "transport.go",
+        "utils.go",
+        "version.go",
+        "volume_create.go",
+        "volume_inspect.go",
+        "volume_list.go",
+        "volume_prune.go",
+        "volume_remove.go",
+    ],
+    importpath = "github.com/docker/docker/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api",
+        "//api/types",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/image",
+        "//api/types/network",
+        "//api/types/registry",
+        "//api/types/swarm",
+        "//api/types/time",
+        "//api/types/versions",
+        "//api/types/volume",
+        "//errdefs",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/go-connections/sockets",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "client_test",
+    srcs = [
+        "checkpoint_create_test.go",
+        "checkpoint_delete_test.go",
+        "checkpoint_list_test.go",
+        "client_mock_test.go",
+        "client_test.go",
+        "config_create_test.go",
+        "config_inspect_test.go",
+        "config_list_test.go",
+        "config_remove_test.go",
+        "config_update_test.go",
+        "container_commit_test.go",
+        "container_copy_test.go",
+        "container_create_test.go",
+        "container_diff_test.go",
+        "container_exec_test.go",
+        "container_export_test.go",
+        "container_inspect_test.go",
+        "container_kill_test.go",
+        "container_list_test.go",
+        "container_logs_test.go",
+        "container_pause_test.go",
+        "container_prune_test.go",
+        "container_remove_test.go",
+        "container_rename_test.go",
+        "container_resize_test.go",
+        "container_restart_test.go",
+        "container_start_test.go",
+        "container_stats_test.go",
+        "container_stop_test.go",
+        "container_top_test.go",
+        "container_unpause_test.go",
+        "container_update_test.go",
+        "container_wait_test.go",
+        "disk_usage_test.go",
+        "distribution_inspect_test.go",
+        "events_test.go",
+        "hijack_test.go",
+        "image_build_test.go",
+        "image_create_test.go",
+        "image_history_test.go",
+        "image_import_test.go",
+        "image_inspect_test.go",
+        "image_list_test.go",
+        "image_load_test.go",
+        "image_prune_test.go",
+        "image_pull_test.go",
+        "image_push_test.go",
+        "image_remove_test.go",
+        "image_save_test.go",
+        "image_search_test.go",
+        "image_tag_test.go",
+        "info_test.go",
+        "network_connect_test.go",
+        "network_create_test.go",
+        "network_disconnect_test.go",
+        "network_inspect_test.go",
+        "network_list_test.go",
+        "network_prune_test.go",
+        "network_remove_test.go",
+        "node_inspect_test.go",
+        "node_list_test.go",
+        "node_remove_test.go",
+        "node_update_test.go",
+        "options_test.go",
+        "ping_test.go",
+        "plugin_disable_test.go",
+        "plugin_enable_test.go",
+        "plugin_inspect_test.go",
+        "plugin_list_test.go",
+        "plugin_push_test.go",
+        "plugin_remove_test.go",
+        "plugin_set_test.go",
+        "request_test.go",
+        "secret_create_test.go",
+        "secret_inspect_test.go",
+        "secret_list_test.go",
+        "secret_remove_test.go",
+        "secret_update_test.go",
+        "service_create_test.go",
+        "service_inspect_test.go",
+        "service_list_test.go",
+        "service_logs_test.go",
+        "service_remove_test.go",
+        "service_update_test.go",
+        "swarm_get_unlock_key_test.go",
+        "swarm_init_test.go",
+        "swarm_inspect_test.go",
+        "swarm_join_test.go",
+        "swarm_leave_test.go",
+        "swarm_unlock_test.go",
+        "swarm_update_test.go",
+        "task_inspect_test.go",
+        "task_list_test.go",
+        "volume_create_test.go",
+        "volume_inspect_test.go",
+        "volume_list_test.go",
+        "volume_remove_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":client"],
+    deps = [
+        "//api",
+        "//api/server/httputils",
+        "//api/types",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/image",
+        "//api/types/network",
+        "//api/types/registry",
+        "//api/types/swarm",
+        "//api/types/volume",
+        "//errdefs",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/env",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ cmd/dockerd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,195 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "dockerd_lib",
+    srcs = [
+        "config.go",
+        "config_common_unix.go",
+        "config_unix.go",
+        "config_windows.go",
+        "daemon.go",
+        "daemon_freebsd.go",
+        "daemon_linux.go",
+        "daemon_unix.go",
+        "daemon_windows.go",
+        "docker.go",
+        "docker_unix.go",
+        "docker_windows.go",
+        "metrics.go",
+        "options.go",
+        "service_unsupported.go",
+        "service_windows.go",
+    ],
+    importpath = "github.com/docker/docker/cmd/dockerd",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//api",
+        "//api/server",
+        "//api/server/backend/build",
+        "//api/server/middleware",
+        "//api/server/router",
+        "//api/server/router/build",
+        "//api/server/router/checkpoint",
+        "//api/server/router/container",
+        "//api/server/router/distribution",
+        "//api/server/router/grpc",
+        "//api/server/router/image",
+        "//api/server/router/network",
+        "//api/server/router/plugin",
+        "//api/server/router/session",
+        "//api/server/router/swarm",
+        "//api/server/router/system",
+        "//api/server/router/volume",
+        "//builder/builder-next",
+        "//builder/dockerfile",
+        "//cli",
+        "//cli/config",
+        "//cli/debug",
+        "//daemon",
+        "//daemon/cluster",
+        "//daemon/config",
+        "//daemon/listeners",
+        "//dockerversion",
+        "//libcontainerd/supervisor",
+        "//opts",
+        "//pkg/authorization",
+        "//pkg/homedir",
+        "//pkg/jsonmessage",
+        "//pkg/pidfile",
+        "//pkg/plugingetter",
+        "//pkg/reexec",
+        "//pkg/signal",
+        "//pkg/sysinfo",
+        "//pkg/system",
+        "//plugin",
+        "//plugin/executor/containerd",
+        "//registry",
+        "//rootless",
+        "//runconfig",
+        "//vendor/github.com/containerd/containerd/defaults",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/term",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/spf13/cobra",
+        "//vendor/github.com/spf13/pflag",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/coreos/go-systemd/v22/daemon",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/coreos/go-systemd/v22/daemon",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/runtime/v1/linux",
+            "//vendor/github.com/docker/libnetwork/portallocator",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio/pkg/etwlogrus",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/golang.org/x/sys/windows",
+            "//vendor/golang.org/x/sys/windows/svc",
+            "//vendor/golang.org/x/sys/windows/svc/debug",
+            "//vendor/golang.org/x/sys/windows/svc/eventlog",
+            "//vendor/golang.org/x/sys/windows/svc/mgr",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "dockerd",
+    embed = [":dockerd_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "dockerd_test",
+    srcs = [
+        "config_unix_test.go",
+        "daemon_test.go",
+        "daemon_unix_test.go",
+        "options_test.go",
+    ],
+    embed = [":dockerd_lib"],
+    deps = [
+        "//cli/config",
+        "//daemon/config",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/spf13/pflag",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ container/stream/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stream",
+    srcs = [
+        "attach.go",
+        "streams.go",
+    ],
+    importpath = "github.com/docker/docker/container/stream",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/broadcaster",
+        "//pkg/ioutils",
+        "//pkg/pools",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/moby/term",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stream",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ container/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,166 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "container",
+    srcs = [
+        "archive.go",
+        "container.go",
+        "container_unix.go",
+        "container_windows.go",
+        "env.go",
+        "health.go",
+        "history.go",
+        "memory_store.go",
+        "monitor.go",
+        "mounts_unix.go",
+        "mounts_windows.go",
+        "state.go",
+        "store.go",
+        "view.go",
+    ],
+    importpath = "github.com/docker/docker/container",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/swarm",
+        "//container/stream",
+        "//daemon/exec",
+        "//daemon/logger",
+        "//daemon/logger/jsonfilelog",
+        "//daemon/logger/local",
+        "//daemon/logger/loggerutils/cache",
+        "//daemon/network",
+        "//errdefs",
+        "//image",
+        "//layer",
+        "//pkg/archive",
+        "//pkg/containerfs",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/signal",
+        "//pkg/system",
+        "//restartmanager",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/hashicorp/go-memdb",
+        "//vendor/github.com/moby/sys/symlink",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//volume",
+        "//volume/mounts",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":container",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "container_test",
+    srcs = [
+        "container_unit_test.go",
+        "env_test.go",
+        "memory_store_test.go",
+        "state_test.go",
+        "view_test.go",
+    ],
+    embed = [":container"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/swarm",
+        "//daemon/logger/jsonfilelog",
+        "//pkg/signal",
+        "//vendor/github.com/google/uuid",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ contrib/apparmor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "apparmor_lib",
+    srcs = [
+        "main.go",
+        "template.go",
+    ],
+    importpath = "github.com/docker/docker/contrib/apparmor",
+    visibility = ["//visibility:private"],
+    deps = ["//pkg/aaparser"],
+)
+
+go_binary(
+    name = "apparmor",
+    embed = [":apparmor_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ contrib/docker-device-tool/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,86 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "docker-device-tool_lib",
+    srcs = [
+        "device_tool.go",
+        "device_tool_windows.go",
+    ],
+    importpath = "github.com/docker/docker/contrib/docker-device-tool",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//daemon/graphdriver/devmapper",
+            "//pkg/devicemapper",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "docker-device-tool",
+    embed = [":docker-device-tool_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ contrib/httpserver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "httpserver_lib",
+    srcs = ["server.go"],
+    importpath = "github.com/docker/docker/contrib/httpserver",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "httpserver",
+    embed = [":httpserver_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/cluster/controllers/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "plugin",
+    srcs = ["controller.go"],
+    importpath = "github.com/docker/docker/daemon/cluster/controllers/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/swarm/runtime",
+        "//errdefs",
+        "//plugin",
+        "//plugin/v2:plugin",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "plugin_test",
+    srcs = ["controller_test.go"],
+    embed = [":plugin"],
+    deps = [
+        "//api/types",
+        "//api/types/swarm/runtime",
+        "//pkg/pubsub",
+        "//plugin",
+        "//plugin/v2:plugin",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/cluster/convert/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,59 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "convert",
+    srcs = [
+        "config.go",
+        "container.go",
+        "network.go",
+        "node.go",
+        "secret.go",
+        "service.go",
+        "swarm.go",
+        "task.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/cluster/convert",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/swarm",
+        "//api/types/swarm/runtime",
+        "//pkg/namesgenerator",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/genericresource",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":convert",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "convert_test",
+    srcs = [
+        "network_test.go",
+        "service_test.go",
+    ],
+    embed = [":convert"],
+    deps = [
+        "//api/types/container",
+        "//api/types/swarm",
+        "//api/types/swarm/runtime",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/cluster/executor/container/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,133 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "container",
+    srcs = [
+        "adapter.go",
+        "attachment.go",
+        "container.go",
+        "controller.go",
+        "errors.go",
+        "executor.go",
+        "validate.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/cluster/executor/container",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/swarm",
+        "//api/types/volume",
+        "//container",
+        "//daemon",
+        "//daemon/cluster/controllers/plugin",
+        "//daemon/cluster/convert",
+        "//daemon/cluster/executor",
+        "//daemon/cluster/provider",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/docker/libnetwork",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/docker/swarmkit/agent",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/genericresource",
+        "//vendor/github.com/docker/swarmkit/api/naming",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/template",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/time/rate",
+        "//volume/service/opts",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":container",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "container_test",
+    srcs = [
+        "adapter_test.go",
+        "container_test.go",
+        "health_test.go",
+        "validate_test.go",
+        "validate_unix_test.go",
+        "validate_windows_test.go",
+    ],
+    embed = [":container"],
+    deps = [
+        "//api/types/container",
+        "//daemon",
+        "//pkg/stringid",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/gotest.tools/v3/assert",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//container",
+            "//daemon/events",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//container",
+            "//daemon/events",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/cluster/executor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "executor",
+    srcs = ["backend.go"],
+    importpath = "github.com/docker/docker/daemon/cluster/executor",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/network",
+        "//api/types/swarm",
+        "//container",
+        "//daemon/cluster/provider",
+        "//daemon/network",
+        "//plugin",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/libnetwork",
+        "//vendor/github.com/docker/libnetwork/cluster",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//volume/service/opts",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":executor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/cluster/provider/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "provider",
+    srcs = ["network.go"],
+    importpath = "github.com/docker/docker/daemon/cluster/provider",
+    visibility = ["//visibility:public"],
+    deps = ["//api/types"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":provider",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/cluster/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,78 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cluster",
+    srcs = [
+        "cluster.go",
+        "configs.go",
+        "errors.go",
+        "filters.go",
+        "helpers.go",
+        "listen_addr.go",
+        "listen_addr_linux.go",
+        "listen_addr_others.go",
+        "networks.go",
+        "noderunner.go",
+        "nodes.go",
+        "secrets.go",
+        "services.go",
+        "swarm.go",
+        "tasks.go",
+        "utils.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/cluster",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/filters",
+        "//api/types/network",
+        "//api/types/swarm",
+        "//api/types/time",
+        "//daemon/cluster/controllers/plugin",
+        "//daemon/cluster/convert",
+        "//daemon/cluster/executor",
+        "//daemon/cluster/executor/container",
+        "//daemon/network",
+        "//errdefs",
+        "//opts",
+        "//pkg/ioutils",
+        "//pkg/signal",
+        "//runconfig",
+        "//runconfig/opts",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/libnetwork/cluster",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/cnmallocator",
+        "//vendor/github.com/docker/swarmkit/manager/encryption",
+        "//vendor/github.com/docker/swarmkit/node",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/vishvananda/netlink",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/vishvananda/netlink",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cluster",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "cluster_test",
+    srcs = ["filters_test.go"],
+    embed = [":cluster"],
+    deps = ["//api/types/filters"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,135 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "config",
+    srcs = [
+        "builder.go",
+        "config.go",
+        "config_common_unix.go",
+        "config_unix.go",
+        "config_windows.go",
+        "opts.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/config",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//daemon/cluster/convert",
+        "//daemon/discovery",
+        "//opts",
+        "//pkg/authorization",
+        "//pkg/discovery",
+        "//registry",
+        "//vendor/github.com/docker/swarmkit/api/genericresource",
+        "//vendor/github.com/imdario/mergo",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/spf13/pflag",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types",
+            "//api/types/container",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types",
+            "//api/types/container",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types",
+            "//api/types/container",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//api/types",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "config_test",
+    srcs = [
+        "builder_test.go",
+        "config_common_unix_test.go",
+        "config_test.go",
+        "config_unix_test.go",
+        "config_windows_test.go",
+    ],
+    embed = [":config"],
+    deps = [
+        "//api/types/filters",
+        "//daemon/discovery",
+        "//opts",
+        "//vendor/github.com/docker/libnetwork/ipamutils",
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/github.com/spf13/pflag",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//api/types",
+            "//vendor/github.com/docker/go-units",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/discovery/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "discovery",
+    srcs = ["discovery.go"],
+    importpath = "github.com/docker/docker/daemon/discovery",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/discovery",
+        "//pkg/discovery/kv",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":discovery",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "discovery_test",
+    srcs = ["discovery_test.go"],
+    embed = [":discovery"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/events/testutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testutils",
+    srcs = ["testutils.go"],
+    importpath = "github.com/docker/docker/daemon/events/testutils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/events",
+        "//api/types/time",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":testutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/events/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "events",
+    srcs = [
+        "events.go",
+        "filter.go",
+        "metrics.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/events",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/events",
+        "//api/types/filters",
+        "//pkg/pubsub",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/go-metrics",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":events",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "events_test",
+    srcs = ["events_test.go"],
+    embed = [":events"],
+    deps = [
+        "//api/types/events",
+        "//api/types/time",
+        "//daemon/events/testutils",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/exec/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exec",
+    srcs = ["exec.go"],
+    importpath = "github.com/docker/docker/daemon/exec",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//container/stream",
+        "//pkg/stringid",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":exec",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/aufs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,81 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "aufs",
+    srcs = [
+        "aufs.go",
+        "dirs.go",
+        "mount.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/aufs",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//pkg/archive",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/directory",
+            "//pkg/idtools",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vbatts/tar-split/tar/storage",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//pkg/archive",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/directory",
+            "//pkg/idtools",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vbatts/tar-split/tar/storage",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":aufs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "aufs_test",
+    srcs = ["aufs_test.go"],
+    embed = [":aufs"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//pkg/archive",
+            "//pkg/reexec",
+            "//pkg/stringid",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//pkg/archive",
+            "//pkg/reexec",
+            "//pkg/stringid",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/btrfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,67 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "btrfs",
+    srcs = [
+        "btrfs.go",
+        "dummy_unsupported.go",
+        "version.go",
+    ],
+    cgo = True,
+    importpath = "github.com/docker/docker/daemon/graphdriver/btrfs",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//pkg/system",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//pkg/system",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":btrfs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "btrfs_test",
+    srcs = [
+        "btrfs_test.go",
+        "version_test.go",
+    ],
+    embed = [":btrfs"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/graphtest",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/graphtest",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/copy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "copy",
+    srcs = ["copy.go"],
+    importpath = "github.com/docker/docker/daemon/graphdriver/copy",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/pools",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/pools",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":copy",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "copy_test",
+    srcs = ["copy_test.go"],
+    embed = [":copy"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/system",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/system",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/devmapper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,80 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "devmapper",
+    srcs = [
+        "device_setup.go",
+        "deviceset.go",
+        "devmapper_doc.go",
+        "driver.go",
+        "mount.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/devmapper",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//dockerversion",
+            "//pkg/containerfs",
+            "//pkg/devicemapper",
+            "//pkg/dmesg",
+            "//pkg/idtools",
+            "//pkg/loopback",
+            "//pkg/parsers",
+            "//pkg/parsers/kernel",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//dockerversion",
+            "//pkg/containerfs",
+            "//pkg/devicemapper",
+            "//pkg/dmesg",
+            "//pkg/idtools",
+            "//pkg/loopback",
+            "//pkg/parsers",
+            "//pkg/parsers/kernel",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":devmapper",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "devmapper_test",
+    srcs = ["devmapper_test.go"],
+    embed = [":devmapper"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/parsers/kernel",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/parsers/kernel",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/fuse-overlayfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,78 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "fuse-overlayfs",
+    srcs = [
+        "fuseoverlayfs.go",
+        "fuseoverlayfs_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/fuse-overlayfs",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/overlayutils",
+            "//pkg/archive",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/directory",
+            "//pkg/idtools",
+            "//pkg/parsers/kernel",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/overlayutils",
+            "//pkg/archive",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/directory",
+            "//pkg/idtools",
+            "//pkg/parsers/kernel",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fuse-overlayfs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "fuse-overlayfs_test",
+    srcs = ["fuseoverlayfs_test.go"],
+    embed = [":fuse-overlayfs"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/archive",
+            "//pkg/reexec",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/archive",
+            "//pkg/reexec",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/graphtest/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "graphtest",
+    srcs = [
+        "graphbench_unix.go",
+        "graphtest_unix.go",
+        "graphtest_windows.go",
+        "testutil.go",
+        "testutil_unix.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/graphtest",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/graphdriver",
+        "//pkg/archive",
+        "//pkg/stringid",
+        "//vendor/github.com/containerd/continuity/driver",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//quota",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//quota",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//quota",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":graphtest",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/lcow/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "lcow",
+    srcs = [
+        "lcow.go",
+        "lcow_svm.go",
+        "remotefs.go",
+        "remotefs_file.go",
+        "remotefs_filedriver.go",
+        "remotefs_pathdriver.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/lcow",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//daemon/graphdriver",
+            "//pkg/archive",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/ioutils",
+            "//pkg/reexec",
+            "//vendor/github.com/Microsoft/go-winio/pkg/security",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/ext4/tar2ext4",
+            "//vendor/github.com/Microsoft/opengcs/client",
+            "//vendor/github.com/Microsoft/opengcs/service/gcsutils/remotefs",
+            "//vendor/github.com/containerd/continuity/driver",
+            "//vendor/github.com/containerd/continuity/pathdriver",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":lcow",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/overlay/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,72 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "overlay",
+    srcs = [
+        "overlay.go",
+        "overlay_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/overlay",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/copy",
+            "//daemon/graphdriver/overlayutils",
+            "//pkg/archive",
+            "//pkg/containerfs",
+            "//pkg/fsutils",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//pkg/system",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/copy",
+            "//daemon/graphdriver/overlayutils",
+            "//pkg/archive",
+            "//pkg/containerfs",
+            "//pkg/fsutils",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//pkg/system",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":overlay",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "overlay_test",
+    srcs = ["overlay_test.go"],
+    embed = [":overlay"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/archive",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/archive",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/overlay2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,88 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "overlay2",
+    srcs = [
+        "check.go",
+        "mount.go",
+        "overlay.go",
+        "overlay_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/overlay2",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/overlayutils",
+            "//pkg/archive",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/directory",
+            "//pkg/fsutils",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//pkg/reexec",
+            "//pkg/system",
+            "//quota",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/overlayutils",
+            "//pkg/archive",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/directory",
+            "//pkg/fsutils",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//pkg/reexec",
+            "//pkg/system",
+            "//quota",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/locker",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":overlay2",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "overlay2_test",
+    srcs = ["overlay_test.go"],
+    embed = [":overlay2"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/archive",
+            "//pkg/reexec",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//daemon/graphdriver/graphtest",
+            "//pkg/archive",
+            "//pkg/reexec",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/overlayutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "overlayutils",
+    srcs = [
+        "overlayutils.go",
+        "randomid.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/overlayutils",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":overlayutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/register/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,55 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "register",
+    srcs = [
+        "register_aufs.go",
+        "register_btrfs.go",
+        "register_devicemapper.go",
+        "register_fuseoverlayfs.go",
+        "register_overlay.go",
+        "register_overlay2.go",
+        "register_vfs.go",
+        "register_windows.go",
+        "register_zfs.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/register",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/graphdriver/vfs",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/aufs",
+            "//daemon/graphdriver/btrfs",
+            "//daemon/graphdriver/devmapper",
+            "//daemon/graphdriver/fuse-overlayfs",
+            "//daemon/graphdriver/overlay",
+            "//daemon/graphdriver/overlay2",
+            "//daemon/graphdriver/zfs",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//daemon/graphdriver/zfs",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/aufs",
+            "//daemon/graphdriver/btrfs",
+            "//daemon/graphdriver/devmapper",
+            "//daemon/graphdriver/fuse-overlayfs",
+            "//daemon/graphdriver/overlay",
+            "//daemon/graphdriver/overlay2",
+            "//daemon/graphdriver/zfs",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//daemon/graphdriver/lcow",
+            "//daemon/graphdriver/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":register",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/vfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,96 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "vfs",
+    srcs = [
+        "copy_linux.go",
+        "copy_unsupported.go",
+        "driver.go",
+        "quota_linux.go",
+        "quota_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/vfs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/graphdriver",
+        "//errdefs",
+        "//pkg/containerfs",
+        "//pkg/idtools",
+        "//pkg/parsers",
+        "//pkg/system",
+        "//quota",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/copy",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/copy",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/chrootarchive",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//pkg/chrootarchive",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":vfs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "vfs_test",
+    srcs = ["vfs_test.go"],
+    embed = [":vfs"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/graphtest",
+            "//pkg/reexec",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/graphtest",
+            "//pkg/reexec",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "windows",
+    srcs = ["windows.go"],
+    importpath = "github.com/docker/docker/daemon/graphdriver/windows",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//daemon/graphdriver",
+            "//pkg/archive",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/ioutils",
+            "//pkg/longpath",
+            "//pkg/reexec",
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/Microsoft/go-winio/backuptar",
+            "//vendor/github.com/Microsoft/go-winio/vhd",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":windows",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/zfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,77 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "zfs",
+    srcs = [
+        "zfs.go",
+        "zfs_freebsd.go",
+        "zfs_linux.go",
+        "zfs_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver/zfs",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//vendor/github.com/mistifyio/go-zfs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//daemon/graphdriver",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//vendor/github.com/mistifyio/go-zfs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/parsers",
+            "//vendor/github.com/mistifyio/go-zfs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":zfs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "zfs_test",
+    srcs = ["zfs_test.go"],
+    embed = [":zfs"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/graphtest",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/graphtest",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/graphdriver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,60 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "graphdriver",
+    srcs = [
+        "counter.go",
+        "driver.go",
+        "driver_freebsd.go",
+        "driver_linux.go",
+        "driver_unsupported.go",
+        "driver_windows.go",
+        "errors.go",
+        "fsdiff.go",
+        "plugin.go",
+        "proxy.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/graphdriver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//errdefs",
+        "//pkg/archive",
+        "//pkg/chrootarchive",
+        "//pkg/containerfs",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//plugin/v2:plugin",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vbatts/tar-split/tar/storage",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":graphdriver",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "graphdriver_test",
+    srcs = ["driver_test.go"],
+    embed = [":graphdriver"],
+    deps = ["//vendor/gotest.tools/v3/assert"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/images/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,114 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "images",
+    srcs = [
+        "cache.go",
+        "image.go",
+        "image_builder.go",
+        "image_commit.go",
+        "image_delete.go",
+        "image_events.go",
+        "image_exporter.go",
+        "image_history.go",
+        "image_import.go",
+        "image_inspect.go",
+        "image_prune.go",
+        "image_pull.go",
+        "image_push.go",
+        "image_search.go",
+        "image_tag.go",
+        "image_unix.go",
+        "image_windows.go",
+        "images.go",
+        "locals.go",
+        "service.go",
+        "store.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/images",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/image",
+        "//api/types/registry",
+        "//api/types/time",
+        "//builder",
+        "//builder/dockerfile",
+        "//builder/remotecontext",
+        "//container",
+        "//daemon/events",
+        "//distribution",
+        "//distribution/metadata",
+        "//distribution/utils",
+        "//distribution/xfer",
+        "//dockerversion",
+        "//errdefs",
+        "//image",
+        "//image/cache",
+        "//image/tarexport",
+        "//layer",
+        "//pkg/archive",
+        "//pkg/containerfs",
+        "//pkg/ioutils",
+        "//pkg/progress",
+        "//pkg/streamformatter",
+        "//pkg/stringid",
+        "//pkg/system",
+        "//reference",
+        "//registry",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest/schema2",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/libtrust",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":images",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "images_test",
+    srcs = [
+        "image_search_test.go",
+        "images_test.go",
+        "store_test.go",
+    ],
+    embed = [":images"],
+    deps = [
+        "//api/types",
+        "//api/types/registry",
+        "//image",
+        "//registry",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/local",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/metadata",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/initlayer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "initlayer",
+    srcs = [
+        "setup_unix.go",
+        "setup_windows.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/initlayer",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//pkg/containerfs",
+            "//pkg/idtools",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":initlayer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/links/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "links",
+    srcs = ["links.go"],
+    importpath = "github.com/docker/docker/daemon/links",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/go-connections/nat"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":links",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "links_test",
+    srcs = ["links_test.go"],
+    embed = [":links"],
+    deps = ["//vendor/github.com/docker/go-connections/nat"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/listeners/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,75 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "listeners",
+    srcs = [
+        "group_unix.go",
+        "listeners_linux.go",
+        "listeners_windows.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/listeners",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/homedir",
+            "//pkg/idtools",
+            "//vendor/github.com/coreos/go-systemd/v22/activation",
+            "//vendor/github.com/docker/go-connections/sockets",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/homedir",
+            "//pkg/idtools",
+            "//vendor/github.com/coreos/go-systemd/v22/activation",
+            "//vendor/github.com/docker/go-connections/sockets",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/idtools",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/docker/go-connections/sockets",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":listeners",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/awslogs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,49 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "awslogs",
+    srcs = ["cloudwatchlogs.go"],
+    importpath = "github.com/docker/docker/daemon/logger/awslogs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//dockerversion",
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials/endpointcreds",
+        "//vendor/github.com/aws/aws-sdk-go/aws/ec2metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/aws/session",
+        "//vendor/github.com/aws/aws-sdk-go/service/cloudwatchlogs",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":awslogs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "awslogs_test",
+    srcs = [
+        "cloudwatchlogs_test.go",
+        "cwlogsiface_mock_test.go",
+    ],
+    embed = [":awslogs"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//dockerversion",
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/service/cloudwatchlogs",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/etwlogs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "etwlogs",
+    srcs = ["etwlogs_windows.go"],
+    importpath = "github.com/docker/docker/daemon/logger/etwlogs",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//daemon/logger",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":etwlogs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/fluentd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fluentd",
+    srcs = ["fluentd.go"],
+    importpath = "github.com/docker/docker/daemon/logger/fluentd",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//errdefs",
+        "//pkg/urlutil",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/fluent/fluent-logger-golang/fluent",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fluentd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/gcplogs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gcplogs",
+    srcs = [
+        "gcplogging.go",
+        "gcplogging_linux.go",
+        "gcplogging_others.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger/gcplogs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//vendor/cloud.google.com/go/compute/metadata",
+        "//vendor/cloud.google.com/go/logging",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/genproto/googleapis/api/monitoredres",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//dockerversion",
+            "//pkg/homedir",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//dockerversion",
+            "//pkg/homedir",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gcplogs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/gelf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "gelf",
+    srcs = ["gelf.go"],
+    importpath = "github.com/docker/docker/daemon/logger/gelf",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//pkg/urlutil",
+        "//vendor/github.com/Graylog2/go-gelf/gelf",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gelf",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "gelf_test",
+    srcs = ["gelf_test.go"],
+    embed = [":gelf"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/logger",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/logger",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/journald/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "journald",
+    srcs = [
+        "journald.go",
+        "journald_unsupported.go",
+        "read_unsupported.go",
+    ],
+    cgo = True,
+    importpath = "github.com/docker/docker/daemon/logger/journald",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/logger",
+            "//daemon/logger/loggerutils",
+            "//vendor/github.com/coreos/go-systemd/v22/journal",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/logger",
+            "//daemon/logger/loggerutils",
+            "//vendor/github.com/coreos/go-systemd/v22/journal",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":journald",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "journald_test",
+    srcs = ["journald_test.go"],
+    embed = [":journald"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/jsonfilelog/jsonlog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "jsonlog",
+    srcs = [
+        "jsonlog.go",
+        "jsonlogbytes.go",
+        "time_marshalling.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonlog",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "jsonlog_test",
+    srcs = [
+        "jsonlogbytes_test.go",
+        "time_marshalling_test.go",
+    ],
+    embed = [":jsonlog"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/jsonfilelog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,44 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "jsonfilelog",
+    srcs = [
+        "jsonfilelog.go",
+        "read.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger/jsonfilelog",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/backend",
+        "//daemon/logger",
+        "//daemon/logger/jsonfilelog/jsonlog",
+        "//daemon/logger/loggerutils",
+        "//pkg/tailfile",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonfilelog",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "jsonfilelog_test",
+    srcs = [
+        "jsonfilelog_test.go",
+        "read_test.go",
+    ],
+    embed = [":jsonfilelog"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/jsonfilelog/jsonlog",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,44 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "local",
+    srcs = [
+        "config.go",
+        "doc.go",
+        "local.go",
+        "read.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/backend",
+        "//api/types/plugins/logdriver",
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//errdefs",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "local_test",
+    srcs = ["local_test.go"],
+    embed = [":local"],
+    deps = [
+        "//api/types/backend",
+        "//api/types/plugins/logdriver",
+        "//daemon/logger",
+        "//vendor/github.com/gogo/protobuf/io",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/logentries/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logentries",
+    srcs = ["logentries.go"],
+    importpath = "github.com/docker/docker/daemon/logger/logentries",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//vendor/github.com/bsphere/le_go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logentries",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/loggerutils/cache/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cache",
+    srcs = [
+        "local_cache.go",
+        "validate.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger/loggerutils/cache",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//daemon/logger",
+        "//daemon/logger/local",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cache",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "cache_test",
+    srcs = ["log_cache_test.go"],
+    embed = [":cache"],
+    deps = [
+        "//daemon/logger",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/loggerutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "loggerutils",
+    srcs = [
+        "file_unix.go",
+        "file_windows.go",
+        "log_tag.go",
+        "logfile.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger/loggerutils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/templates",
+        "//pkg/filenotify",
+        "//pkg/pools",
+        "//pkg/pubsub",
+        "//vendor/github.com/fsnotify/fsnotify",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":loggerutils",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "loggerutils_test",
+    srcs = [
+        "file_windows_test.go",
+        "log_tag_test.go",
+        "logfile_test.go",
+    ],
+    embed = [":loggerutils"],
+    deps = [
+        "//daemon/logger",
+        "//pkg/pubsub",
+        "//pkg/tailfile",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/poll",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/splunk/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "splunk",
+    srcs = ["splunk.go"],
+    importpath = "github.com/docker/docker/daemon/logger/splunk",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//pkg/pools",
+        "//pkg/urlutil",
+        "//vendor/github.com/google/uuid",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":splunk",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "splunk_test",
+    srcs = [
+        "splunk_test.go",
+        "splunkhecmock_test.go",
+    ],
+    embed = [":splunk"],
+    deps = [
+        "//daemon/logger",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/env",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/syslog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "syslog",
+    srcs = ["syslog.go"],
+    importpath = "github.com/docker/docker/daemon/logger/syslog",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/logger",
+        "//daemon/logger/loggerutils",
+        "//pkg/urlutil",
+        "//vendor/github.com/RackSec/srslog",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":syslog",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "syslog_test",
+    srcs = ["syslog_test.go"],
+    embed = [":syslog"],
+    deps = ["//vendor/github.com/RackSec/srslog"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/templates/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "templates",
+    srcs = ["templates.go"],
+    importpath = "github.com/docker/docker/daemon/logger/templates",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":templates",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "templates_test",
+    srcs = ["templates_test.go"],
+    embed = [":templates"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/logger/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,73 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "logger",
+    srcs = [
+        "adapter.go",
+        "copier.go",
+        "factory.go",
+        "log_cache_opts.go",
+        "logger.go",
+        "loginfo.go",
+        "metrics.go",
+        "plugin.go",
+        "plugin_unix.go",
+        "plugin_unsupported.go",
+        "proxy.go",
+        "ring.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/logger",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/plugins/logdriver",
+        "//errdefs",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//pkg/stringid",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logger",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "logger_test",
+    srcs = [
+        "adapter_test.go",
+        "copier_test.go",
+        "logger_test.go",
+        "ring_test.go",
+    ],
+    embed = [":logger"],
+    deps = [
+        "//api/types/backend",
+        "//api/types/plugins/logdriver",
+        "//vendor/github.com/gogo/protobuf/io",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/names/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "names",
+    srcs = ["names.go"],
+    importpath = "github.com/docker/docker/daemon/names",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":names",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/network/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,89 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "network",
+    srcs = [
+        "filter.go",
+        "settings.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/network",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/network",
+        "//daemon/cluster/provider",
+        "//errdefs",
+        "//runconfig",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":network",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "network_test",
+    srcs = ["filter_test.go"],
+    embed = [":network"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//api/types",
+            "//api/types/filters",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/stats/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,66 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "collector.go",
+        "collector_unix.go",
+        "collector_windows.go",
+    ],
+    importpath = "github.com/docker/docker/daemon/stats",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//container",
+        "//pkg/pubsub",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stats",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ daemon/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,651 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "daemon",
+    srcs = [
+        "apparmor_default.go",
+        "apparmor_default_unsupported.go",
+        "archive.go",
+        "archive_tarcopyoptions.go",
+        "archive_tarcopyoptions_unix.go",
+        "archive_tarcopyoptions_windows.go",
+        "archive_unix.go",
+        "archive_windows.go",
+        "attach.go",
+        "auth.go",
+        "changes.go",
+        "checkpoint.go",
+        "cluster.go",
+        "commit.go",
+        "configs.go",
+        "configs_linux.go",
+        "configs_unsupported.go",
+        "configs_windows.go",
+        "container.go",
+        "container_linux.go",
+        "container_operations.go",
+        "container_operations_unix.go",
+        "container_operations_windows.go",
+        "container_windows.go",
+        "content.go",
+        "create.go",
+        "create_unix.go",
+        "create_windows.go",
+        "daemon.go",
+        "daemon_linux.go",
+        "daemon_unix.go",
+        "daemon_unsupported.go",
+        "daemon_windows.go",
+        "debugtrap_unix.go",
+        "debugtrap_unsupported.go",
+        "debugtrap_windows.go",
+        "delete.go",
+        "dependency.go",
+        "devices_linux.go",
+        "disk_usage.go",
+        "errors.go",
+        "events.go",
+        "exec.go",
+        "exec_linux.go",
+        "exec_windows.go",
+        "export.go",
+        "health.go",
+        "info.go",
+        "info_unix.go",
+        "info_windows.go",
+        "inspect.go",
+        "inspect_linux.go",
+        "inspect_windows.go",
+        "keys.go",
+        "keys_unsupported.go",
+        "kill.go",
+        "licensing.go",
+        "links.go",
+        "list.go",
+        "list_unix.go",
+        "list_windows.go",
+        "logdrivers_linux.go",
+        "logdrivers_windows.go",
+        "logs.go",
+        "metrics.go",
+        "metrics_unix.go",
+        "metrics_unsupported.go",
+        "monitor.go",
+        "mounts.go",
+        "names.go",
+        "network.go",
+        "network_windows.go",
+        "nvidia_linux.go",
+        "oci_linux.go",
+        "oci_utils.go",
+        "oci_windows.go",
+        "pause.go",
+        "prune.go",
+        "reload.go",
+        "reload_unix.go",
+        "reload_windows.go",
+        "rename.go",
+        "resize.go",
+        "restart.go",
+        "runtime_unix.go",
+        "runtime_windows.go",
+        "seccomp_disabled.go",
+        "seccomp_unsupported.go",
+        "secrets.go",
+        "secrets_linux.go",
+        "secrets_unsupported.go",
+        "secrets_windows.go",
+        "start.go",
+        "start_unix.go",
+        "start_windows.go",
+        "stats.go",
+        "stats_collector.go",
+        "stats_unix.go",
+        "stats_windows.go",
+        "stop.go",
+        "top_unix.go",
+        "top_windows.go",
+        "trustkey.go",
+        "unpause.go",
+        "update.go",
+        "update_linux.go",
+        "update_windows.go",
+        "volumes.go",
+        "volumes_linux.go",
+        "volumes_unix.go",
+        "volumes_windows.go",
+        "wait.go",
+        "workdir.go",
+    ],
+    importpath = "github.com/docker/docker/daemon",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api",
+        "//api/types",
+        "//api/types/backend",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/strslice",
+        "//api/types/swarm",
+        "//api/types/time",
+        "//api/types/versions",
+        "//api/types/versions/v1p20",
+        "//builder",
+        "//builder/dockerfile",
+        "//cli/debug",
+        "//container",
+        "//container/stream",
+        "//daemon/cluster/provider",
+        "//daemon/config",
+        "//daemon/discovery",
+        "//daemon/events",
+        "//daemon/exec",
+        "//daemon/graphdriver/register",
+        "//daemon/images",
+        "//daemon/logger",
+        "//daemon/logger/loggerutils/cache",
+        "//daemon/names",
+        "//daemon/network",
+        "//daemon/stats",
+        "//distribution/metadata",
+        "//dockerversion",
+        "//errdefs",
+        "//image",
+        "//layer",
+        "//libcontainerd",
+        "//libcontainerd/types",
+        "//oci/caps",
+        "//opts",
+        "//pkg/archive",
+        "//pkg/chrootarchive",
+        "//pkg/fileutils",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/namesgenerator",
+        "//pkg/parsers/kernel",
+        "//pkg/parsers/operatingsystem",
+        "//pkg/platform",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//pkg/pools",
+        "//pkg/signal",
+        "//pkg/stdcopy",
+        "//pkg/stringid",
+        "//pkg/sysinfo",
+        "//pkg/system",
+        "//pkg/truncindex",
+        "//plugin",
+        "//plugin/executor/containerd",
+        "//reference",
+        "//registry",
+        "//restartmanager",
+        "//runconfig",
+        "//vendor/github.com/containerd/containerd",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/local",
+        "//vendor/github.com/containerd/containerd/defaults",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/metadata",
+        "//vendor/github.com/containerd/containerd/pkg/dialer",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/containerd/containerd/sys",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/libnetwork",
+        "//vendor/github.com/docker/libnetwork/cluster",
+        "//vendor/github.com/docker/libnetwork/config",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/networkdb",
+        "//vendor/github.com/docker/libnetwork/options",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/docker/libtrust",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/moby/buildkit/cmd/buildkitd/config",
+        "//vendor/github.com/moby/buildkit/util/resolver",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/moby/term",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/opencontainers/selinux/go-selinux",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/prometheus/client_golang/prometheus",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/golang.org/x/sync/semaphore",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/backoff",
+        "//vendor/google.golang.org/grpc/status",
+        "//volume",
+        "//volume/mounts",
+        "//volume/service",
+        "//volume/service/opts",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types/blkiodev",
+            "//api/types/versions/v1p19",
+            "//daemon/initlayer",
+            "//daemon/links",
+            "//daemon/logger/awslogs",
+            "//daemon/logger/fluentd",
+            "//daemon/logger/gcplogs",
+            "//daemon/logger/gelf",
+            "//daemon/logger/journald",
+            "//daemon/logger/jsonfilelog",
+            "//daemon/logger/local",
+            "//daemon/logger/logentries",
+            "//daemon/logger/splunk",
+            "//daemon/logger/syslog",
+            "//oci",
+            "//pkg/capabilities",
+            "//pkg/containerfs",
+            "//pkg/parsers",
+            "//profiles/apparmor",
+            "//rootless/specconv",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/cgroups/stats/v1:stats",
+            "//vendor/github.com/containerd/cgroups/v2/stats",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/contrib/nvidia",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/docker/libnetwork/drivers/bridge",
+            "//vendor/github.com/docker/libnetwork/netutils",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/runc/libcontainer/apparmor",
+            "//vendor/github.com/opencontainers/runc/libcontainer/cgroups",
+            "//vendor/github.com/opencontainers/runc/libcontainer/devices",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types/blkiodev",
+            "//daemon/initlayer",
+            "//daemon/links",
+            "//oci",
+            "//pkg/containerfs",
+            "//pkg/parsers",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/cgroups/stats/v1:stats",
+            "//vendor/github.com/containerd/cgroups/v2/stats",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/docker/libnetwork/drivers/bridge",
+            "//vendor/github.com/docker/libnetwork/netutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types/blkiodev",
+            "//api/types/versions/v1p19",
+            "//daemon/initlayer",
+            "//daemon/links",
+            "//daemon/logger/awslogs",
+            "//daemon/logger/fluentd",
+            "//daemon/logger/gcplogs",
+            "//daemon/logger/gelf",
+            "//daemon/logger/journald",
+            "//daemon/logger/jsonfilelog",
+            "//daemon/logger/local",
+            "//daemon/logger/logentries",
+            "//daemon/logger/splunk",
+            "//daemon/logger/syslog",
+            "//oci",
+            "//pkg/capabilities",
+            "//pkg/containerfs",
+            "//pkg/parsers",
+            "//profiles/apparmor",
+            "//rootless/specconv",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/cgroups/stats/v1:stats",
+            "//vendor/github.com/containerd/cgroups/v2/stats",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/contrib/nvidia",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/docker/libnetwork/drivers/bridge",
+            "//vendor/github.com/docker/libnetwork/netutils",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/runc/libcontainer/apparmor",
+            "//vendor/github.com/opencontainers/runc/libcontainer/cgroups",
+            "//vendor/github.com/opencontainers/runc/libcontainer/devices",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//oci",
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//daemon/logger/awslogs",
+            "//daemon/logger/etwlogs",
+            "//daemon/logger/fluentd",
+            "//daemon/logger/gcplogs",
+            "//daemon/logger/gelf",
+            "//daemon/logger/jsonfilelog",
+            "//daemon/logger/logentries",
+            "//daemon/logger/splunk",
+            "//daemon/logger/syslog",
+            "//oci",
+            "//pkg/containerfs",
+            "//pkg/parsers",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/cmd/containerd-shim-runhcs-v1/options",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/Microsoft/opengcs/client",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/drivers/windows",
+            "//vendor/golang.org/x/sys/windows",
+            "//vendor/golang.org/x/sys/windows/registry",
+            "//vendor/golang.org/x/sys/windows/svc/mgr",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":daemon",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "daemon_test",
+    srcs = [
+        "container_unix_test.go",
+        "create_test.go",
+        "daemon_linux_test.go",
+        "daemon_test.go",
+        "daemon_unix_test.go",
+        "daemon_windows_test.go",
+        "delete_test.go",
+        "events_test.go",
+        "exec_linux_test.go",
+        "health_test.go",
+        "info_test.go",
+        "info_unix_test.go",
+        "inspect_test.go",
+        "licensing_test.go",
+        "list_test.go",
+        "logs_test.go",
+        "oci_linux_test.go",
+        "oci_windows_test.go",
+        "reload_test.go",
+        "resize_test.go",
+        "top_unix_test.go",
+        "trustkey_test.go",
+        "util_test.go",
+        "volumes_linux_test.go",
+        "volumes_unit_test.go",
+        "volumes_unix_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":daemon"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/network",
+        "//container",
+        "//daemon/config",
+        "//daemon/events",
+        "//daemon/exec",
+        "//daemon/images",
+        "//dockerversion",
+        "//errdefs",
+        "//image",
+        "//pkg/discovery",
+        "//pkg/discovery/memory",
+        "//pkg/idtools",
+        "//pkg/truncindex",
+        "//registry",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/libnetwork",
+        "//vendor/github.com/google/uuid",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+        "//volume/mounts",
+        "//volume/service",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//daemon/network",
+            "//libcontainerd/types",
+            "//pkg/containerfs",
+            "//pkg/sysinfo",
+            "//vendor/github.com/containerd/containerd",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/runc/libcontainer/apparmor",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//daemon/network",
+            "//libcontainerd/types",
+            "//pkg/containerfs",
+            "//pkg/sysinfo",
+            "//vendor/github.com/containerd/containerd",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/runc/libcontainer/apparmor",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//api/types/blkiodev",
+            "//api/types/mount",
+            "//pkg/sysinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/docker/swarmkit/agent",
+            "//vendor/github.com/docker/swarmkit/api",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/golang.org/x/sys/windows/registry",
+            "//vendor/golang.org/x/sys/windows/svc/mgr",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ distribution/metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "metadata",
+    srcs = [
+        "metadata.go",
+        "v1_id_service.go",
+        "v2_metadata_service.go",
+    ],
+    importpath = "github.com/docker/docker/distribution/metadata",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//image/v1:image",
+        "//layer",
+        "//pkg/ioutils",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metadata",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "metadata_test",
+    srcs = [
+        "v1_id_service_test.go",
+        "v2_metadata_service_test.go",
+    ],
+    embed = [":metadata"],
+    deps = [
+        "//layer",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ distribution/utils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "utils",
+    srcs = ["progress.go"],
+    importpath = "github.com/docker/docker/distribution/utils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/progress",
+        "//pkg/streamformatter",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":utils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ distribution/xfer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "xfer",
+    srcs = [
+        "download.go",
+        "transfer.go",
+        "upload.go",
+    ],
+    importpath = "github.com/docker/docker/distribution/xfer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//image",
+        "//layer",
+        "//pkg/archive",
+        "//pkg/ioutils",
+        "//pkg/progress",
+        "//pkg/system",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":xfer",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "xfer_test",
+    srcs = [
+        "download_test.go",
+        "transfer_test.go",
+        "upload_test.go",
+    ],
+    embed = [":xfer"],
+    deps = [
+        "//image",
+        "//layer",
+        "//pkg/progress",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ distribution/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,109 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "distribution",
+    srcs = [
+        "config.go",
+        "errors.go",
+        "manifest.go",
+        "pull.go",
+        "pull_v2.go",
+        "pull_v2_unix.go",
+        "pull_v2_windows.go",
+        "push.go",
+        "push_v2.go",
+        "registry.go",
+    ],
+    importpath = "github.com/docker/docker/distribution",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api",
+        "//api/types",
+        "//distribution/metadata",
+        "//distribution/xfer",
+        "//dockerversion",
+        "//errdefs",
+        "//image",
+        "//image/v1:image",
+        "//layer",
+        "//pkg/ioutils",
+        "//pkg/progress",
+        "//pkg/stringid",
+        "//pkg/system",
+        "//reference",
+        "//registry",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest/manifestlist",
+        "//vendor/github.com/docker/distribution/manifest/ocischema",
+        "//vendor/github.com/docker/distribution/manifest/schema1",
+        "//vendor/github.com/docker/distribution/manifest/schema2",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/api/errcode",
+        "//vendor/github.com/docker/distribution/registry/api/v2:api",
+        "//vendor/github.com/docker/distribution/registry/client",
+        "//vendor/github.com/docker/distribution/registry/client/auth",
+        "//vendor/github.com/docker/distribution/registry/client/transport",
+        "//vendor/github.com/docker/libtrust",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":distribution",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "distribution_test",
+    srcs = [
+        "errors_test.go",
+        "manifest_test.go",
+        "pull_v2_test.go",
+        "push_v2_test.go",
+        "registry_unit_test.go",
+    ],
+    embed = [":distribution"],
+    deps = [
+        "//api/types",
+        "//api/types/registry",
+        "//distribution/metadata",
+        "//layer",
+        "//pkg/progress",
+        "//reference",
+        "//registry",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/local",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest/ocischema",
+        "//vendor/github.com/docker/distribution/manifest/schema1",
+        "//vendor/github.com/docker/distribution/manifest/schema2",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/api/errcode",
+        "//vendor/github.com/docker/distribution/registry/api/v2:api",
+        "//vendor/github.com/docker/distribution/registry/client",
+        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ dockerversion/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dockerversion",
+    srcs = [
+        "useragent.go",
+        "version_lib.go",
+    ],
+    importpath = "github.com/docker/docker/dockerversion",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/parsers/kernel",
+        "//pkg/useragent",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dockerversion",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ errdefs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "errdefs",
+    srcs = [
+        "defs.go",
+        "doc.go",
+        "helpers.go",
+        "http_helpers.go",
+        "is.go",
+    ],
+    importpath = "github.com/docker/docker/errdefs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/docker/distribution/registry/api/errcode",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errdefs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "errdefs_test",
+    srcs = [
+        "helpers_test.go",
+        "http_helpers_test.go",
+    ],
+    embed = [":errdefs"],
+    deps = ["//vendor/gotest.tools/v3/assert"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ hack/make/.resources-windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "_resources-windows",
+    srcs = ["resources.go"],
+    importpath = "github.com/docker/docker/hack/make/.resources-windows",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":_resources-windows",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ image/cache/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cache",
+    srcs = [
+        "cache.go",
+        "compare.go",
+    ],
+    importpath = "github.com/docker/docker/image/cache",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//dockerversion",
+        "//image",
+        "//layer",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cache",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "cache_test",
+    srcs = ["compare_test.go"],
+    embed = [":cache"],
+    deps = [
+        "//api/types/container",
+        "//api/types/strslice",
+        "//vendor/github.com/docker/go-connections/nat",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ image/tarexport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tarexport",
+    srcs = [
+        "load.go",
+        "save.go",
+        "tarexport.go",
+    ],
+    importpath = "github.com/docker/docker/image/tarexport",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//image",
+        "//image/v1:image",
+        "//layer",
+        "//pkg/archive",
+        "//pkg/chrootarchive",
+        "//pkg/progress",
+        "//pkg/streamformatter",
+        "//pkg/stringid",
+        "//pkg/system",
+        "//reference",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/moby/sys/symlink",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tarexport",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ image/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "image",
+    srcs = ["imagev1.go"],
+    importpath = "github.com/docker/docker/image/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/versions",
+        "//image",
+        "//layer",
+        "//pkg/stringid",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":image",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "image_test",
+    srcs = ["imagev1_test.go"],
+    embed = [":image"],
+    deps = ["//image"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ image/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,49 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "image",
+    srcs = [
+        "fs.go",
+        "image.go",
+        "rootfs.go",
+        "store.go",
+    ],
+    importpath = "github.com/docker/docker/image",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//dockerversion",
+        "//layer",
+        "//pkg/ioutils",
+        "//pkg/system",
+        "//vendor/github.com/docker/distribution/digestset",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":image",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "image_test",
+    srcs = [
+        "fs_test.go",
+        "image_test.go",
+        "store_test.go",
+    ],
+    embed = [":image"],
+    deps = [
+        "//api/types/container",
+        "//layer",
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/build/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,45 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "build_test",
+    srcs = [
+        "build_cgroupns_linux_test.go",
+        "build_session_test.go",
+        "build_squash_test.go",
+        "build_test.go",
+        "build_userns_linux_test.go",
+        "main_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/versions",
+        "//client",
+        "//errdefs",
+        "//integration/internal/container",
+        "//pkg/jsonmessage",
+        "//pkg/stdcopy",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fakecontext",
+        "//testutil/request",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/filesync",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//integration/internal/requirement",
+            "//testutil/fixtures/load",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//integration/internal/requirement",
+            "//testutil/fixtures/load",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "config_test",
+    srcs = [
+        "config_test.go",
+        "main_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//client",
+        "//errdefs",
+        "//integration/internal/swarm",
+        "//pkg/stdcopy",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/container/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,92 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "container_test",
+    srcs = [
+        "checkpoint_test.go",
+        "container_test.go",
+        "copy_test.go",
+        "create_test.go",
+        "daemon_linux_test.go",
+        "daemon_test.go",
+        "diff_test.go",
+        "exec_test.go",
+        "export_test.go",
+        "health_test.go",
+        "inspect_test.go",
+        "ipcmode_linux_test.go",
+        "kill_test.go",
+        "links_linux_test.go",
+        "logs_test.go",
+        "main_test.go",
+        "mounts_linux_test.go",
+        "nat_test.go",
+        "pause_test.go",
+        "ps_test.go",
+        "remove_test.go",
+        "rename_test.go",
+        "resize_test.go",
+        "restart_test.go",
+        "run_cgroupns_linux_test.go",
+        "run_linux_test.go",
+        "stats_test.go",
+        "stop_linux_test.go",
+        "stop_test.go",
+        "stop_windows_test.go",
+        "update_linux_test.go",
+        "update_test.go",
+        "wait_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/strslice",
+        "//api/types/versions",
+        "//client",
+        "//errdefs",
+        "//integration/internal/container",
+        "//oci",
+        "//pkg/archive",
+        "//pkg/jsonmessage",
+        "//pkg/stdcopy",
+        "//pkg/stringid",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fakecontext",
+        "//testutil/request",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/fs",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//container",
+            "//integration/internal/network",
+            "//integration/internal/requirement",
+            "//pkg/system",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//container",
+            "//integration/internal/network",
+            "//integration/internal/requirement",
+            "//pkg/system",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/image/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,122 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "image_test",
+    srcs = [
+        "commit_test.go",
+        "import_test.go",
+        "list_test.go",
+        "main_test.go",
+        "pull_test.go",
+        "remove_test.go",
+        "remove_unix_test.go",
+        "tag_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/versions",
+        "//errdefs",
+        "//integration/internal/container",
+        "//testutil",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//daemon/graphdriver/register",
+            "//daemon/images",
+            "//layer",
+            "//pkg/idtools",
+            "//testutil/fakecontext",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/internal/container/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "container",
+    srcs = [
+        "container.go",
+        "exec.go",
+        "ops.go",
+        "states.go",
+    ],
+    importpath = "github.com/docker/docker/integration/internal/container",
+    visibility = ["//integration:__subpackages__"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/strslice",
+        "//client",
+        "//pkg/stdcopy",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/poll",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":container",
+    visibility = ["//integration:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/internal/network/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "network",
+    srcs = [
+        "network.go",
+        "ops.go",
+        "states.go",
+    ],
+    importpath = "github.com/docker/docker/integration/internal/network",
+    visibility = ["//integration:__subpackages__"],
+    deps = [
+        "//api/types",
+        "//api/types/network",
+        "//client",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/poll",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":network",
+    visibility = ["//integration:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/internal/requirement/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "requirement",
+    srcs = [
+        "requirement.go",
+        "requirement_linux.go",
+        "requirement_windows.go",
+    ],
+    importpath = "github.com/docker/docker/integration/internal/requirement",
+    visibility = ["//integration:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":requirement",
+    visibility = ["//integration:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/internal/swarm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "swarm",
+    srcs = [
+        "service.go",
+        "states.go",
+    ],
+    importpath = "github.com/docker/docker/integration/internal/swarm",
+    visibility = ["//integration:__subpackages__"],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//client",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":swarm",
+    visibility = ["//integration:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/network/ipvlan/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,144 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "ipvlan_test",
+    srcs = [
+        "ipvlan_test.go",
+        "main_test.go",
+        "main_windows_test.go",
+    ],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/network/macvlan/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,144 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "macvlan_test",
+    srcs = [
+        "macvlan_test.go",
+        "main_test.go",
+        "main_windows_test.go",
+    ],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/network",
+            "//integration/network",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/network/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,147 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "network",
+    srcs = [
+        "helpers.go",
+        "helpers_windows.go",
+    ],
+    importpath = "github.com/docker/docker/integration/network",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//api/types",
+            "//client",
+            "//pkg/parsers/kernel",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/icmd",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//api/types",
+            "//client",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":network",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "network_test",
+    srcs = [
+        "delete_test.go",
+        "dns_test.go",
+        "inspect_test.go",
+        "main_test.go",
+        "network_test.go",
+        "service_test.go",
+    ],
+    embed = [":network"],
+    deps = [
+        "//api/types",
+        "//api/types/swarm",
+        "//api/types/versions",
+        "//client",
+        "//integration/internal/container",
+        "//integration/internal/network",
+        "//integration/internal/swarm",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/request",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/icmd",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/authz/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,236 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "authz_test",
+    srcs = [
+        "authz_plugin_test.go",
+        "authz_plugin_v2_test.go",
+        "main_test.go",
+        "main_windows_test.go",
+    ],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//api/types",
+            "//api/types/events",
+            "//api/types/filters",
+            "//api/types/volume",
+            "//client",
+            "//integration/internal/container",
+            "//integration/internal/requirement",
+            "//pkg/archive",
+            "//pkg/authorization",
+            "//pkg/plugins",
+            "//testutil/daemon",
+            "//testutil/environment",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/poll",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/common/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "common_test",
+    srcs = [
+        "main_test.go",
+        "plugin_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//pkg/reexec",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fixtures/plugin",
+        "//testutil/registry",
+        "//testutil/request",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/graphdriver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "graphdriver_test",
+    srcs = [
+        "external_test.go",
+        "main_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//client",
+        "//daemon/graphdriver",
+        "//daemon/graphdriver/vfs",
+        "//integration/internal/container",
+        "//integration/internal/requirement",
+        "//pkg/archive",
+        "//pkg/plugins",
+        "//pkg/reexec",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/logging/cmd/close_on_start/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "close_on_start_lib",
+    srcs = ["main.go"],
+    importpath = "github.com/docker/docker/integration/plugin/logging/cmd/close_on_start",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "close_on_start",
+    embed = [":close_on_start_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/logging/cmd/discard/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "discard_lib",
+    srcs = [
+        "driver.go",
+        "main.go",
+    ],
+    importpath = "github.com/docker/docker/integration/plugin/logging/cmd/discard",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "discard",
+    embed = [":discard_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "discard_test",
+    srcs = ["main_test.go"],
+    embed = [":discard_lib"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/logging/cmd/dummy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "dummy_lib",
+    srcs = ["main.go"],
+    importpath = "github.com/docker/docker/integration/plugin/logging/cmd/dummy",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "dummy",
+    embed = [":dummy_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/logging/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,67 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "logging_test",
+    srcs = [
+        "helpers_test.go",
+        "logging_linux_test.go",
+        "main_test.go",
+        "read_test.go",
+        "validation_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//pkg/stdcopy",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fixtures/plugin",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//integration/internal/container",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//integration/internal/container",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/volumes/cmd/dummy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "dummy_lib",
+    srcs = ["main.go"],
+    importpath = "github.com/docker/docker/integration/plugin/volumes/cmd/dummy",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "dummy",
+    embed = [":dummy_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/volumes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "volumes_test",
+    srcs = [
+        "helpers_test.go",
+        "main_test.go",
+        "mounts_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fixtures/plugin",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,7 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "plugin_test",
+    srcs = ["pkg_test.go"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/secret/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "secret_test",
+    srcs = [
+        "main_test.go",
+        "secret_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//client",
+        "//errdefs",
+        "//integration/internal/swarm",
+        "//pkg/stdcopy",
+        "//testutil/environment",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/service/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "service_test",
+    srcs = [
+        "create_test.go",
+        "inspect_test.go",
+        "jobs_test.go",
+        "list_test.go",
+        "main_test.go",
+        "network_test.go",
+        "plugin_test.go",
+        "update_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//api/types/filters",
+        "//api/types/network",
+        "//api/types/strslice",
+        "//api/types/swarm",
+        "//api/types/swarm/runtime",
+        "//api/types/versions",
+        "//client",
+        "//errdefs",
+        "//integration/internal/container",
+        "//integration/internal/network",
+        "//integration/internal/swarm",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fixtures/plugin",
+        "//testutil/registry",
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/session/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "session_test",
+    srcs = [
+        "main_test.go",
+        "session_test.go",
+    ],
+    deps = [
+        "//api/types/versions",
+        "//testutil/environment",
+        "//testutil/request",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/system/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "system_test",
+    srcs = [
+        "cgroupdriver_systemd_test.go",
+        "event_test.go",
+        "info_linux_test.go",
+        "info_test.go",
+        "login_test.go",
+        "main_test.go",
+        "ping_test.go",
+        "version_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/registry",
+        "//api/types/strslice",
+        "//api/types/versions",
+        "//integration/internal/container",
+        "//integration/internal/requirement",
+        "//pkg/jsonmessage",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/request",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/volume/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "volume_test",
+    srcs = [
+        "main_test.go",
+        "volume_test.go",
+    ],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/volume",
+        "//integration/internal/container",
+        "//testutil/environment",
+        "//testutil/request",
+        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "integration",
+    srcs = ["doc.go"],
+    importpath = "github.com/docker/docker/integration",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":integration",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/checker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "checker",
+    srcs = ["checker.go"],
+    importpath = "github.com/docker/docker/integration-cli/checker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":checker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/cli/build/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "build",
+    srcs = ["build.go"],
+    importpath = "github.com/docker/docker/integration-cli/cli/build",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//testutil/fakecontext",
+        "//vendor/gotest.tools/v3/icmd",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":build",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/cli/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cli",
+    srcs = ["cli.go"],
+    importpath = "github.com/docker/docker/integration-cli/cli",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//integration-cli/daemon",
+        "//integration-cli/environment",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/icmd",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cli",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/daemon/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "daemon",
+    srcs = [
+        "daemon.go",
+        "daemon_swarm.go",
+    ],
+    importpath = "github.com/docker/docker/integration-cli/daemon",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//client",
+        "//testutil/daemon",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/icmd",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":daemon",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/environment/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "environment",
+    srcs = ["environment.go"],
+    importpath = "github.com/docker/docker/integration-cli/environment",
+    visibility = ["//visibility:public"],
+    deps = ["//testutil/environment"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":environment",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/requirement/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "requirement",
+    srcs = ["requirement.go"],
+    importpath = "github.com/docker/docker/integration-cli/requirement",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":requirement",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ integration-cli/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,467 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "integration-cli_test",
+    srcs = [
+        "benchmark_test.go",
+        "check_test.go",
+        "daemon_swarm_hack_test.go",
+        "docker_api_attach_test.go",
+        "docker_api_build_test.go",
+        "docker_api_build_windows_test.go",
+        "docker_api_containers_test.go",
+        "docker_api_containers_unix_test.go",
+        "docker_api_containers_windows_test.go",
+        "docker_api_exec_resize_test.go",
+        "docker_api_exec_test.go",
+        "docker_api_images_test.go",
+        "docker_api_inspect_test.go",
+        "docker_api_logs_test.go",
+        "docker_api_network_test.go",
+        "docker_api_stats_test.go",
+        "docker_api_swarm_node_test.go",
+        "docker_api_swarm_service_test.go",
+        "docker_api_swarm_test.go",
+        "docker_api_test.go",
+        "docker_cli_attach_test.go",
+        "docker_cli_attach_unix_test.go",
+        "docker_cli_build_test.go",
+        "docker_cli_build_unix_test.go",
+        "docker_cli_by_digest_test.go",
+        "docker_cli_commit_test.go",
+        "docker_cli_cp_from_container_test.go",
+        "docker_cli_cp_test.go",
+        "docker_cli_cp_to_container_test.go",
+        "docker_cli_cp_to_container_unix_test.go",
+        "docker_cli_cp_utils_test.go",
+        "docker_cli_create_test.go",
+        "docker_cli_daemon_plugins_test.go",
+        "docker_cli_daemon_test.go",
+        "docker_cli_events_test.go",
+        "docker_cli_events_unix_test.go",
+        "docker_cli_exec_test.go",
+        "docker_cli_exec_unix_test.go",
+        "docker_cli_external_volume_driver_test.go",
+        "docker_cli_health_test.go",
+        "docker_cli_history_test.go",
+        "docker_cli_images_test.go",
+        "docker_cli_import_test.go",
+        "docker_cli_info_test.go",
+        "docker_cli_info_unix_test.go",
+        "docker_cli_inspect_test.go",
+        "docker_cli_links_test.go",
+        "docker_cli_login_test.go",
+        "docker_cli_logout_test.go",
+        "docker_cli_logs_bench_test.go",
+        "docker_cli_logs_test.go",
+        "docker_cli_netmode_test.go",
+        "docker_cli_network_test.go",
+        "docker_cli_network_unix_test.go",
+        "docker_cli_plugins_logdriver_test.go",
+        "docker_cli_plugins_test.go",
+        "docker_cli_port_test.go",
+        "docker_cli_proxy_test.go",
+        "docker_cli_prune_unix_test.go",
+        "docker_cli_ps_test.go",
+        "docker_cli_pull_local_test.go",
+        "docker_cli_pull_test.go",
+        "docker_cli_push_test.go",
+        "docker_cli_registry_user_agent_test.go",
+        "docker_cli_restart_test.go",
+        "docker_cli_rmi_test.go",
+        "docker_cli_run_test.go",
+        "docker_cli_run_unix_test.go",
+        "docker_cli_save_load_test.go",
+        "docker_cli_save_load_unix_test.go",
+        "docker_cli_search_test.go",
+        "docker_cli_service_create_test.go",
+        "docker_cli_service_health_test.go",
+        "docker_cli_service_logs_test.go",
+        "docker_cli_service_scale_test.go",
+        "docker_cli_sni_test.go",
+        "docker_cli_start_test.go",
+        "docker_cli_stats_test.go",
+        "docker_cli_swarm_test.go",
+        "docker_cli_swarm_unix_test.go",
+        "docker_cli_top_test.go",
+        "docker_cli_update_unix_test.go",
+        "docker_cli_userns_test.go",
+        "docker_cli_v2_only_test.go",
+        "docker_cli_volume_test.go",
+        "docker_deprecated_api_v124_test.go",
+        "docker_deprecated_api_v124_unix_test.go",
+        "docker_hub_pull_suite_test.go",
+        "docker_utils_test.go",
+        "events_utils_test.go",
+        "fixtures_linux_daemon_test.go",
+        "requirements_test.go",
+        "requirements_unix_test.go",
+        "test_vars_noseccomp_test.go",
+        "test_vars_test.go",
+        "test_vars_unix_test.go",
+        "test_vars_windows_test.go",
+        "utils_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    deps = [
+        "//api",
+        "//api/types",
+        "//api/types/container",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/mount",
+        "//api/types/network",
+        "//api/types/swarm",
+        "//api/types/versions",
+        "//api/types/versions/v1p20",
+        "//client",
+        "//daemon/events/testutils",
+        "//integration-cli/checker",
+        "//integration-cli/cli",
+        "//integration-cli/cli/build",
+        "//integration-cli/daemon",
+        "//integration-cli/environment",
+        "//integration-cli/requirement",
+        "//internal/test/suite",
+        "//pkg/archive",
+        "//pkg/ioutils",
+        "//pkg/jsonmessage",
+        "//pkg/parsers/kernel",
+        "//pkg/reexec",
+        "//pkg/stdcopy",
+        "//pkg/stringid",
+        "//pkg/system",
+        "//runconfig",
+        "//testutil",
+        "//testutil/daemon",
+        "//testutil/environment",
+        "//testutil/fakecontext",
+        "//testutil/fakegit",
+        "//testutil/fakestorage",
+        "//testutil/fixtures/load",
+        "//testutil/fixtures/plugin",
+        "//testutil/registry",
+        "//testutil/request",
+        "//vendor/github.com/Microsoft/hcsshim/osversion",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest",
+        "//vendor/github.com/docker/distribution/manifest/manifestlist",
+        "//vendor/github.com/docker/distribution/manifest/schema1",
+        "//vendor/github.com/docker/distribution/manifest/schema2",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/docker/go-connections/sockets",
+        "//vendor/github.com/docker/libnetwork/resolvconf",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/command",
+        "//vendor/github.com/moby/sys/mountinfo",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/net/websocket",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/icmd",
+        "//vendor/gotest.tools/v3/poll",
+        "//vendor/gotest.tools/v3/skip",
+        "//volume",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//daemon/cluster/executor/container",
+            "//opts",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/libtrust",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//daemon/cluster/executor/container",
+            "//opts",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/libtrust",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//daemon/cluster/executor/container",
+            "//pkg/homedir",
+            "//pkg/parsers",
+            "//pkg/sysinfo",
+            "//vendor/github.com/cloudflare/cfssl/csr",
+            "//vendor/github.com/cloudflare/cfssl/helpers",
+            "//vendor/github.com/cloudflare/cfssl/initca",
+            "//vendor/github.com/creack/pty",
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/swarmkit/ca",
+            "//vendor/github.com/docker/swarmkit/ca/keyutils",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ internal/test/suite/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "suite",
+    srcs = [
+        "interfaces.go",
+        "suite.go",
+    ],
+    importpath = "github.com/docker/docker/internal/test/suite",
+    visibility = ["//:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":suite",
+    visibility = ["//:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ layer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,71 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "layer",
+    srcs = [
+        "empty.go",
+        "filestore.go",
+        "filestore_unix.go",
+        "filestore_windows.go",
+        "layer.go",
+        "layer_store.go",
+        "layer_store_windows.go",
+        "layer_unix.go",
+        "layer_windows.go",
+        "migration.go",
+        "mounted_layer.go",
+        "ro_layer.go",
+        "ro_layer_windows.go",
+    ],
+    importpath = "github.com/docker/docker/layer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/graphdriver",
+        "//pkg/archive",
+        "//pkg/containerfs",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/plugingetter",
+        "//pkg/stringid",
+        "//pkg/system",
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vbatts/tar-split/tar/asm",
+        "//vendor/github.com/vbatts/tar-split/tar/storage",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":layer",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "layer_test",
+    srcs = [
+        "empty_test.go",
+        "filestore_test.go",
+        "layer_test.go",
+        "layer_unix_test.go",
+        "migration_test.go",
+        "mount_test.go",
+    ],
+    embed = [":layer"],
+    deps = [
+        "//daemon/graphdriver",
+        "//daemon/graphdriver/vfs",
+        "//pkg/archive",
+        "//pkg/containerfs",
+        "//pkg/idtools",
+        "//pkg/stringid",
+        "//vendor/github.com/containerd/continuity/driver",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/vbatts/tar-split/tar/asm",
+        "//vendor/github.com/vbatts/tar-split/tar/storage",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libcontainerd/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,45 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "local",
+    srcs = [
+        "local_windows.go",
+        "process_windows.go",
+        "utils_windows.go",
+    ],
+    importpath = "github.com/docker/docker/libcontainerd/local",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//errdefs",
+            "//libcontainerd/queue",
+            "//libcontainerd/types",
+            "//pkg/ioutils",
+            "//pkg/sysinfo",
+            "//pkg/system",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/Microsoft/opengcs/client",
+            "//vendor/github.com/containerd/containerd",
+            "//vendor/github.com/containerd/containerd/cio",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "local_test",
+    srcs = ["utils_windows_test.go"],
+    embed = [":local"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libcontainerd/queue/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "queue",
+    srcs = ["queue.go"],
+    importpath = "github.com/docker/docker/libcontainerd/queue",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":queue",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "queue_test",
+    srcs = ["queue_test.go"],
+    embed = [":queue"],
+    deps = ["//vendor/gotest.tools/v3/assert"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libcontainerd/remote/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,59 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remote",
+    srcs = [
+        "client.go",
+        "client_io_windows.go",
+        "client_linux.go",
+        "client_windows.go",
+    ],
+    importpath = "github.com/docker/docker/libcontainerd/remote",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//errdefs",
+        "//libcontainerd/queue",
+        "//libcontainerd/types",
+        "//pkg/ioutils",
+        "//vendor/github.com/containerd/containerd",
+        "//vendor/github.com/containerd/containerd/api/events",
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/containerd/archive",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/events",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+        "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/idtools",
+            "//vendor/github.com/containerd/containerd/containers",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/idtools",
+            "//vendor/github.com/containerd/containerd/containers",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/Microsoft/hcsshim/cmd/containerd-shim-runhcs-v1/options",
+            "//vendor/github.com/containerd/containerd/containers",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remote",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libcontainerd/supervisor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "supervisor",
+    srcs = [
+        "remote_daemon.go",
+        "remote_daemon_linux.go",
+        "remote_daemon_options.go",
+        "remote_daemon_options_linux.go",
+        "remote_daemon_windows.go",
+        "utils_linux.go",
+        "utils_windows.go",
+    ],
+    importpath = "github.com/docker/docker/libcontainerd/supervisor",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/system",
+        "//vendor/github.com/BurntSushi/toml",
+        "//vendor/github.com/containerd/containerd",
+        "//vendor/github.com/containerd/containerd/services/server/config",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/defaults",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/defaults",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":supervisor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libcontainerd/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "types.go",
+        "types_linux.go",
+        "types_windows.go",
+    ],
+    importpath = "github.com/docker/docker/libcontainerd/types",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/cmd/containerd-shim-runhcs-v1/options",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ libcontainerd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "libcontainerd",
+    srcs = [
+        "libcontainerd_linux.go",
+        "libcontainerd_windows.go",
+    ],
+    importpath = "github.com/docker/docker/libcontainerd",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//libcontainerd/remote",
+            "//libcontainerd/types",
+            "//vendor/github.com/containerd/containerd",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//libcontainerd/remote",
+            "//libcontainerd/types",
+            "//vendor/github.com/containerd/containerd",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//libcontainerd/local",
+            "//libcontainerd/remote",
+            "//libcontainerd/types",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":libcontainerd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ oci/caps/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "caps",
+    srcs = [
+        "defaults.go",
+        "utils.go",
+    ],
+    importpath = "github.com/docker/docker/oci/caps",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//errdefs",
+        "//vendor/github.com/syndtr/gocapability/capability",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":caps",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ oci/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,92 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "oci",
+    srcs = [
+        "defaults.go",
+        "devices_linux.go",
+        "devices_unsupported.go",
+        "namespaces.go",
+        "oci.go",
+    ],
+    importpath = "github.com/docker/docker/oci",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//oci/caps",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+            "//vendor/github.com/opencontainers/runc/libcontainer/devices",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+            "//vendor/github.com/opencontainers/runc/libcontainer/devices",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":oci",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "oci_test",
+    srcs = [
+        "oci_test.go",
+        "seccomp_test.go",
+    ],
+    embed = [":oci"],
+    deps = [
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/gotest.tools/v3/assert",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//profiles/seccomp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//profiles/seccomp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ opts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "opts",
+    srcs = [
+        "address_pools.go",
+        "env.go",
+        "hosts.go",
+        "hosts_unix.go",
+        "hosts_windows.go",
+        "ip.go",
+        "opts.go",
+        "quotedstring.go",
+        "runtime.go",
+        "ulimit.go",
+    ],
+    importpath = "github.com/docker/docker/opts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//pkg/homedir",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/docker/libnetwork/ipamutils",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":opts",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "opts_test",
+    srcs = [
+        "address_pools_test.go",
+        "env_test.go",
+        "hosts_test.go",
+        "ip_test.go",
+        "opts_test.go",
+        "quotedstring_test.go",
+        "ulimit_test.go",
+    ],
+    embed = [":opts"],
+    deps = [
+        "//vendor/github.com/docker/go-units",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/aaparser/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "aaparser",
+    srcs = ["aaparser.go"],
+    importpath = "github.com/docker/docker/pkg/aaparser",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":aaparser",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "aaparser_test",
+    srcs = ["aaparser_test.go"],
+    embed = [":aaparser"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/archive/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,180 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "archive",
+    srcs = [
+        "archive.go",
+        "archive_linux.go",
+        "archive_other.go",
+        "archive_unix.go",
+        "archive_windows.go",
+        "changes.go",
+        "changes_linux.go",
+        "changes_other.go",
+        "changes_unix.go",
+        "changes_windows.go",
+        "copy.go",
+        "copy_unix.go",
+        "copy_windows.go",
+        "diff.go",
+        "time_linux.go",
+        "time_unsupported.go",
+        "whiteouts.go",
+        "wrap.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/archive",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/fileutils",
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/pools",
+        "//pkg/system",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sys/execabs",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/fs",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//pkg/longpath",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":archive",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "archive_test",
+    srcs = [
+        "archive_linux_test.go",
+        "archive_test.go",
+        "archive_unix_test.go",
+        "archive_windows_test.go",
+        "changes_posix_test.go",
+        "changes_test.go",
+        "copy_unix_test.go",
+        "diff_test.go",
+        "utils_test.go",
+        "wrap_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":archive"],
+    deps = [
+        "//pkg/idtools",
+        "//pkg/ioutils",
+        "//pkg/system",
+        "//vendor/github.com/containerd/containerd/sys",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/reexec",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/reexec",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/authorization/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,110 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "authorization",
+    srcs = [
+        "api.go",
+        "authz.go",
+        "middleware.go",
+        "plugin.go",
+        "response.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/authorization",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/ioutils",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":authorization",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "authorization_test",
+    srcs = [
+        "api_test.go",
+        "authz_unix_test.go",
+        "middleware_test.go",
+        "middleware_unix_test.go",
+    ],
+    embed = [":authorization"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/plugins",
+            "//vendor/github.com/docker/go-connections/tlsconfig",
+            "//vendor/github.com/gorilla/mux",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/broadcaster/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "broadcaster",
+    srcs = ["unbuffered.go"],
+    importpath = "github.com/docker/docker/pkg/broadcaster",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":broadcaster",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "broadcaster_test",
+    srcs = ["unbuffered_test.go"],
+    embed = [":broadcaster"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/capabilities/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "capabilities",
+    srcs = ["caps.go"],
+    importpath = "github.com/docker/docker/pkg/capabilities",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":capabilities",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "capabilities_test",
+    srcs = ["caps_test.go"],
+    embed = [":capabilities"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/chrootarchive/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,199 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "chrootarchive",
+    srcs = [
+        "archive.go",
+        "archive_unix.go",
+        "archive_windows.go",
+        "chroot_linux.go",
+        "chroot_unix.go",
+        "diff.go",
+        "diff_unix.go",
+        "diff_windows.go",
+        "init_unix.go",
+        "init_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/chrootarchive",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/archive",
+        "//pkg/idtools",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/reexec",
+            "//pkg/system",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//pkg/longpath",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":chrootarchive",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "chrootarchive_test",
+    srcs = [
+        "archive_test.go",
+        "archive_unix_test.go",
+    ],
+    embed = [":chrootarchive"],
+    deps = [
+        "//pkg/archive",
+        "//pkg/reexec",
+        "//pkg/system",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/containerfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containerfs",
+    srcs = [
+        "archiver.go",
+        "containerfs.go",
+        "containerfs_unix.go",
+        "containerfs_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/containerfs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/archive",
+        "//pkg/idtools",
+        "//pkg/system",
+        "//vendor/github.com/containerd/continuity/driver",
+        "//vendor/github.com/containerd/continuity/pathdriver",
+        "//vendor/github.com/moby/sys/symlink",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containerfs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/devicemapper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "devicemapper",
+    srcs = [
+        "devmapper.go",
+        "devmapper_log.go",
+        "devmapper_wrapper.go",
+        "devmapper_wrapper_dynamic.go",
+        "devmapper_wrapper_dynamic_deferred_remove.go",
+        "ioctl.go",
+        "log.go",
+    ],
+    cgo = True,
+    importpath = "github.com/docker/docker/pkg/devicemapper",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":devicemapper",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/directory/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "directory",
+    srcs = [
+        "directory.go",
+        "directory_unix.go",
+        "directory_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/directory",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":directory",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "directory_test",
+    srcs = ["directory_test.go"],
+    embed = [":directory"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/discovery/file/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "file",
+    srcs = ["file.go"],
+    importpath = "github.com/docker/docker/pkg/discovery/file",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/discovery"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":file",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "file_test",
+    srcs = ["file_test.go"],
+    embed = [":file"],
+    deps = [
+        "//internal/test/suite",
+        "//pkg/discovery",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/discovery/kv/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "kv",
+    srcs = ["kv.go"],
+    importpath = "github.com/docker/docker/pkg/discovery/kv",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/discovery",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/github.com/docker/libkv/store/consul",
+        "//vendor/github.com/docker/libkv/store/etcd",
+        "//vendor/github.com/docker/libkv/store/zookeeper",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":kv",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "kv_test",
+    srcs = ["kv_test.go"],
+    embed = [":kv"],
+    deps = [
+        "//internal/test/suite",
+        "//pkg/discovery",
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/discovery/memory/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "memory",
+    srcs = ["memory.go"],
+    importpath = "github.com/docker/docker/pkg/discovery/memory",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/discovery"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":memory",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "memory_test",
+    srcs = ["memory_test.go"],
+    embed = [":memory"],
+    deps = [
+        "//internal/test/suite",
+        "//pkg/discovery",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/discovery/nodes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "nodes",
+    srcs = ["nodes.go"],
+    importpath = "github.com/docker/docker/pkg/discovery/nodes",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/discovery"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":nodes",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "nodes_test",
+    srcs = ["nodes_test.go"],
+    embed = [":nodes"],
+    deps = [
+        "//internal/test/suite",
+        "//pkg/discovery",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/discovery/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "discovery",
+    srcs = [
+        "backends.go",
+        "discovery.go",
+        "entry.go",
+        "generator.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/discovery",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":discovery",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "discovery_test",
+    srcs = [
+        "discovery_test.go",
+        "generator_test.go",
+    ],
+    embed = [":discovery"],
+    deps = [
+        "//internal/test/suite",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/dmesg/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "dmesg",
+    srcs = ["dmesg_linux.go"],
+    importpath = "github.com/docker/docker/pkg/dmesg",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dmesg",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "dmesg_test",
+    srcs = ["dmesg_linux_test.go"],
+    embed = [":dmesg"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/filenotify/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "filenotify",
+    srcs = [
+        "filenotify.go",
+        "fsnotify.go",
+        "poller.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/filenotify",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/fsnotify/fsnotify",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":filenotify",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "filenotify_test",
+    srcs = ["poller_test.go"],
+    embed = [":filenotify"],
+    deps = ["//vendor/github.com/fsnotify/fsnotify"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/fileutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "fileutils",
+    srcs = [
+        "fileutils.go",
+        "fileutils_darwin.go",
+        "fileutils_unix.go",
+        "fileutils_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/fileutils",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fileutils",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "fileutils_test",
+    srcs = ["fileutils_test.go"],
+    embed = [":fileutils"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/fsutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "fsutils",
+    srcs = ["fsutils_linux.go"],
+    importpath = "github.com/docker/docker/pkg/fsutils",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fsutils",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "fsutils_test",
+    srcs = ["fsutils_linux_test.go"],
+    embed = [":fsutils"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/homedir/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "homedir",
+    srcs = [
+        "homedir_linux.go",
+        "homedir_others.go",
+        "homedir_unix.go",
+        "homedir_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/homedir",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":homedir",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "homedir_test",
+    srcs = ["homedir_test.go"],
+    embed = [":homedir"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/idtools/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,172 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "idtools",
+    srcs = [
+        "idtools.go",
+        "idtools_unix.go",
+        "idtools_windows.go",
+        "usergroupadd_linux.go",
+        "usergroupadd_unsupported.go",
+        "utils_unix.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/idtools",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/system",
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//pkg/system",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":idtools",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "idtools_test",
+    srcs = [
+        "idtools_test.go",
+        "idtools_unix_test.go",
+    ],
+    embed = [":idtools"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert/cmp",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/ioutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "ioutils",
+    srcs = [
+        "buffer.go",
+        "bytespipe.go",
+        "fswriters.go",
+        "readers.go",
+        "temp_unix.go",
+        "temp_windows.go",
+        "writeflusher.go",
+        "writers.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/ioutils",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//pkg/longpath",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ioutils",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "ioutils_test",
+    srcs = [
+        "buffer_test.go",
+        "bytespipe_test.go",
+        "fswriters_test.go",
+        "readers_test.go",
+        "writers_test.go",
+    ],
+    embed = [":ioutils"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/jsonmessage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "jsonmessage",
+    srcs = ["jsonmessage.go"],
+    importpath = "github.com/docker/docker/pkg/jsonmessage",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/moby/term",
+        "//vendor/github.com/morikuni/aec",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonmessage",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "jsonmessage_test",
+    srcs = ["jsonmessage_test.go"],
+    embed = [":jsonmessage"],
+    deps = [
+        "//vendor/github.com/moby/term",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/locker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "locker",
+    srcs = ["locker.go"],
+    importpath = "github.com/docker/docker/pkg/locker",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/moby/locker"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":locker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/longpath/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "longpath",
+    srcs = ["longpath.go"],
+    importpath = "github.com/docker/docker/pkg/longpath",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":longpath",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "longpath_test",
+    srcs = ["longpath_test.go"],
+    embed = [":longpath"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/loopback/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "loopback",
+    srcs = [
+        "attach_loopback.go",
+        "ioctl.go",
+        "loop_wrapper.go",
+        "loopback.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/loopback",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":loopback",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/mount/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,57 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mount",
+    srcs = [
+        "deprecated.go",
+        "deprecated_linux.go",
+        "deprecated_unix.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/mount",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/sys/mountinfo",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/moby/sys/mount",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mount",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/namesgenerator/cmd/names-generator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "names-generator_lib",
+    srcs = ["main.go"],
+    importpath = "github.com/docker/docker/pkg/namesgenerator/cmd/names-generator",
+    visibility = ["//visibility:private"],
+    deps = ["//pkg/namesgenerator"],
+)
+
+go_binary(
+    name = "names-generator",
+    embed = [":names-generator_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/namesgenerator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "namesgenerator",
+    srcs = ["names-generator.go"],
+    importpath = "github.com/docker/docker/pkg/namesgenerator",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":namesgenerator",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "namesgenerator_test",
+    srcs = ["names-generator_test.go"],
+    embed = [":namesgenerator"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/parsers/kernel/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,61 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "kernel",
+    srcs = [
+        "kernel.go",
+        "kernel_darwin.go",
+        "kernel_unix.go",
+        "kernel_windows.go",
+        "uname_linux.go",
+        "uname_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/parsers/kernel",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+            "//vendor/golang.org/x/sys/windows/registry",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":kernel",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "kernel_test",
+    srcs = [
+        "kernel_darwin_test.go",
+        "kernel_unix_test.go",
+    ],
+    embed = [":kernel"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/parsers/operatingsystem/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "operatingsystem",
+    srcs = [
+        "operatingsystem_linux.go",
+        "operatingsystem_unix.go",
+        "operatingsystem_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/parsers/operatingsystem",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/golang.org/x/sys/windows/registry",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":operatingsystem",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "operatingsystem_test",
+    srcs = ["operatingsystem_linux_test.go"],
+    embed = [":operatingsystem"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/parsers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "parsers",
+    srcs = ["parsers.go"],
+    importpath = "github.com/docker/docker/pkg/parsers",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":parsers",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "parsers_test",
+    srcs = ["parsers_test.go"],
+    embed = [":parsers"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/pidfile/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "pidfile",
+    srcs = [
+        "pidfile.go",
+        "pidfile_darwin.go",
+        "pidfile_unix.go",
+        "pidfile_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/pidfile",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/system",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pidfile",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "pidfile_test",
+    srcs = ["pidfile_test.go"],
+    embed = [":pidfile"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/platform/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,66 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "platform",
+    srcs = [
+        "architecture_unix.go",
+        "architecture_windows.go",
+        "platform.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/platform",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":platform",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/plugingetter/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "plugingetter",
+    srcs = ["getter.go"],
+    importpath = "github.com/docker/docker/pkg/plugingetter",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/plugins"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugingetter",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/plugins/pluginrpc-gen/fixtures/otherfixture/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "otherfixture",
+    srcs = ["spaceship.go"],
+    importpath = "github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures/otherfixture",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":otherfixture",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/plugins/pluginrpc-gen/fixtures/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fixtures",
+    srcs = ["foo.go"],
+    importpath = "github.com/docker/docker/pkg/plugins/pluginrpc-gen/fixtures",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/plugins/pluginrpc-gen/fixtures/otherfixture"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fixtures",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/plugins/pluginrpc-gen/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "pluginrpc-gen_lib",
+    srcs = [
+        "main.go",
+        "parser.go",
+        "template.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/plugins/pluginrpc-gen",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "pluginrpc-gen",
+    embed = [":pluginrpc-gen_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "pluginrpc-gen_test",
+    srcs = ["parser_test.go"],
+    embed = [":pluginrpc-gen_lib"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/plugins/transport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "transport",
+    srcs = [
+        "http.go",
+        "transport.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/plugins/transport",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transport",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "transport_test",
+    srcs = ["http_test.go"],
+    embed = [":transport"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/plugins/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "plugins",
+    srcs = [
+        "client.go",
+        "discovery.go",
+        "discovery_unix.go",
+        "discovery_windows.go",
+        "errors.go",
+        "plugins.go",
+        "plugins_unix.go",
+        "plugins_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/plugins",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/ioutils",
+        "//pkg/plugins/transport",
+        "//vendor/github.com/docker/go-connections/sockets",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugins",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "plugins_test",
+    srcs = [
+        "client_test.go",
+        "discovery_test.go",
+        "discovery_unix_test.go",
+        "plugin_test.go",
+    ],
+    embed = [":plugins"],
+    deps = [
+        "//pkg/plugins/transport",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/pools/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "pools",
+    srcs = ["pools.go"],
+    importpath = "github.com/docker/docker/pkg/pools",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/ioutils"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pools",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "pools_test",
+    srcs = ["pools_test.go"],
+    embed = [":pools"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/progress/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "progress",
+    srcs = [
+        "progress.go",
+        "progressreader.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/progress",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/time/rate"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":progress",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "progress_test",
+    srcs = ["progressreader_test.go"],
+    embed = [":progress"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/pubsub/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "pubsub",
+    srcs = ["publisher.go"],
+    importpath = "github.com/docker/docker/pkg/pubsub",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pubsub",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "pubsub_test",
+    srcs = ["publisher_test.go"],
+    embed = [":pubsub"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/reexec/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "reexec",
+    srcs = [
+        "command_linux.go",
+        "command_unix.go",
+        "command_unsupported.go",
+        "command_windows.go",
+        "reexec.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/reexec",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":reexec",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "reexec_test",
+    srcs = ["reexec_test.go"],
+    embed = [":reexec"],
+    deps = ["//vendor/gotest.tools/v3/assert"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/signal/testfiles/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "testfiles_lib",
+    srcs = ["main.go"],
+    importpath = "github.com/docker/docker/pkg/signal/testfiles",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//pkg/signal",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+go_binary(
+    name = "testfiles",
+    embed = [":testfiles_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/signal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,92 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "signal",
+    srcs = [
+        "signal.go",
+        "signal_darwin.go",
+        "signal_freebsd.go",
+        "signal_linux.go",
+        "signal_linux_mipsx.go",
+        "signal_unix.go",
+        "signal_unsupported.go",
+        "signal_windows.go",
+        "trap.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/signal",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android_386": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android_amd64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android_arm": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android_arm64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_386": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_amd64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_arm": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_arm64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_mips": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_mips64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_mips64le": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_mipsle": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_ppc64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_ppc64le": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_riscv64": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux_s390x": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":signal",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "signal_test",
+    srcs = [
+        "signal_linux_test.go",
+        "signal_test.go",
+        "trap_linux_test.go",
+    ],
+    embed = [":signal"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/stdcopy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "stdcopy",
+    srcs = ["stdcopy.go"],
+    importpath = "github.com/docker/docker/pkg/stdcopy",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stdcopy",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "stdcopy_test",
+    srcs = ["stdcopy_test.go"],
+    embed = [":stdcopy"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/streamformatter/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "streamformatter",
+    srcs = [
+        "streamformatter.go",
+        "streamwriter.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/streamformatter",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/jsonmessage",
+        "//pkg/progress",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":streamformatter",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "streamformatter_test",
+    srcs = [
+        "streamformatter_test.go",
+        "streamwriter_test.go",
+    ],
+    embed = [":streamformatter"],
+    deps = [
+        "//pkg/jsonmessage",
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/github.com/google/go-cmp/cmp/cmpopts",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/stringid/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "stringid",
+    srcs = ["stringid.go"],
+    importpath = "github.com/docker/docker/pkg/stringid",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stringid",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "stringid_test",
+    srcs = ["stringid_test.go"],
+    embed = [":stringid"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/symlink/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "symlink",
+    srcs = ["deprecated.go"],
+    importpath = "github.com/docker/docker/pkg/symlink",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/moby/sys/symlink"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":symlink",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/sysinfo/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,68 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "sysinfo",
+    srcs = [
+        "cgroup2_linux.go",
+        "numcpu.go",
+        "numcpu_linux.go",
+        "numcpu_windows.go",
+        "sysinfo.go",
+        "sysinfo_linux.go",
+        "sysinfo_unix.go",
+        "sysinfo_windows.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/sysinfo",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/parsers",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/cgroups/v2:cgroups",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/opencontainers/runc/libcontainer/cgroups",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/cgroups/v2:cgroups",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/opencontainers/runc/libcontainer/cgroups",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sysinfo",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "sysinfo_test",
+    srcs = [
+        "sysinfo_linux_test.go",
+        "sysinfo_test.go",
+    ],
+    embed = [":sysinfo"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/system/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,218 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "system",
+    srcs = [
+        "args_windows.go",
+        "chtimes.go",
+        "chtimes_nowindows.go",
+        "chtimes_windows.go",
+        "errors.go",
+        "exitcode.go",
+        "filesys_unix.go",
+        "filesys_windows.go",
+        "init.go",
+        "init_windows.go",
+        "lcow.go",
+        "lcow_unsupported.go",
+        "lstat_unix.go",
+        "lstat_windows.go",
+        "meminfo.go",
+        "meminfo_linux.go",
+        "meminfo_unsupported.go",
+        "meminfo_windows.go",
+        "mknod.go",
+        "mknod_windows.go",
+        "path.go",
+        "path_unix.go",
+        "path_windows.go",
+        "process_unix.go",
+        "process_windows.go",
+        "rm.go",
+        "rm_windows.go",
+        "stat_bsd.go",
+        "stat_darwin.go",
+        "stat_linux.go",
+        "stat_openbsd.go",
+        "stat_solaris.go",
+        "stat_unix.go",
+        "stat_windows.go",
+        "syscall_unix.go",
+        "syscall_windows.go",
+        "umask.go",
+        "umask_windows.go",
+        "utimes_unix.go",
+        "utimes_unsupported.go",
+        "xattrs_linux.go",
+        "xattrs_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/system",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":system",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "system_test",
+    srcs = [
+        "chtimes_linux_test.go",
+        "chtimes_test.go",
+        "chtimes_windows_test.go",
+        "lstat_unix_test.go",
+        "meminfo_unix_test.go",
+        "path_windows_test.go",
+        "rm_nodarwin_test.go",
+        "rm_test.go",
+        "stat_unix_test.go",
+        "syscall_windows_test.go",
+        "utimes_unix_test.go",
+    ],
+    embed = [":system"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/containerd/continuity/pathdriver",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/tailfile/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "tailfile",
+    srcs = ["tailfile.go"],
+    importpath = "github.com/docker/docker/pkg/tailfile",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tailfile",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "tailfile_test",
+    srcs = ["tailfile_test.go"],
+    embed = [":tailfile"],
+    deps = ["//vendor/gotest.tools/v3/assert"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/tarsum/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "tarsum",
+    srcs = [
+        "builder_context.go",
+        "fileinfosums.go",
+        "tarsum.go",
+        "versioning.go",
+        "writercloser.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/tarsum",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tarsum",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "tarsum_test",
+    srcs = [
+        "builder_context_test.go",
+        "fileinfosums_test.go",
+        "tarsum_test.go",
+        "versioning_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":tarsum"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/term/windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "windows",
+    srcs = ["deprecated.go"],
+    importpath = "github.com/docker/docker/pkg/term/windows",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/moby/term/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":windows",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "windows_test",
+    srcs = ["windows_test.go"],
+    embed = [":windows"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/term/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "term",
+    srcs = [
+        "deprecated.go",
+        "deprecated_unix.go",
+    ],
+    importpath = "github.com/docker/docker/pkg/term",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/moby/term"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":term",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/truncindex/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "truncindex",
+    srcs = ["truncindex.go"],
+    importpath = "github.com/docker/docker/pkg/truncindex",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/tchap/go-patricia/patricia"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":truncindex",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "truncindex_test",
+    srcs = ["truncindex_test.go"],
+    embed = [":truncindex"],
+    deps = ["//pkg/stringid"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/urlutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "urlutil",
+    srcs = ["urlutil.go"],
+    importpath = "github.com/docker/docker/pkg/urlutil",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":urlutil",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "urlutil_test",
+    srcs = ["urlutil_test.go"],
+    embed = [":urlutil"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ pkg/useragent/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "useragent",
+    srcs = ["useragent.go"],
+    importpath = "github.com/docker/docker/pkg/useragent",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":useragent",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "useragent_test",
+    srcs = ["useragent_test.go"],
+    embed = [":useragent"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ plugin/executor/containerd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containerd",
+    srcs = ["containerd.go"],
+    importpath = "github.com/docker/docker/plugin/executor/containerd",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//errdefs",
+        "//libcontainerd",
+        "//libcontainerd/types",
+        "//vendor/github.com/containerd/containerd",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containerd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ plugin/v2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "plugin",
+    srcs = [
+        "plugin.go",
+        "plugin_linux.go",
+        "plugin_unsupported.go",
+        "settable.go",
+    ],
+    importpath = "github.com/docker/docker/plugin/v2",
+    importpath_aliases = ["github.com/docker/docker/plugin"],
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//oci",
+            "//pkg/system",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//oci",
+            "//pkg/system",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "plugin_test",
+    srcs = ["settable_test.go"],
+    embed = [":plugin"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,160 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "plugin",
+    srcs = [
+        "backend_linux.go",
+        "backend_unsupported.go",
+        "defs.go",
+        "errors.go",
+        "events.go",
+        "fetch_linux.go",
+        "manager.go",
+        "manager_linux.go",
+        "manager_windows.go",
+        "progress.go",
+        "registry.go",
+        "store.go",
+    ],
+    importpath = "github.com/docker/docker/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//dockerversion",
+        "//errdefs",
+        "//pkg/authorization",
+        "//pkg/ioutils",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//pkg/pubsub",
+        "//pkg/system",
+        "//plugin/v2:plugin",
+        "//registry",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/local",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//api/types/filters",
+            "//daemon/initlayer",
+            "//distribution/utils",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/pools",
+            "//pkg/progress",
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/images",
+            "//vendor/github.com/containerd/containerd/platforms",
+            "//vendor/github.com/docker/distribution/manifest/schema2",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//api/types/filters",
+            "//daemon/initlayer",
+            "//distribution/utils",
+            "//pkg/chrootarchive",
+            "//pkg/containerfs",
+            "//pkg/idtools",
+            "//pkg/pools",
+            "//pkg/progress",
+            "//pkg/stringid",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/images",
+            "//vendor/github.com/containerd/containerd/platforms",
+            "//vendor/github.com/docker/distribution/manifest/schema2",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//api/types/filters",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//api/types/filters",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "plugin_test",
+    srcs = [
+        "backend_linux_test.go",
+        "manager_linux_test.go",
+        "manager_test.go",
+        "store_test.go",
+    ],
+    embed = [":plugin"],
+    deps = [
+        "//api/types",
+        "//pkg/plugingetter",
+        "//plugin/v2:plugin",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/stringid",
+            "//pkg/system",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/stringid",
+            "//pkg/system",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/gotest.tools/v3/skip",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ profiles/apparmor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "apparmor",
+    srcs = [
+        "apparmor.go",
+        "template.go",
+    ],
+    importpath = "github.com/docker/docker/profiles/apparmor",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/aaparser",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/aaparser",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":apparmor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ profiles/seccomp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "seccomp",
+    srcs = [
+        "kernel_linux.go",
+        "seccomp.go",
+        "seccomp_linux.go",
+        "seccomp_unsupported.go",
+    ],
+    importpath = "github.com/docker/docker/profiles/seccomp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":seccomp",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "seccomp_test",
+    srcs = [
+        "kernel_linux_test.go",
+        "seccomp_test.go",
+    ],
+    embed = [":seccomp"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/gotest.tools/v3/assert",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ quota/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,60 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "quota",
+    srcs = [
+        "errors.go",
+        "projectquota.go",
+        "projectquota_unsupported.go",
+        "testhelpers.go",
+        "types.go",
+    ],
+    cgo = True,
+    importpath = "github.com/docker/docker/quota",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//errdefs",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/fs",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":quota",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "quota_test",
+    srcs = ["projectquota_test.go"],
+    embed = [":quota"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ reference/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "reference",
+    srcs = [
+        "errors.go",
+        "store.go",
+    ],
+    importpath = "github.com/docker/docker/reference",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/ioutils",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":reference",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "reference_test",
+    srcs = ["store_test.go"],
+    embed = [":reference"],
+    deps = [
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ registry/resumable/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "resumable",
+    srcs = ["resumablerequestreader.go"],
+    importpath = "github.com/docker/docker/registry/resumable",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":resumable",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "resumable_test",
+    srcs = ["resumablerequestreader_test.go"],
+    embed = [":resumable"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ registry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,120 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "registry",
+    srcs = [
+        "auth.go",
+        "config.go",
+        "config_unix.go",
+        "config_windows.go",
+        "endpoint_v1.go",
+        "errors.go",
+        "registry.go",
+        "service.go",
+        "service_v2.go",
+        "session.go",
+        "types.go",
+    ],
+    importpath = "github.com/docker/docker/registry",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/registry",
+        "//errdefs",
+        "//pkg/ioutils",
+        "//pkg/jsonmessage",
+        "//pkg/stringid",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/api/errcode",
+        "//vendor/github.com/docker/distribution/registry/client/auth",
+        "//vendor/github.com/docker/distribution/registry/client/auth/challenge",
+        "//vendor/github.com/docker/distribution/registry/client/transport",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/homedir",
+            "//rootless",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":registry",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "registry_test",
+    srcs = [
+        "auth_test.go",
+        "config_test.go",
+        "endpoint_test.go",
+        "registry_mock_test.go",
+        "registry_test.go",
+    ],
+    embed = [":registry"],
+    deps = [
+        "//api/types",
+        "//api/types/registry",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/client/transport",
+        "//vendor/github.com/gorilla/mux",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/skip",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ restartmanager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "restartmanager",
+    srcs = ["restartmanager.go"],
+    importpath = "github.com/docker/docker/restartmanager",
+    visibility = ["//visibility:public"],
+    deps = ["//api/types/container"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":restartmanager",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "restartmanager_test",
+    srcs = ["restartmanager_test.go"],
+    embed = [":restartmanager"],
+    deps = ["//api/types/container"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ rootless/specconv/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "specconv",
+    srcs = ["specconv_linux.go"],
+    importpath = "github.com/docker/docker/rootless/specconv",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":specconv",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ rootless/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rootless",
+    srcs = ["rootless.go"],
+    importpath = "github.com/docker/docker/rootless",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":rootless",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ runconfig/opts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "opts",
+    srcs = ["parse.go"],
+    importpath = "github.com/docker/docker/runconfig/opts",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":opts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ runconfig/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,98 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "runconfig",
+    srcs = [
+        "config.go",
+        "config_unix.go",
+        "config_windows.go",
+        "errors.go",
+        "hostconfig.go",
+        "hostconfig_unix.go",
+        "hostconfig_windows.go",
+    ],
+    importpath = "github.com/docker/docker/runconfig",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//api/types/network",
+        "//pkg/sysinfo",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":runconfig",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "runconfig_test",
+    srcs = [
+        "config_test.go",
+        "hostconfig_test.go",
+        "hostconfig_windows_test.go",
+    ],
+    embed = [":runconfig"],
+    deps = [
+        "//api/types/container",
+        "//api/types/network",
+        "//api/types/strslice",
+        "//pkg/sysinfo",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/daemon/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,102 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "daemon",
+    srcs = [
+        "config.go",
+        "container.go",
+        "daemon.go",
+        "daemon_unix.go",
+        "daemon_windows.go",
+        "doc.go",
+        "node.go",
+        "ops.go",
+        "plugin.go",
+        "secret.go",
+        "service.go",
+        "swarm.go",
+    ],
+    importpath = "github.com/docker/docker/testutil/daemon",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/events",
+        "//api/types/filters",
+        "//api/types/swarm",
+        "//client",
+        "//opts",
+        "//pkg/ioutils",
+        "//pkg/stringid",
+        "//testutil/environment",
+        "//testutil/request",
+        "//vendor/github.com/docker/go-connections/sockets",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/poll",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":daemon",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/environment/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "environment",
+    srcs = [
+        "clean.go",
+        "environment.go",
+        "protect.go",
+    ],
+    importpath = "github.com/docker/docker/testutil/environment",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//client",
+        "//testutil/fixtures/load",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":environment",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/fakecontext/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fakecontext",
+    srcs = ["context.go"],
+    importpath = "github.com/docker/docker/testutil/fakecontext",
+    visibility = ["//visibility:public"],
+    deps = ["//pkg/archive"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fakecontext",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/fakegit/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fakegit",
+    srcs = ["fakegit.go"],
+    importpath = "github.com/docker/docker/testutil/fakegit",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//testutil/fakecontext",
+        "//testutil/fakestorage",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fakegit",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/fakestorage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fakestorage",
+    srcs = [
+        "fixtures.go",
+        "storage.go",
+    ],
+    importpath = "github.com/docker/docker/testutil/fakestorage",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/container",
+        "//client",
+        "//pkg/archive",
+        "//testutil",
+        "//testutil/environment",
+        "//testutil/fakecontext",
+        "//testutil/request",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fakestorage",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/fixtures/load/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "load",
+    srcs = ["frozen.go"],
+    importpath = "github.com/docker/docker/testutil/fixtures/load",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//client",
+        "//pkg/jsonmessage",
+        "//vendor/github.com/moby/term",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":load",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/fixtures/plugin/basic/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "basic_lib",
+    srcs = ["basic.go"],
+    importpath = "github.com/docker/docker/testutil/fixtures/plugin/basic",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "basic",
+    embed = [":basic_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/fixtures/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "plugin",
+    srcs = ["plugin.go"],
+    importpath = "github.com/docker/docker/testutil/fixtures/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//pkg/archive",
+        "//plugin",
+        "//registry",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/registry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "registry",
+    srcs = [
+        "ops.go",
+        "registry.go",
+        "registry_mock.go",
+    ],
+    importpath = "github.com/docker/docker/testutil/registry",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/gotest.tools/v3/assert",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":registry",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/request/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "request",
+    srcs = [
+        "npipe.go",
+        "npipe_windows.go",
+        "ops.go",
+        "request.go",
+    ],
+    importpath = "github.com/docker/docker/testutil/request",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//client",
+        "//opts",
+        "//pkg/ioutils",
+        "//testutil/environment",
+        "//vendor/github.com/docker/go-connections/sockets",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":request",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ testutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "testutil",
+    srcs = [
+        "doc.go",
+        "helper.go",
+        "helpers.go",
+        "stringutils.go",
+    ],
+    importpath = "github.com/docker/docker/testutil",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":testutil",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "testutil_test",
+    srcs = ["stringutils_test.go"],
+    embed = [":testutil"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/archive/tar/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "tar",
+    srcs = [
+        "common.go",
+        "format.go",
+        "reader.go",
+        "stat_actime1.go",
+        "stat_actime2.go",
+        "stat_unix.go",
+        "strconv.go",
+        "writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/archive/tar",
+    importpath = "archive/tar",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tar",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "tar_test",
+    srcs = [
+        "example_test.go",
+        "reader_test.go",
+        "strconv_test.go",
+        "tar_test.go",
+        "writer_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":tar"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/cmd/go-cloud-debug-agent/internal/debug/gosym/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gosym",
+    srcs = [
+        "pclntab.go",
+        "symtab.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go/cmd/go-cloud-debug-agent/internal/debug/gosym",
+    importpath = "cloud.google.com/go/cmd/go-cloud-debug-agent/internal/debug/gosym",
+    visibility = ["//vendor/cloud.google.com/go/cmd/go-cloud-debug-agent:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gosym",
+    visibility = ["//vendor/cloud.google.com/go/cmd/go-cloud-debug-agent:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/compute/metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metadata",
+    srcs = ["metadata.go"],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go/compute/metadata",
+    importpath = "cloud.google.com/go/compute/metadata",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metadata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/internal/version/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = ["version.go"],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go/internal/version",
+    importpath = "cloud.google.com/go/internal/version",
+    visibility = ["//vendor/cloud.google.com/go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":version",
+    visibility = ["//vendor/cloud.google.com/go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/logging/apiv2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "apiv2",
+    srcs = [
+        "config_client.go",
+        "doc.go",
+        "logging_client.go",
+        "metrics_client.go",
+        "path_funcs.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go/logging/apiv2",
+    importpath = "cloud.google.com/go/logging/apiv2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/googleapis/gax-go/v2:gax-go",
+        "//vendor/google.golang.org/api/iterator",
+        "//vendor/google.golang.org/api/option",
+        "//vendor/google.golang.org/api/transport",
+        "//vendor/google.golang.org/genproto/googleapis/api/monitoredres",
+        "//vendor/google.golang.org/genproto/googleapis/logging/v2:logging",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/metadata",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":apiv2",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/logging/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["common.go"],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go/logging/internal",
+    importpath = "cloud.google.com/go/logging/internal",
+    visibility = ["//vendor/cloud.google.com/go/logging:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/cloud.google.com/go/logging:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/logging/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logging",
+    srcs = [
+        "doc.go",
+        "logging.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go/logging",
+    importpath = "cloud.google.com/go/logging",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/cloud.google.com/go/compute/metadata",
+        "//vendor/cloud.google.com/go/internal/version",
+        "//vendor/cloud.google.com/go/logging/apiv2",
+        "//vendor/cloud.google.com/go/logging/internal",
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes",
+        "//vendor/github.com/golang/protobuf/ptypes/struct",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+        "//vendor/google.golang.org/api/option",
+        "//vendor/google.golang.org/api/support/bundler",
+        "//vendor/google.golang.org/genproto/googleapis/api/monitoredres",
+        "//vendor/google.golang.org/genproto/googleapis/logging/type",
+        "//vendor/google.golang.org/genproto/googleapis/logging/v2:logging",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logging",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/cloud.google.com/go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go",
+    srcs = ["cloud.go"],
+    importmap = "github.com/docker/docker/vendor/cloud.google.com/go",
+    importpath = "cloud.google.com/go",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/code.cloudfoundry.org/clock/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "clock",
+    srcs = [
+        "clock.go",
+        "package.go",
+        "ticker.go",
+        "timer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/code.cloudfoundry.org/clock",
+    importpath = "code.cloudfoundry.org/clock",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":clock",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Azure/go-ansiterm/winterm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "winterm",
+    srcs = [
+        "ansi.go",
+        "api.go",
+        "attr_translation.go",
+        "cursor_helpers.go",
+        "erase_helpers.go",
+        "scroll_helper.go",
+        "utilities.go",
+        "win_event_handler.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Azure/go-ansiterm/winterm",
+    importpath = "github.com/Azure/go-ansiterm/winterm",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Azure/go-ansiterm",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":winterm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Azure/go-ansiterm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-ansiterm",
+    srcs = [
+        "constants.go",
+        "context.go",
+        "csi_entry_state.go",
+        "csi_param_state.go",
+        "escape_intermediate_state.go",
+        "escape_state.go",
+        "event_handler.go",
+        "ground_state.go",
+        "osc_string_state.go",
+        "parser.go",
+        "parser_action_helpers.go",
+        "parser_actions.go",
+        "states.go",
+        "utilities.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Azure/go-ansiterm",
+    importpath = "github.com/Azure/go-ansiterm",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-ansiterm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/BurntSushi/toml/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "toml",
+    srcs = [
+        "decode.go",
+        "decode_meta.go",
+        "doc.go",
+        "encode.go",
+        "encoding_types.go",
+        "encoding_types_1.1.go",
+        "lex.go",
+        "parse.go",
+        "type_check.go",
+        "type_fields.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/BurntSushi/toml",
+    importpath = "github.com/BurntSushi/toml",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":toml",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Graylog2/go-gelf/gelf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gelf",
+    srcs = [
+        "message.go",
+        "reader.go",
+        "tcpreader.go",
+        "tcpwriter.go",
+        "udpwriter.go",
+        "utils.go",
+        "writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Graylog2/go-gelf/gelf",
+    importpath = "github.com/Graylog2/go-gelf/gelf",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gelf",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/backuptar/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "backuptar",
+    srcs = [
+        "noop.go",
+        "strconv.go",
+        "tar.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio/backuptar",
+    importpath = "github.com/Microsoft/go-winio/backuptar",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":backuptar",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/pkg/etw/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "etw",
+    srcs = [
+        "etw.go",
+        "eventdata.go",
+        "eventdatadescriptor.go",
+        "eventdescriptor.go",
+        "eventmetadata.go",
+        "eventopt.go",
+        "fieldopt.go",
+        "newprovider.go",
+        "newprovider_unsupported.go",
+        "provider.go",
+        "providerglobal.go",
+        "ptr64_32.go",
+        "ptr64_64.go",
+        "wrapper_32.go",
+        "wrapper_64.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio/pkg/etw",
+    importpath = "github.com/Microsoft/go-winio/pkg/etw",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio/pkg/guid",
+        "//vendor/golang.org/x/sys/windows",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":etw",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/pkg/etwlogrus/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "etwlogrus",
+    srcs = ["hook.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio/pkg/etwlogrus",
+    importpath = "github.com/Microsoft/go-winio/pkg/etwlogrus",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio/pkg/etw",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":etwlogrus",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/pkg/guid/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "guid",
+    srcs = ["guid.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio/pkg/guid",
+    importpath = "github.com/Microsoft/go-winio/pkg/guid",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/sys/windows"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":guid",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/pkg/security/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "security",
+    srcs = [
+        "grantvmgroupaccess.go",
+        "syscall_windows.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio/pkg/security",
+    importpath = "github.com/Microsoft/go-winio/pkg/security",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":security",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/vhd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "vhd",
+    srcs = [
+        "vhd.go",
+        "zvhd.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio/vhd",
+    importpath = "github.com/Microsoft/go-winio/vhd",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/sys/windows"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":vhd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/go-winio/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-winio",
+    srcs = [
+        "backup.go",
+        "ea.go",
+        "file.go",
+        "fileinfo.go",
+        "hvsock.go",
+        "pipe.go",
+        "privilege.go",
+        "reparse.go",
+        "sd.go",
+        "syscall.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/go-winio",
+    importpath = "github.com/Microsoft/go-winio",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio/pkg/guid",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-winio",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/cmd/containerd-shim-runhcs-v1/options/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "options",
+    srcs = [
+        "doc.go",
+        "runhcs.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/cmd/containerd-shim-runhcs-v1/options",
+    importpath = "github.com/Microsoft/hcsshim/cmd/containerd-shim-runhcs-v1/options",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":options",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/ext4/internal/compactext4/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "compactext4",
+    srcs = ["compact.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/ext4/internal/compactext4",
+    importpath = "github.com/Microsoft/hcsshim/ext4/internal/compactext4",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim/ext4:__subpackages__"],
+    deps = ["//vendor/github.com/Microsoft/hcsshim/ext4/internal/format"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":compactext4",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim/ext4:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/ext4/internal/format/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "format",
+    srcs = ["format.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/ext4/internal/format",
+    importpath = "github.com/Microsoft/hcsshim/ext4/internal/format",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim/ext4:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":format",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim/ext4:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/ext4/tar2ext4/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tar2ext4",
+    srcs = [
+        "tar2ext4.go",
+        "vhdfooter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/ext4/tar2ext4",
+    importpath = "github.com/Microsoft/hcsshim/ext4/tar2ext4",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/Microsoft/hcsshim/ext4/internal/compactext4"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tar2ext4",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/cow/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cow",
+    srcs = ["cow.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/cow",
+    importpath = "github.com/Microsoft/hcsshim/internal/cow",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/hcsshim/internal/schema1",
+        "//vendor/github.com/Microsoft/hcsshim/internal/schema2",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cow",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/hcs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hcs",
+    srcs = [
+        "callback.go",
+        "errors.go",
+        "process.go",
+        "syscall.go",
+        "system.go",
+        "utils.go",
+        "waithelper.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/hcs",
+    importpath = "github.com/Microsoft/hcsshim/internal/hcs",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio",
+        "//vendor/github.com/Microsoft/go-winio/vhd",
+        "//vendor/github.com/Microsoft/hcsshim/internal/cow",
+        "//vendor/github.com/Microsoft/hcsshim/internal/interop",
+        "//vendor/github.com/Microsoft/hcsshim/internal/log",
+        "//vendor/github.com/Microsoft/hcsshim/internal/logfields",
+        "//vendor/github.com/Microsoft/hcsshim/internal/oc",
+        "//vendor/github.com/Microsoft/hcsshim/internal/schema1",
+        "//vendor/github.com/Microsoft/hcsshim/internal/schema2",
+        "//vendor/github.com/Microsoft/hcsshim/internal/timeout",
+        "//vendor/github.com/Microsoft/hcsshim/internal/vmcompute",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.opencensus.io/trace",
+        "//vendor/golang.org/x/sys/windows",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hcs",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/hcserror/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hcserror",
+    srcs = ["hcserror.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/hcserror",
+    importpath = "github.com/Microsoft/hcsshim/internal/hcserror",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hcserror",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/hns/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hns",
+    srcs = [
+        "hns.go",
+        "hnsendpoint.go",
+        "hnsfuncs.go",
+        "hnsglobals.go",
+        "hnsnetwork.go",
+        "hnspolicy.go",
+        "hnspolicylist.go",
+        "hnssupport.go",
+        "namespace.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/hns",
+    importpath = "github.com/Microsoft/hcsshim/internal/hns",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/hcsshim/internal/hcserror",
+        "//vendor/github.com/Microsoft/hcsshim/internal/interop",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hns",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/interop/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "interop",
+    srcs = [
+        "interop.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/interop",
+    importpath = "github.com/Microsoft/hcsshim/internal/interop",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":interop",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/log/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "log",
+    srcs = ["g.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/log",
+    importpath = "github.com/Microsoft/hcsshim/internal/log",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.opencensus.io/trace",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":log",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/logfields/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logfields",
+    srcs = ["fields.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/logfields",
+    importpath = "github.com/Microsoft/hcsshim/internal/logfields",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logfields",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/longpath/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "longpath",
+    srcs = ["longpath.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/longpath",
+    importpath = "github.com/Microsoft/hcsshim/internal/longpath",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":longpath",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/mergemaps/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mergemaps",
+    srcs = ["merge.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/mergemaps",
+    importpath = "github.com/Microsoft/hcsshim/internal/mergemaps",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mergemaps",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/oc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "oc",
+    srcs = [
+        "exporter.go",
+        "span.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/oc",
+    importpath = "github.com/Microsoft/hcsshim/internal/oc",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.opencensus.io/trace",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":oc",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/safefile/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "safefile",
+    srcs = [
+        "safeopen.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/safefile",
+    importpath = "github.com/Microsoft/hcsshim/internal/safefile",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio",
+        "//vendor/github.com/Microsoft/hcsshim/internal/longpath",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":safefile",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/schema1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "schema1",
+    srcs = ["schema1.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/schema1",
+    importpath = "github.com/Microsoft/hcsshim/internal/schema1",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio/pkg/guid",
+        "//vendor/github.com/Microsoft/hcsshim/internal/schema2",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":schema1",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/schema2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,102 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "schema2",
+    srcs = [
+        "attachment.go",
+        "battery.go",
+        "cache_query_stats_response.go",
+        "chipset.go",
+        "close_handle.go",
+        "com_port.go",
+        "compute_system.go",
+        "configuration.go",
+        "console_size.go",
+        "container.go",
+        "container_credential_guard_state.go",
+        "container_memory_information.go",
+        "device.go",
+        "devices.go",
+        "enhanced_mode_video.go",
+        "flexible_io_device.go",
+        "guest_connection.go",
+        "guest_connection_info.go",
+        "guest_crash_reporting.go",
+        "guest_os.go",
+        "guest_state.go",
+        "hosted_system.go",
+        "hv_socket.go",
+        "hv_socket_2.go",
+        "hv_socket_service_config.go",
+        "hv_socket_system_config.go",
+        "keyboard.go",
+        "layer.go",
+        "linux_kernel_direct.go",
+        "mapped_directory.go",
+        "mapped_pipe.go",
+        "memory.go",
+        "memory_2.go",
+        "memory_information_for_vm.go",
+        "memory_stats.go",
+        "modify_setting_request.go",
+        "mouse.go",
+        "network_adapter.go",
+        "networking.go",
+        "pause_notification.go",
+        "pause_options.go",
+        "plan9.go",
+        "plan9_share.go",
+        "process_details.go",
+        "process_modify_request.go",
+        "process_parameters.go",
+        "process_status.go",
+        "processor.go",
+        "processor_2.go",
+        "processor_stats.go",
+        "properties.go",
+        "property_query.go",
+        "property_type.go",
+        "rdp_connection_options.go",
+        "registry_changes.go",
+        "registry_key.go",
+        "registry_value.go",
+        "restore_state.go",
+        "save_options.go",
+        "scsi.go",
+        "shared_memory_configuration.go",
+        "shared_memory_region.go",
+        "shared_memory_region_info.go",
+        "silo_properties.go",
+        "statistics.go",
+        "storage.go",
+        "storage_qo_s.go",
+        "storage_stats.go",
+        "topology.go",
+        "uefi.go",
+        "uefi_boot_entry.go",
+        "version.go",
+        "video_monitor.go",
+        "virtual_machine.go",
+        "virtual_node_info.go",
+        "virtual_p_mem_controller.go",
+        "virtual_p_mem_device.go",
+        "virtual_pci_device.go",
+        "virtual_pci_function.go",
+        "virtual_smb.go",
+        "virtual_smb_share.go",
+        "virtual_smb_share_options.go",
+        "vm_memory.go",
+        "windows_crash_reporting.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/schema2",
+    importpath = "github.com/Microsoft/hcsshim/internal/schema2",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = ["//vendor/github.com/containerd/cgroups/stats/v1:stats"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":schema2",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/timeout/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "timeout",
+    srcs = ["timeout.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/timeout",
+    importpath = "github.com/Microsoft/hcsshim/internal/timeout",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":timeout",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/vmcompute/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "vmcompute",
+    srcs = [
+        "vmcompute.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/vmcompute",
+    importpath = "github.com/Microsoft/hcsshim/internal/vmcompute",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/hcsshim/internal/interop",
+        "//vendor/github.com/Microsoft/hcsshim/internal/log",
+        "//vendor/github.com/Microsoft/hcsshim/internal/logfields",
+        "//vendor/github.com/Microsoft/hcsshim/internal/oc",
+        "//vendor/github.com/Microsoft/hcsshim/internal/timeout",
+        "//vendor/go.opencensus.io/trace",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":vmcompute",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/internal/wclayer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,57 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "wclayer",
+    srcs = [
+        "activatelayer.go",
+        "baselayer.go",
+        "createlayer.go",
+        "createscratchlayer.go",
+        "deactivatelayer.go",
+        "destroylayer.go",
+        "expandscratchsize.go",
+        "exportlayer.go",
+        "getlayermountpath.go",
+        "getsharedbaseimages.go",
+        "grantvmaccess.go",
+        "importlayer.go",
+        "layerexists.go",
+        "layerid.go",
+        "layerutils.go",
+        "legacy.go",
+        "nametoguid.go",
+        "preparelayer.go",
+        "processimage.go",
+        "unpreparelayer.go",
+        "wclayer.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/internal/wclayer",
+    importpath = "github.com/Microsoft/hcsshim/internal/wclayer",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio",
+        "//vendor/github.com/Microsoft/go-winio/pkg/guid",
+        "//vendor/github.com/Microsoft/hcsshim/internal/hcserror",
+        "//vendor/github.com/Microsoft/hcsshim/internal/interop",
+        "//vendor/github.com/Microsoft/hcsshim/internal/log",
+        "//vendor/github.com/Microsoft/hcsshim/internal/longpath",
+        "//vendor/github.com/Microsoft/hcsshim/internal/oc",
+        "//vendor/github.com/Microsoft/hcsshim/internal/safefile",
+        "//vendor/github.com/Microsoft/hcsshim/osversion",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.opencensus.io/trace",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":wclayer",
+    visibility = ["//vendor/github.com/Microsoft/hcsshim:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/osversion/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "osversion",
+    srcs = [
+        "osversion_windows.go",
+        "windowsbuilds.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim/osversion",
+    importpath = "github.com/Microsoft/hcsshim/osversion",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":osversion",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/hcsshim/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,44 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hcsshim",
+    srcs = [
+        "container.go",
+        "errors.go",
+        "hcsshim.go",
+        "hnsendpoint.go",
+        "hnsglobals.go",
+        "hnsnetwork.go",
+        "hnspolicy.go",
+        "hnspolicylist.go",
+        "hnssupport.go",
+        "interface.go",
+        "layer.go",
+        "process.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/hcsshim",
+    importpath = "github.com/Microsoft/hcsshim",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/Microsoft/go-winio/pkg/guid",
+        "//vendor/github.com/Microsoft/hcsshim/internal/hcs",
+        "//vendor/github.com/Microsoft/hcsshim/internal/hcserror",
+        "//vendor/github.com/Microsoft/hcsshim/internal/hns",
+        "//vendor/github.com/Microsoft/hcsshim/internal/mergemaps",
+        "//vendor/github.com/Microsoft/hcsshim/internal/schema1",
+        "//vendor/github.com/Microsoft/hcsshim/internal/wclayer",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hcsshim",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/opengcs/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "config.go",
+        "createext4vhdx.go",
+        "hotaddvhd.go",
+        "hotremovevhd.go",
+        "init.go",
+        "layervhddetails.go",
+        "process.go",
+        "unsupported.go",
+        "utilities.go",
+        "vhdtotar.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/opengcs/client",
+    importpath = "github.com/Microsoft/opengcs/client",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio/vhd",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/Microsoft/opengcs/service/gcsutils/remotefs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,90 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remotefs",
+    srcs = [
+        "defs.go",
+        "remotefs.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/Microsoft/opengcs/service/gcsutils/remotefs",
+    importpath = "github.com/Microsoft/opengcs/service/gcsutils/remotefs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/archive",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//pkg/symlink",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remotefs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/RackSec/srslog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "srslog",
+    srcs = [
+        "constants.go",
+        "dialer.go",
+        "formatter.go",
+        "framer.go",
+        "net_conn.go",
+        "srslog.go",
+        "srslog_unix.go",
+        "writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/RackSec/srslog",
+    importpath = "github.com/RackSec/srslog",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":srslog",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/armon/go-metrics/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-metrics",
+    srcs = [
+        "const_unix.go",
+        "const_windows.go",
+        "inmem.go",
+        "inmem_signal.go",
+        "metrics.go",
+        "sink.go",
+        "start.go",
+        "statsd.go",
+        "statsite.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/armon/go-metrics",
+    importpath = "github.com/armon/go-metrics",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-metrics",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/armon/go-radix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-radix",
+    srcs = ["radix.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/armon/go-radix",
+    importpath = "github.com/armon/go-radix",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-radix",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/awserr/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "awserr",
+    srcs = [
+        "error.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/awserr",
+    importpath = "github.com/aws/aws-sdk-go/aws/awserr",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":awserr",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/awsutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "awsutil",
+    srcs = [
+        "copy.go",
+        "equal.go",
+        "path_value.go",
+        "prettify.go",
+        "string_value.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/awsutil",
+    importpath = "github.com/aws/aws-sdk-go/aws/awsutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/jmespath/go-jmespath"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":awsutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/client/metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metadata",
+    srcs = ["client_info.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+    importpath = "github.com/aws/aws-sdk-go/aws/client/metadata",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metadata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "client.go",
+        "default_retryer.go",
+        "logger.go",
+        "no_op_retryer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/client",
+    importpath = "github.com/aws/aws-sdk-go/aws/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkrand",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/corehandlers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "corehandlers",
+    srcs = [
+        "handlers.go",
+        "param_validator.go",
+        "user_agent.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/corehandlers",
+    importpath = "github.com/aws/aws-sdk-go/aws/corehandlers",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":corehandlers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/credentials/ec2rolecreds/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ec2rolecreds",
+    srcs = ["ec2_role_provider.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/credentials/ec2rolecreds",
+    importpath = "github.com/aws/aws-sdk-go/aws/credentials/ec2rolecreds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/ec2metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkuri",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ec2rolecreds",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/credentials/endpointcreds/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "endpointcreds",
+    srcs = ["provider.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/credentials/endpointcreds",
+    importpath = "github.com/aws/aws-sdk-go/aws/credentials/endpointcreds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/json/jsonutil",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":endpointcreds",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/credentials/processcreds/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "processcreds",
+    srcs = ["provider.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/credentials/processcreds",
+    importpath = "github.com/aws/aws-sdk-go/aws/credentials/processcreds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkio",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":processcreds",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/credentials/stscreds/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stscreds",
+    srcs = [
+        "assume_role_provider.go",
+        "web_identity_provider.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/credentials/stscreds",
+    importpath = "github.com/aws/aws-sdk-go/aws/credentials/stscreds",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkrand",
+        "//vendor/github.com/aws/aws-sdk-go/service/sts",
+        "//vendor/github.com/aws/aws-sdk-go/service/sts/stsiface",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stscreds",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/credentials/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "credentials",
+    srcs = [
+        "chain_provider.go",
+        "credentials.go",
+        "env_provider.go",
+        "shared_credentials_provider.go",
+        "static_provider.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/credentials",
+    importpath = "github.com/aws/aws-sdk-go/aws/credentials",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/internal/ini",
+        "//vendor/github.com/aws/aws-sdk-go/internal/shareddefaults",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":credentials",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/csm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "csm",
+    srcs = [
+        "doc.go",
+        "enable.go",
+        "metric.go",
+        "metric_chan.go",
+        "metric_exception.go",
+        "reporter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/csm",
+    importpath = "github.com/aws/aws-sdk-go/aws/csm",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":csm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/defaults/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "defaults",
+    srcs = [
+        "defaults.go",
+        "shared_config.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/defaults",
+    importpath = "github.com/aws/aws-sdk-go/aws/defaults",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/corehandlers",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials/ec2rolecreds",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials/endpointcreds",
+        "//vendor/github.com/aws/aws-sdk-go/aws/ec2metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/endpoints",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/shareddefaults",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":defaults",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/ec2metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ec2metadata",
+    srcs = [
+        "api.go",
+        "service.go",
+        "token_provider.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/ec2metadata",
+    importpath = "github.com/aws/aws-sdk-go/aws/ec2metadata",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/corehandlers",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkuri",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ec2metadata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/endpoints/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "endpoints",
+    srcs = [
+        "decode.go",
+        "defaults.go",
+        "dep_service_ids.go",
+        "doc.go",
+        "endpoints.go",
+        "legacy_regions.go",
+        "v3model.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/endpoints",
+    importpath = "github.com/aws/aws-sdk-go/aws/endpoints",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/aws/aws-sdk-go/aws/awserr"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":endpoints",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/request/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "request",
+    srcs = [
+        "connection_reset_error.go",
+        "handlers.go",
+        "http_request.go",
+        "offset_reader.go",
+        "request.go",
+        "request_1_7.go",
+        "request_1_8.go",
+        "request_context.go",
+        "request_context_1_6.go",
+        "request_pagination.go",
+        "retryer.go",
+        "timeout_read_closer.go",
+        "validation.go",
+        "waiter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/request",
+    importpath = "github.com/aws/aws-sdk-go/aws/request",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awsutil",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkio",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":request",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/session/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "session",
+    srcs = [
+        "cabundle_transport.go",
+        "cabundle_transport_1_5.go",
+        "cabundle_transport_1_6.go",
+        "credentials.go",
+        "doc.go",
+        "env_config.go",
+        "session.go",
+        "shared_config.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/session",
+    importpath = "github.com/aws/aws-sdk-go/aws/session",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/corehandlers",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials/processcreds",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials/stscreds",
+        "//vendor/github.com/aws/aws-sdk-go/aws/csm",
+        "//vendor/github.com/aws/aws-sdk-go/aws/defaults",
+        "//vendor/github.com/aws/aws-sdk-go/aws/endpoints",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/ini",
+        "//vendor/github.com/aws/aws-sdk-go/internal/shareddefaults",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":session",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/signer/v4/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "signer",
+    srcs = [
+        "header_rules.go",
+        "options.go",
+        "stream.go",
+        "uri_path.go",
+        "v4.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws/signer/v4",
+    importpath = "github.com/aws/aws-sdk-go/aws/signer/v4",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkio",
+        "//vendor/github.com/aws/aws-sdk-go/internal/strings",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/rest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":signer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/aws/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "aws",
+    srcs = [
+        "config.go",
+        "context_1_5.go",
+        "context_1_9.go",
+        "context_background_1_5.go",
+        "context_background_1_7.go",
+        "context_sleep.go",
+        "convert_types.go",
+        "doc.go",
+        "errors.go",
+        "jsonvalue.go",
+        "logger.go",
+        "types.go",
+        "url.go",
+        "url_1_7.go",
+        "version.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/aws",
+    importpath = "github.com/aws/aws-sdk-go/aws",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/endpoints",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkio",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":aws",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/ini/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ini",
+    srcs = [
+        "ast.go",
+        "comma_token.go",
+        "comment_token.go",
+        "doc.go",
+        "empty_token.go",
+        "expression.go",
+        "ini.go",
+        "ini_lexer.go",
+        "ini_parser.go",
+        "literal_tokens.go",
+        "newline_token.go",
+        "number_helper.go",
+        "op_tokens.go",
+        "parse_error.go",
+        "parse_stack.go",
+        "sep_tokens.go",
+        "skipper.go",
+        "statement.go",
+        "value_util.go",
+        "visitor.go",
+        "walker.go",
+        "ws_token.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/ini",
+    importpath = "github.com/aws/aws-sdk-go/internal/ini",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+    deps = ["//vendor/github.com/aws/aws-sdk-go/aws/awserr"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ini",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/sdkio/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sdkio",
+    srcs = [
+        "byte.go",
+        "io_go1.6.go",
+        "io_go1.7.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/sdkio",
+    importpath = "github.com/aws/aws-sdk-go/internal/sdkio",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sdkio",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/sdkmath/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sdkmath",
+    srcs = [
+        "floor.go",
+        "floor_go1.9.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/sdkmath",
+    importpath = "github.com/aws/aws-sdk-go/internal/sdkmath",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sdkmath",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/sdkrand/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sdkrand",
+    srcs = [
+        "locked_source.go",
+        "read.go",
+        "read_1_5.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/sdkrand",
+    importpath = "github.com/aws/aws-sdk-go/internal/sdkrand",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sdkrand",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/sdkuri/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sdkuri",
+    srcs = ["path.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/sdkuri",
+    importpath = "github.com/aws/aws-sdk-go/internal/sdkuri",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sdkuri",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/shareddefaults/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "shareddefaults",
+    srcs = [
+        "ecs_container.go",
+        "shared_config.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/shareddefaults",
+    importpath = "github.com/aws/aws-sdk-go/internal/shareddefaults",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":shareddefaults",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/internal/strings/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "strings",
+    srcs = ["strings.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/internal/strings",
+    importpath = "github.com/aws/aws-sdk-go/internal/strings",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":strings",
+    visibility = ["//vendor/github.com/aws/aws-sdk-go:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/json/jsonutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jsonutil",
+    srcs = [
+        "build.go",
+        "unmarshal.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol/json/jsonutil",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol/json/jsonutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/jsonrpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jsonrpc",
+    srcs = [
+        "jsonrpc.go",
+        "unmarshal_error.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol/jsonrpc",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol/jsonrpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/json/jsonutil",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/rest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonrpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/query/queryutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "queryutil",
+    srcs = ["queryutil.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol/query/queryutil",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol/query/queryutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/aws/aws-sdk-go/private/protocol"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":queryutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/query/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "query",
+    srcs = [
+        "build.go",
+        "unmarshal.go",
+        "unmarshal_error.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol/query",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol/query",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/query/queryutil",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/xml/xmlutil",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":query",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/rest/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rest",
+    srcs = [
+        "build.go",
+        "payload.go",
+        "unmarshal.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol/rest",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol/rest",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/strings",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":rest",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/xml/xmlutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "xmlutil",
+    srcs = [
+        "build.go",
+        "sort.go",
+        "unmarshal.go",
+        "xml_to_struct.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol/xml/xmlutil",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol/xml/xmlutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":xmlutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/private/protocol/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "protocol",
+    srcs = [
+        "host.go",
+        "host_prefix.go",
+        "idempotency.go",
+        "jsonvalue.go",
+        "payload.go",
+        "protocol.go",
+        "timestamp.go",
+        "unmarshal.go",
+        "unmarshal_error.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/private/protocol",
+    importpath = "github.com/aws/aws-sdk-go/private/protocol",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awserr",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/internal/sdkmath",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":protocol",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/service/cloudwatchlogs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cloudwatchlogs",
+    srcs = [
+        "api.go",
+        "doc.go",
+        "errors.go",
+        "service.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/service/cloudwatchlogs",
+    importpath = "github.com/aws/aws-sdk-go/service/cloudwatchlogs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awsutil",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/aws/signer/v4:signer",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/jsonrpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cloudwatchlogs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/service/sts/stsiface/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stsiface",
+    srcs = ["interface.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/service/sts/stsiface",
+    importpath = "github.com/aws/aws-sdk-go/service/sts/stsiface",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/service/sts",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stsiface",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/aws/aws-sdk-go/service/sts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sts",
+    srcs = [
+        "api.go",
+        "customizations.go",
+        "doc.go",
+        "errors.go",
+        "service.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/aws/aws-sdk-go/service/sts",
+    importpath = "github.com/aws/aws-sdk-go/service/sts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/aws/aws-sdk-go/aws",
+        "//vendor/github.com/aws/aws-sdk-go/aws/awsutil",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client",
+        "//vendor/github.com/aws/aws-sdk-go/aws/client/metadata",
+        "//vendor/github.com/aws/aws-sdk-go/aws/credentials",
+        "//vendor/github.com/aws/aws-sdk-go/aws/request",
+        "//vendor/github.com/aws/aws-sdk-go/aws/signer/v4:signer",
+        "//vendor/github.com/aws/aws-sdk-go/private/protocol/query",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/beorn7/perks/quantile/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "quantile",
+    srcs = ["stream.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/beorn7/perks/quantile",
+    importpath = "github.com/beorn7/perks/quantile",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":quantile",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/bsphere/le_go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "le_go",
+    srcs = ["le.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/bsphere/le_go",
+    importpath = "github.com/bsphere/le_go",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":le_go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cespare/xxhash/v2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "xxhash",
+    srcs = [
+        "xxhash.go",
+        "xxhash_amd64.go",
+        "xxhash_amd64.s",
+        "xxhash_other.go",
+        "xxhash_unsafe.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cespare/xxhash/v2",
+    importpath = "github.com/cespare/xxhash/v2",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":xxhash",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cilium/ebpf/asm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "asm",
+    srcs = [
+        "alu.go",
+        "alu_string.go",
+        "doc.go",
+        "func.go",
+        "func_string.go",
+        "instruction.go",
+        "jump.go",
+        "jump_string.go",
+        "load_store.go",
+        "load_store_string.go",
+        "opcode.go",
+        "opcode_string.go",
+        "register.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cilium/ebpf/asm",
+    importpath = "github.com/cilium/ebpf/asm",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":asm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cilium/ebpf/internal/btf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "btf",
+    srcs = [
+        "btf.go",
+        "btf_types.go",
+        "doc.go",
+        "ext_info.go",
+        "strings.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cilium/ebpf/internal/btf",
+    importpath = "github.com/cilium/ebpf/internal/btf",
+    visibility = ["//vendor/github.com/cilium/ebpf:__subpackages__"],
+    deps = [
+        "//vendor/github.com/cilium/ebpf/asm",
+        "//vendor/github.com/cilium/ebpf/internal",
+        "//vendor/github.com/cilium/ebpf/internal/unix",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":btf",
+    visibility = ["//vendor/github.com/cilium/ebpf:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cilium/ebpf/internal/unix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "unix",
+    srcs = [
+        "types_linux.go",
+        "types_other.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cilium/ebpf/internal/unix",
+    importpath = "github.com/cilium/ebpf/internal/unix",
+    visibility = ["//vendor/github.com/cilium/ebpf:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":unix",
+    visibility = ["//vendor/github.com/cilium/ebpf:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cilium/ebpf/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = [
+        "cpu.go",
+        "endian.go",
+        "errors.go",
+        "fd.go",
+        "feature.go",
+        "io.go",
+        "ptr.go",
+        "ptr_32_be.go",
+        "ptr_32_le.go",
+        "ptr_64.go",
+        "syscall.go",
+        "syscall_string.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cilium/ebpf/internal",
+    importpath = "github.com/cilium/ebpf/internal",
+    visibility = ["//vendor/github.com/cilium/ebpf:__subpackages__"],
+    deps = ["//vendor/github.com/cilium/ebpf/internal/unix"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/github.com/cilium/ebpf:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cilium/ebpf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ebpf",
+    srcs = [
+        "abi.go",
+        "collection.go",
+        "doc.go",
+        "elf_reader.go",
+        "linker.go",
+        "map.go",
+        "marshalers.go",
+        "prog.go",
+        "syscalls.go",
+        "types.go",
+        "types_string.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cilium/ebpf",
+    importpath = "github.com/cilium/ebpf",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cilium/ebpf/asm",
+        "//vendor/github.com/cilium/ebpf/internal",
+        "//vendor/github.com/cilium/ebpf/internal/btf",
+        "//vendor/github.com/cilium/ebpf/internal/unix",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ebpf",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = ["api.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/api",
+    importpath = "github.com/cloudflare/cfssl/api",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/log",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/auth/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "auth",
+    srcs = ["auth.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/auth",
+    importpath = "github.com/cloudflare/cfssl/auth",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":auth",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/certdb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "certdb",
+    srcs = ["certdb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/certdb",
+    importpath = "github.com/cloudflare/cfssl/certdb",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":certdb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "config",
+    srcs = ["config.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/config",
+    importpath = "github.com/cloudflare/cfssl/config",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/auth",
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/cloudflare/cfssl/log",
+        "//vendor/github.com/cloudflare/cfssl/ocsp/config",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/crypto/pkcs7/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkcs7",
+    srcs = ["pkcs7.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/crypto/pkcs7",
+    importpath = "github.com/cloudflare/cfssl/crypto/pkcs7",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/cloudflare/cfssl/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pkcs7",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/csr/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "csr",
+    srcs = ["csr.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/csr",
+    importpath = "github.com/cloudflare/cfssl/csr",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/cloudflare/cfssl/log",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":csr",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/errors/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errors",
+    srcs = [
+        "doc.go",
+        "error.go",
+        "http.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/errors",
+    importpath = "github.com/cloudflare/cfssl/errors",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errors",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/helpers/derhelpers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "derhelpers",
+    srcs = ["derhelpers.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/helpers/derhelpers",
+    importpath = "github.com/cloudflare/cfssl/helpers/derhelpers",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/cloudflare/cfssl/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":derhelpers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/helpers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "helpers",
+    srcs = ["helpers.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/helpers",
+    importpath = "github.com/cloudflare/cfssl/helpers",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/crypto/pkcs7",
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/helpers/derhelpers",
+        "//vendor/github.com/cloudflare/cfssl/log",
+        "//vendor/github.com/google/certificate-transparency-go",
+        "//vendor/github.com/google/certificate-transparency-go/tls",
+        "//vendor/github.com/google/certificate-transparency-go/x509",
+        "//vendor/golang.org/x/crypto/ocsp",
+        "//vendor/golang.org/x/crypto/pkcs12",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":helpers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/info/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "info",
+    srcs = ["info.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/info",
+    importpath = "github.com/cloudflare/cfssl/info",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":info",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/initca/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "initca",
+    srcs = ["initca.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/initca",
+    importpath = "github.com/cloudflare/cfssl/initca",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/config",
+        "//vendor/github.com/cloudflare/cfssl/csr",
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/cloudflare/cfssl/log",
+        "//vendor/github.com/cloudflare/cfssl/signer",
+        "//vendor/github.com/cloudflare/cfssl/signer/local",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":initca",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/log/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "log",
+    srcs = ["log.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/log",
+    importpath = "github.com/cloudflare/cfssl/log",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":log",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/ocsp/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "config",
+    srcs = ["config.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/ocsp/config",
+    importpath = "github.com/cloudflare/cfssl/ocsp/config",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/signer/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "local",
+    srcs = ["local.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/signer/local",
+    importpath = "github.com/cloudflare/cfssl/signer/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/certdb",
+        "//vendor/github.com/cloudflare/cfssl/config",
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/cloudflare/cfssl/info",
+        "//vendor/github.com/cloudflare/cfssl/log",
+        "//vendor/github.com/cloudflare/cfssl/signer",
+        "//vendor/github.com/google/certificate-transparency-go",
+        "//vendor/github.com/google/certificate-transparency-go/client",
+        "//vendor/github.com/google/certificate-transparency-go/jsonclient",
+        "//vendor/golang.org/x/net/context",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cloudflare/cfssl/signer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "signer",
+    srcs = ["signer.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/cloudflare/cfssl/signer",
+    importpath = "github.com/cloudflare/cfssl/signer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/certdb",
+        "//vendor/github.com/cloudflare/cfssl/config",
+        "//vendor/github.com/cloudflare/cfssl/csr",
+        "//vendor/github.com/cloudflare/cfssl/errors",
+        "//vendor/github.com/cloudflare/cfssl/info",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":signer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/cgroups/stats/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "doc.go",
+        "metrics.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/cgroups/stats/v1",
+    importpath = "github.com/containerd/cgroups/stats/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stats",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/cgroups/v2/stats/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "doc.go",
+        "metrics.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/cgroups/v2/stats",
+    importpath = "github.com/containerd/cgroups/v2/stats",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stats",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/cgroups/v2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cgroups",
+    srcs = [
+        "cpu.go",
+        "devicefilter.go",
+        "ebpf.go",
+        "errors.go",
+        "hugetlb.go",
+        "io.go",
+        "manager.go",
+        "memory.go",
+        "paths.go",
+        "pids.go",
+        "rdma.go",
+        "state.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/cgroups/v2",
+    importpath = "github.com/containerd/cgroups/v2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cilium/ebpf",
+        "//vendor/github.com/cilium/ebpf/asm",
+        "//vendor/github.com/containerd/cgroups/v2/stats",
+        "//vendor/github.com/coreos/go-systemd/v22/dbus",
+        "//vendor/github.com/godbus/dbus/v5:dbus",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sys/unix",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cgroups",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/cgroups/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cgroups",
+    srcs = [
+        "blkio.go",
+        "cgroup.go",
+        "control.go",
+        "cpu.go",
+        "cpuacct.go",
+        "cpuset.go",
+        "devices.go",
+        "errors.go",
+        "freezer.go",
+        "hierarchy.go",
+        "hugetlb.go",
+        "memory.go",
+        "named.go",
+        "net_cls.go",
+        "net_prio.go",
+        "opts.go",
+        "paths.go",
+        "perf_event.go",
+        "pids.go",
+        "rdma.go",
+        "state.go",
+        "subsystem.go",
+        "systemd.go",
+        "ticks.go",
+        "utils.go",
+        "v1.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/cgroups",
+    importpath = "github.com/containerd/cgroups",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/cgroups/stats/v1:stats",
+        "//vendor/github.com/coreos/go-systemd/v22/dbus",
+        "//vendor/github.com/docker/go-units",
+        "//vendor/github.com/godbus/dbus/v5:dbus",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sys/unix",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cgroups",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/console/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,62 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "console",
+    srcs = [
+        "console.go",
+        "console_linux.go",
+        "console_unix.go",
+        "console_windows.go",
+        "tc_darwin.go",
+        "tc_freebsd.go",
+        "tc_linux.go",
+        "tc_netbsd.go",
+        "tc_openbsd_cgo.go",
+        "tc_openbsd_nocgo.go",
+        "tc_solaris_cgo.go",
+        "tc_solaris_nocgo.go",
+        "tc_unix.go",
+    ],
+    cgo = True,
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/console",
+    importpath = "github.com/containerd/console",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":console",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/events/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "events",
+    srcs = [
+        "container.pb.go",
+        "content.pb.go",
+        "doc.go",
+        "image.pb.go",
+        "namespace.pb.go",
+        "snapshot.pb.go",
+        "task.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/events",
+    importpath = "github.com/containerd/containerd/api/events",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":events",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/containers/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containers",
+    srcs = ["containers.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/containers/v1",
+    importpath = "github.com/containerd/containerd/api/services/containers/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/content/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "content",
+    srcs = ["content.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/content/v1",
+    importpath = "github.com/containerd/containerd/api/services/content/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":content",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/diff/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "diff",
+    srcs = ["diff.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/diff/v1",
+    importpath = "github.com/containerd/containerd/api/services/diff/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":diff",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/events/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "events",
+    srcs = [
+        "doc.go",
+        "events.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/events/v1",
+    importpath = "github.com/containerd/containerd/api/services/events/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":events",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/images/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "images",
+    srcs = [
+        "docs.go",
+        "images.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/images/v1",
+    importpath = "github.com/containerd/containerd/api/services/images/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":images",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/introspection/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "introspection",
+    srcs = [
+        "doc.go",
+        "introspection.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/introspection/v1",
+    importpath = "github.com/containerd/containerd/api/services/introspection/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/gogo/googleapis/google/rpc",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":introspection",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/leases/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "leases",
+    srcs = [
+        "doc.go",
+        "leases.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/leases/v1",
+    importpath = "github.com/containerd/containerd/api/services/leases/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":leases",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/namespaces/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "namespaces",
+    srcs = ["namespace.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/namespaces/v1",
+    importpath = "github.com/containerd/containerd/api/services/namespaces/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":namespaces",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/snapshots/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snapshots",
+    srcs = ["snapshots.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/snapshots/v1",
+    importpath = "github.com/containerd/containerd/api/services/snapshots/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":snapshots",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/tasks/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tasks",
+    srcs = ["tasks.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/tasks/v1",
+    importpath = "github.com/containerd/containerd/api/services/tasks/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/containerd/api/types/task",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tasks",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/services/version/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = ["version.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/services/version/v1",
+    importpath = "github.com/containerd/containerd/api/services/version/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":version",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/types/task/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "task",
+    srcs = ["task.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/types/task",
+    importpath = "github.com/containerd/containerd/api/types/task",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":task",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/api/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "descriptor.pb.go",
+        "doc.go",
+        "metrics.pb.go",
+        "mount.pb.go",
+        "platform.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/api/types",
+    importpath = "github.com/containerd/containerd/api/types",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/archive/compression/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "compression",
+    srcs = ["compression.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/archive/compression",
+    importpath = "github.com/containerd/containerd/archive/compression",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/containerd/containerd/log"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":compression",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/archive/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,105 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "archive",
+    srcs = [
+        "strconv.go",
+        "tar.go",
+        "tar_opts.go",
+        "tar_opts_linux.go",
+        "tar_opts_windows.go",
+        "tar_unix.go",
+        "tar_windows.go",
+        "time.go",
+        "time_unix.go",
+        "time_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/archive",
+    importpath = "github.com/containerd/containerd/archive",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":archive",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/cio/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,82 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cio",
+    srcs = [
+        "io.go",
+        "io_unix.go",
+        "io_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/cio",
+    importpath = "github.com/containerd/containerd/cio",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/defaults",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cio",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/containers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containers",
+    srcs = ["containers.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/containers",
+    importpath = "github.com/containerd/containerd/containers",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/types"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/content/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,56 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "local",
+    srcs = [
+        "locks.go",
+        "readerat.go",
+        "store.go",
+        "store_unix.go",
+        "store_windows.go",
+        "writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/content/local",
+    importpath = "github.com/containerd/containerd/content/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/filters",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/sys",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/content/proxy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proxy",
+    srcs = [
+        "content_reader.go",
+        "content_store.go",
+        "content_writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/content/proxy",
+    importpath = "github.com/containerd/containerd/content/proxy",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/content/v1:content",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proxy",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/content/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "content",
+    srcs = [
+        "content.go",
+        "helpers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/content",
+    importpath = "github.com/containerd/containerd/content",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":content",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/contrib/nvidia/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nvidia",
+    srcs = ["nvidia.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/contrib/nvidia",
+    importpath = "github.com/containerd/containerd/contrib/nvidia",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/containers",
+        "//vendor/github.com/containerd/containerd/oci",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":nvidia",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/defaults/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "defaults",
+    srcs = [
+        "defaults.go",
+        "defaults_unix.go",
+        "defaults_windows.go",
+        "doc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/defaults",
+    importpath = "github.com/containerd/containerd/defaults",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":defaults",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/diff/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,75 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "diff",
+    srcs = [
+        "diff.go",
+        "stream.go",
+        "stream_unix.go",
+        "stream_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/diff",
+    importpath = "github.com/containerd/containerd/diff",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/archive/compression",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/gogo/protobuf/proto",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/gogo/protobuf/proto",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":diff",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/errdefs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errdefs",
+    srcs = [
+        "errors.go",
+        "grpc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/errdefs",
+    importpath = "github.com/containerd/containerd/errdefs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errdefs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/events/exchange/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exchange",
+    srcs = ["exchange.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/events/exchange",
+    importpath = "github.com/containerd/containerd/events/exchange",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/events",
+        "//vendor/github.com/containerd/containerd/filters",
+        "//vendor/github.com/containerd/containerd/identifiers",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":exchange",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/events/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "events",
+    srcs = ["events.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/events",
+    importpath = "github.com/containerd/containerd/events",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":events",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/filters/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "filters",
+    srcs = [
+        "adaptor.go",
+        "filter.go",
+        "parser.go",
+        "quote.go",
+        "scanner.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/filters",
+    importpath = "github.com/containerd/containerd/filters",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":filters",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/gc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gc",
+    srcs = ["gc.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/gc",
+    importpath = "github.com/containerd/containerd/gc",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/identifiers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "identifiers",
+    srcs = ["validate.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/identifiers",
+    importpath = "github.com/containerd/containerd/identifiers",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":identifiers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/images/archive/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "archive",
+    srcs = [
+        "exporter.go",
+        "importer.go",
+        "reference.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/images/archive",
+    importpath = "github.com/containerd/containerd/images/archive",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/archive/compression",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/reference",
+        "//vendor/github.com/containerd/containerd/reference/docker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":archive",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/images/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "images",
+    srcs = [
+        "annotations.go",
+        "handlers.go",
+        "image.go",
+        "importexport.go",
+        "mediatypes.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/images",
+    importpath = "github.com/containerd/containerd/images",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/golang.org/x/sync/semaphore",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":images",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/labels/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "labels",
+    srcs = ["validate.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/labels",
+    importpath = "github.com/containerd/containerd/labels",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":labels",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/leases/proxy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proxy",
+    srcs = ["manager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/leases/proxy",
+    importpath = "github.com/containerd/containerd/leases/proxy",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/leases/v1:leases",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/leases",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proxy",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/leases/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "leases",
+    srcs = [
+        "context.go",
+        "grpc.go",
+        "id.go",
+        "lease.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/leases",
+    importpath = "github.com/containerd/containerd/leases",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc/metadata"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":leases",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/log/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "log",
+    srcs = ["context.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/log",
+    importpath = "github.com/containerd/containerd/log",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":log",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/metadata/boltutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "boltutil",
+    srcs = ["helpers.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/metadata/boltutil",
+    importpath = "github.com/containerd/containerd/metadata/boltutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":boltutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metadata",
+    srcs = [
+        "adaptors.go",
+        "bolt.go",
+        "buckets.go",
+        "containers.go",
+        "content.go",
+        "db.go",
+        "gc.go",
+        "images.go",
+        "leases.go",
+        "migrations.go",
+        "namespaces.go",
+        "snapshot.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/metadata",
+    importpath = "github.com/containerd/containerd/metadata",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/containers",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/filters",
+        "//vendor/github.com/containerd/containerd/gc",
+        "//vendor/github.com/containerd/containerd/identifiers",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/labels",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/metadata/boltutil",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metadata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/mount/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,48 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mount",
+    srcs = [
+        "lookup_unix.go",
+        "lookup_unsupported.go",
+        "mount.go",
+        "mount_linux.go",
+        "mount_unix.go",
+        "mount_windows.go",
+        "mountinfo.go",
+        "mountinfo_bsd.go",
+        "mountinfo_linux.go",
+        "mountinfo_unsupported.go",
+        "temp.go",
+        "temp_unix.go",
+        "temp_unsupported.go",
+    ],
+    cgo = True,
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/mount",
+    importpath = "github.com/containerd/containerd/mount",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mount",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/namespaces/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "namespaces",
+    srcs = [
+        "context.go",
+        "grpc.go",
+        "store.go",
+        "ttrpc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/namespaces",
+    importpath = "github.com/containerd/containerd/namespaces",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/identifiers",
+        "//vendor/github.com/containerd/ttrpc",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc/metadata",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":namespaces",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/oci/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,79 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "oci",
+    srcs = [
+        "client.go",
+        "spec.go",
+        "spec_opts.go",
+        "spec_opts_linux.go",
+        "spec_opts_unix.go",
+        "spec_opts_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/oci",
+    importpath = "github.com/containerd/containerd/oci",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/containers",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/opencontainers/runc/libcontainer/user",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/syndtr/gocapability/capability",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":oci",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/pkg/dialer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dialer",
+    srcs = [
+        "dialer.go",
+        "dialer_unix.go",
+        "dialer_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/pkg/dialer",
+    importpath = "github.com/containerd/containerd/pkg/dialer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dialer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/pkg/process/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,215 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "process",
+    srcs = [
+        "deleted_state.go",
+        "exec.go",
+        "exec_state.go",
+        "init.go",
+        "init_state.go",
+        "io.go",
+        "process.go",
+        "types.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/pkg/process",
+    importpath = "github.com/containerd/containerd/pkg/process",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/console",
+        "//vendor/github.com/containerd/containerd/pkg/stdio",
+        "//vendor/github.com/gogo/protobuf/types",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/hashicorp/go-multierror",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":process",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/pkg/stdio/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stdio",
+    srcs = [
+        "platform.go",
+        "stdio.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/pkg/stdio",
+    importpath = "github.com/containerd/containerd/pkg/stdio",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/containerd/console"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stdio",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/platforms/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "platforms",
+    srcs = [
+        "compare.go",
+        "cpuinfo.go",
+        "database.go",
+        "defaults.go",
+        "defaults_unix.go",
+        "defaults_windows.go",
+        "platforms.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/platforms",
+    importpath = "github.com/containerd/containerd/platforms",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":platforms",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "plugin",
+    srcs = [
+        "context.go",
+        "plugin.go",
+        "plugin_go18.go",
+        "plugin_other.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/plugin",
+    importpath = "github.com/containerd/containerd/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/events/exchange",
+        "//vendor/github.com/containerd/ttrpc",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/reference/docker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "docker",
+    srcs = ["reference.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/reference/docker",
+    importpath = "github.com/containerd/containerd/reference/docker",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/opencontainers/go-digest"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":docker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/reference/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "reference",
+    srcs = ["reference.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/reference",
+    importpath = "github.com/containerd/containerd/reference",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/opencontainers/go-digest"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":reference",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/remotes/docker/auth/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "auth",
+    srcs = [
+        "fetch.go",
+        "parse.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/remotes/docker/auth",
+    importpath = "github.com/containerd/containerd/remotes/docker/auth",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/remotes/errors",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/net/context/ctxhttp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":auth",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/remotes/docker/schema1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "schema1",
+    srcs = ["converter.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/remotes/docker/schema1",
+    importpath = "github.com/containerd/containerd/remotes/docker/schema1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/archive/compression",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":schema1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/remotes/docker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "docker",
+    srcs = [
+        "authorizer.go",
+        "converter.go",
+        "errcode.go",
+        "errdesc.go",
+        "fetcher.go",
+        "handler.go",
+        "httpreadseeker.go",
+        "pusher.go",
+        "registry.go",
+        "resolver.go",
+        "scope.go",
+        "status.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/remotes/docker",
+    importpath = "github.com/containerd/containerd/remotes/docker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/labels",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/reference",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker/auth",
+        "//vendor/github.com/containerd/containerd/remotes/docker/schema1",
+        "//vendor/github.com/containerd/containerd/remotes/errors",
+        "//vendor/github.com/containerd/containerd/version",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/net/context/ctxhttp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":docker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/remotes/errors/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errors",
+    srcs = ["errors.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/remotes/errors",
+    importpath = "github.com/containerd/containerd/remotes/errors",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errors",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/remotes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remotes",
+    srcs = [
+        "handlers.go",
+        "resolver.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/remotes",
+    importpath = "github.com/containerd/containerd/remotes",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remotes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/rootfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rootfs",
+    srcs = [
+        "apply.go",
+        "diff.go",
+        "init.go",
+        "init_linux.go",
+        "init_other.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/rootfs",
+    importpath = "github.com/containerd/containerd/rootfs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/diff",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/identity",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":rootfs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/linux/runctypes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "runctypes",
+    srcs = [
+        "doc.go",
+        "runc.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+    importpath = "github.com/containerd/containerd/runtime/linux/runctypes",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":runctypes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/v1/linux/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,86 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "linux",
+    srcs = [
+        "bundle.go",
+        "process.go",
+        "runtime.go",
+        "task.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/v1/linux",
+    importpath = "github.com/containerd/containerd/runtime/v1/linux",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events/exchange",
+            "//vendor/github.com/containerd/containerd/identifiers",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/metadata",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/platforms",
+            "//vendor/github.com/containerd/containerd/plugin",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/client",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events/exchange",
+            "//vendor/github.com/containerd/containerd/identifiers",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/metadata",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/platforms",
+            "//vendor/github.com/containerd/containerd/plugin",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/client",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":linux",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/v1/shim/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,207 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "client.go",
+        "client_linux.go",
+        "client_unix.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/v1/shim/client",
+    importpath = "github.com/containerd/containerd/runtime/v1/shim/client",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/cgroups",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/pkg/dialer",
+            "//vendor/github.com/containerd/containerd/runtime/v1:runtime",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/containerd/ttrpc",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/v1/shim/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "shim",
+    srcs = [
+        "doc.go",
+        "shim.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/v1/shim/v1",
+    importpath = "github.com/containerd/containerd/runtime/v1/shim/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/containerd/api/types/task",
+        "//vendor/github.com/containerd/ttrpc",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":shim",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/v1/shim/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,349 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "shim",
+    srcs = [
+        "local.go",
+        "service.go",
+        "service_linux.go",
+        "service_unix.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/v1/shim",
+    importpath = "github.com/containerd/containerd/runtime/v1/shim",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/containerd/containerd/api/events",
+            "//vendor/github.com/containerd/containerd/api/types/task",
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/containerd/containerd/events",
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/containerd/containerd/mount",
+            "//vendor/github.com/containerd/containerd/namespaces",
+            "//vendor/github.com/containerd/containerd/pkg/process",
+            "//vendor/github.com/containerd/containerd/pkg/stdio",
+            "//vendor/github.com/containerd/containerd/runtime",
+            "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+            "//vendor/github.com/containerd/containerd/runtime/v1/shim/v1:shim",
+            "//vendor/github.com/containerd/containerd/sys/reaper",
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/containerd/typeurl",
+            "//vendor/github.com/gogo/protobuf/types",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/google.golang.org/grpc/codes",
+            "//vendor/google.golang.org/grpc/status",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":shim",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,71 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "runtime",
+    srcs = ["shim.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/v1",
+    importpath = "github.com/containerd/containerd/runtime/v1",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/fifo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":runtime",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/v2/runc/options/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "options",
+    srcs = [
+        "doc.go",
+        "oci.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+    importpath = "github.com/containerd/containerd/runtime/v2/runc/options",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":options",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/runtime/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "runtime",
+    srcs = [
+        "events.go",
+        "io.go",
+        "monitor.go",
+        "runtime.go",
+        "task.go",
+        "task_list.go",
+        "typeurl.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/runtime",
+    importpath = "github.com/containerd/containerd/runtime",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":runtime",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/services/content/contentserver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "contentserver",
+    srcs = ["contentserver.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/services/content/contentserver",
+    importpath = "github.com/containerd/containerd/services/content/contentserver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/content/v1:content",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":contentserver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/services/introspection/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "introspection",
+    srcs = [
+        "introspection.go",
+        "local.go",
+        "service.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/services/introspection",
+    importpath = "github.com/containerd/containerd/services/introspection",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/introspection/v1:introspection",
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/filters",
+        "//vendor/github.com/containerd/containerd/plugin",
+        "//vendor/github.com/containerd/containerd/services",
+        "//vendor/github.com/gogo/googleapis/google/rpc",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/google/uuid",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":introspection",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/services/server/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "config",
+    srcs = ["config.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/services/server/config",
+    importpath = "github.com/containerd/containerd/services/server/config",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/BurntSushi/toml",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/plugin",
+        "//vendor/github.com/imdario/mergo",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/services/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "services",
+    srcs = ["services.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/services",
+    importpath = "github.com/containerd/containerd/services",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":services",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/snapshots/proxy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proxy",
+    srcs = ["proxy.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/snapshots/proxy",
+    importpath = "github.com/containerd/containerd/snapshots/proxy",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/snapshots/v1:snapshots",
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proxy",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/snapshots/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snapshots",
+    srcs = ["snapshotter.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/snapshots",
+    importpath = "github.com/containerd/containerd/snapshots",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/containerd/containerd/mount"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":snapshots",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/sys/reaper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,87 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "reaper",
+    srcs = [
+        "reaper_unix.go",
+        "reaper_utils_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/sys/reaper",
+    importpath = "github.com/containerd/containerd/sys/reaper",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/go-runc",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":reaper",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/sys/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,96 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sys",
+    srcs = [
+        "env.go",
+        "epoll.go",
+        "fds.go",
+        "filesys.go",
+        "filesys_unix.go",
+        "filesys_windows.go",
+        "mount_linux.go",
+        "oom_unix.go",
+        "oom_windows.go",
+        "socket_unix.go",
+        "socket_windows.go",
+        "stat_bsd.go",
+        "stat_unix.go",
+        "subprocess_unsafe_linux.go",
+        "subprocess_unsafe_linux.s",
+        "userns_linux.go",
+        "userns_unsupported.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/sys",
+    importpath = "github.com/containerd/containerd/sys",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/log",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/pkg/errors",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sys",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/version/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = ["version.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd/version",
+    importpath = "github.com/containerd/containerd/version",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":version",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/containerd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,149 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containerd",
+    srcs = [
+        "client.go",
+        "client_opts.go",
+        "container.go",
+        "container_checkpoint_opts.go",
+        "container_opts.go",
+        "container_opts_unix.go",
+        "container_restore_opts.go",
+        "containerstore.go",
+        "diff.go",
+        "events.go",
+        "export.go",
+        "grpc.go",
+        "image.go",
+        "image_store.go",
+        "import.go",
+        "install.go",
+        "install_opts.go",
+        "lease.go",
+        "namespaces.go",
+        "process.go",
+        "pull.go",
+        "services.go",
+        "signals.go",
+        "signals_unix.go",
+        "signals_windows.go",
+        "snapshotter_default_linux.go",
+        "snapshotter_default_unix.go",
+        "snapshotter_default_windows.go",
+        "snapshotter_opts_unix.go",
+        "task.go",
+        "task_opts.go",
+        "task_opts_unix.go",
+        "unpacker.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/containerd",
+    importpath = "github.com/containerd/containerd",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/containers/v1:containers",
+        "//vendor/github.com/containerd/containerd/api/services/content/v1:content",
+        "//vendor/github.com/containerd/containerd/api/services/diff/v1:diff",
+        "//vendor/github.com/containerd/containerd/api/services/events/v1:events",
+        "//vendor/github.com/containerd/containerd/api/services/images/v1:images",
+        "//vendor/github.com/containerd/containerd/api/services/introspection/v1:introspection",
+        "//vendor/github.com/containerd/containerd/api/services/leases/v1:leases",
+        "//vendor/github.com/containerd/containerd/api/services/namespaces/v1:namespaces",
+        "//vendor/github.com/containerd/containerd/api/services/snapshots/v1:snapshots",
+        "//vendor/github.com/containerd/containerd/api/services/tasks/v1:tasks",
+        "//vendor/github.com/containerd/containerd/api/services/version/v1:version",
+        "//vendor/github.com/containerd/containerd/api/types",
+        "//vendor/github.com/containerd/containerd/api/types/task",
+        "//vendor/github.com/containerd/containerd/archive",
+        "//vendor/github.com/containerd/containerd/archive/compression",
+        "//vendor/github.com/containerd/containerd/cio",
+        "//vendor/github.com/containerd/containerd/containers",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/proxy",
+        "//vendor/github.com/containerd/containerd/defaults",
+        "//vendor/github.com/containerd/containerd/diff",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/events",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/images/archive",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/leases/proxy",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/oci",
+        "//vendor/github.com/containerd/containerd/pkg/dialer",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/plugin",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/containerd/containerd/remotes/docker/schema1",
+        "//vendor/github.com/containerd/containerd/rootfs",
+        "//vendor/github.com/containerd/containerd/runtime/linux/runctypes",
+        "//vendor/github.com/containerd/containerd/runtime/v2/runc/options",
+        "//vendor/github.com/containerd/containerd/services/introspection",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/containerd/containerd/snapshots/proxy",
+        "//vendor/github.com/containerd/containerd/sys",
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/identity",
+        "//vendor/github.com/opencontainers/image-spec/specs-go",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/golang.org/x/sync/semaphore",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/backoff",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/health/grpc_health_v1",
+        "//vendor/google.golang.org/grpc/status",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containerd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/continuity/devices/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,44 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "devices",
+    srcs = [
+        "devices.go",
+        "devices_unix.go",
+        "devices_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/continuity/devices",
+    importpath = "github.com/containerd/continuity/devices",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":devices",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/continuity/driver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,56 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "driver",
+    srcs = [
+        "driver.go",
+        "driver_unix.go",
+        "driver_windows.go",
+        "lchmod_linux.go",
+        "lchmod_unix.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/continuity/driver",
+    importpath = "github.com/containerd/continuity/driver",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/continuity/devices",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/continuity/devices",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/continuity/devices",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/continuity/devices",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/continuity/devices",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/continuity/devices",
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":driver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/continuity/fs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,91 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fs",
+    srcs = [
+        "copy.go",
+        "copy_linux.go",
+        "copy_unix.go",
+        "copy_windows.go",
+        "diff.go",
+        "diff_unix.go",
+        "diff_windows.go",
+        "dtype_linux.go",
+        "du.go",
+        "du_unix.go",
+        "du_windows.go",
+        "hardlink.go",
+        "hardlink_unix.go",
+        "hardlink_windows.go",
+        "path.go",
+        "stat_darwinfreebsd.go",
+        "stat_linuxopenbsd.go",
+        "time.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/continuity/fs",
+    importpath = "github.com/containerd/continuity/fs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/continuity/pathdriver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pathdriver",
+    srcs = ["path_driver.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/continuity/pathdriver",
+    importpath = "github.com/containerd/continuity/pathdriver",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pathdriver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/continuity/sysx/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sysx",
+    srcs = [
+        "nodata_linux.go",
+        "nodata_solaris.go",
+        "nodata_unix.go",
+        "xattr.go",
+        "xattr_unsupported.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/continuity/sysx",
+    importpath = "github.com/containerd/continuity/sysx",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sysx",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/fifo/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fifo",
+    srcs = [
+        "errors.go",
+        "fifo.go",
+        "handle_linux.go",
+        "handle_nolinux.go",
+        "mkfifo_nosolaris.go",
+        "mkfifo_solaris.go",
+        "raw.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/fifo",
+    importpath = "github.com/containerd/fifo",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sys/unix",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fifo",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/go-runc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,113 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-runc",
+    srcs = [
+        "command_linux.go",
+        "command_other.go",
+        "console.go",
+        "container.go",
+        "events.go",
+        "io.go",
+        "io_unix.go",
+        "io_windows.go",
+        "monitor.go",
+        "runc.go",
+        "runc_unix.go",
+        "runc_windows.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/go-runc",
+    importpath = "github.com/containerd/go-runc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/console",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-runc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/ttrpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,44 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ttrpc",
+    srcs = [
+        "channel.go",
+        "client.go",
+        "codec.go",
+        "config.go",
+        "handshake.go",
+        "interceptor.go",
+        "metadata.go",
+        "server.go",
+        "services.go",
+        "types.go",
+        "unixcreds_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/ttrpc",
+    importpath = "github.com/containerd/ttrpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ttrpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/containerd/typeurl/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "typeurl",
+    srcs = [
+        "doc.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/containerd/typeurl",
+    importpath = "github.com/containerd/typeurl",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":typeurl",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "auth_role.go",
+        "auth_user.go",
+        "cancelreq.go",
+        "client.go",
+        "cluster_error.go",
+        "curl.go",
+        "discover.go",
+        "doc.go",
+        "keys.generated.go",
+        "keys.go",
+        "members.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/client",
+    importpath = "github.com/coreos/etcd/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/pkg/pathutil",
+        "//vendor/github.com/coreos/etcd/pkg/srv",
+        "//vendor/github.com/coreos/etcd/pkg/types",
+        "//vendor/github.com/coreos/etcd/version",
+        "//vendor/github.com/ugorji/go/codec",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/crc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "crc",
+    srcs = ["crc.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/crc",
+    importpath = "github.com/coreos/etcd/pkg/crc",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":crc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/fileutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fileutil",
+    srcs = [
+        "dir_unix.go",
+        "dir_windows.go",
+        "fileutil.go",
+        "lock.go",
+        "lock_flock.go",
+        "lock_linux.go",
+        "lock_plan9.go",
+        "lock_solaris.go",
+        "lock_unix.go",
+        "lock_windows.go",
+        "preallocate.go",
+        "preallocate_darwin.go",
+        "preallocate_unix.go",
+        "preallocate_unsupported.go",
+        "purge.go",
+        "sync.go",
+        "sync_darwin.go",
+        "sync_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/fileutil",
+    importpath = "github.com/coreos/etcd/pkg/fileutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/coreos/pkg/capnslog"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fileutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/idutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "idutil",
+    srcs = ["id.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/idutil",
+    importpath = "github.com/coreos/etcd/pkg/idutil",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":idutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/ioutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ioutil",
+    srcs = [
+        "pagewriter.go",
+        "readcloser.go",
+        "reader.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/ioutil",
+    importpath = "github.com/coreos/etcd/pkg/ioutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/coreos/etcd/pkg/fileutil"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ioutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/pathutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pathutil",
+    srcs = ["path.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/pathutil",
+    importpath = "github.com/coreos/etcd/pkg/pathutil",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pathutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/pbutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pbutil",
+    srcs = ["pbutil.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/pbutil",
+    importpath = "github.com/coreos/etcd/pkg/pbutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/coreos/pkg/capnslog"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pbutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/srv/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "srv",
+    srcs = ["srv.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/srv",
+    importpath = "github.com/coreos/etcd/pkg/srv",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/coreos/etcd/pkg/types"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":srv",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/pkg/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "doc.go",
+        "id.go",
+        "set.go",
+        "slice.go",
+        "urls.go",
+        "urlsmap.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/pkg/types",
+    importpath = "github.com/coreos/etcd/pkg/types",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/raft/raftpb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "raftpb",
+    srcs = ["raft.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/raft/raftpb",
+    importpath = "github.com/coreos/etcd/raft/raftpb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/golang/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":raftpb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/raft/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "raft",
+    srcs = [
+        "doc.go",
+        "log.go",
+        "log_unstable.go",
+        "logger.go",
+        "node.go",
+        "progress.go",
+        "raft.go",
+        "rawnode.go",
+        "read_only.go",
+        "status.go",
+        "storage.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/raft",
+    importpath = "github.com/coreos/etcd/raft",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/coreos/etcd/raft/raftpb"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":raft",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/snap/snappb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snappb",
+    srcs = ["snap.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/snap/snappb",
+    importpath = "github.com/coreos/etcd/snap/snappb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/golang/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":snappb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/snap/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snap",
+    srcs = [
+        "db.go",
+        "message.go",
+        "metrics.go",
+        "snapshotter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/snap",
+    importpath = "github.com/coreos/etcd/snap",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/pkg/fileutil",
+        "//vendor/github.com/coreos/etcd/pkg/ioutil",
+        "//vendor/github.com/coreos/etcd/pkg/pbutil",
+        "//vendor/github.com/coreos/etcd/raft",
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/coreos/etcd/snap/snappb",
+        "//vendor/github.com/coreos/pkg/capnslog",
+        "//vendor/github.com/prometheus/client_golang/prometheus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":snap",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/version/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "version",
+    srcs = ["version.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/version",
+    importpath = "github.com/coreos/etcd/version",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/coreos/go-semver/semver"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":version",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/wal/walpb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "walpb",
+    srcs = [
+        "record.go",
+        "record.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/wal/walpb",
+    importpath = "github.com/coreos/etcd/wal/walpb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/golang/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":walpb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/etcd/wal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "wal",
+    srcs = [
+        "decoder.go",
+        "doc.go",
+        "encoder.go",
+        "file_pipeline.go",
+        "metrics.go",
+        "repair.go",
+        "util.go",
+        "wal.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/etcd/wal",
+    importpath = "github.com/coreos/etcd/wal",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/pkg/crc",
+        "//vendor/github.com/coreos/etcd/pkg/fileutil",
+        "//vendor/github.com/coreos/etcd/pkg/ioutil",
+        "//vendor/github.com/coreos/etcd/pkg/pbutil",
+        "//vendor/github.com/coreos/etcd/raft",
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/coreos/etcd/wal/walpb",
+        "//vendor/github.com/coreos/pkg/capnslog",
+        "//vendor/github.com/prometheus/client_golang/prometheus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":wal",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/go-semver/semver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "semver",
+    srcs = [
+        "semver.go",
+        "sort.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/go-semver/semver",
+    importpath = "github.com/coreos/go-semver/semver",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":semver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/go-systemd/journal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "journal",
+    srcs = ["journal.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/go-systemd/journal",
+    importpath = "github.com/coreos/go-systemd/journal",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":journal",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/go-systemd/v22/activation/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "activation",
+    srcs = [
+        "files.go",
+        "listeners.go",
+        "packetconns.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/go-systemd/v22/activation",
+    importpath = "github.com/coreos/go-systemd/v22/activation",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":activation",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/go-systemd/v22/daemon/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "daemon",
+    srcs = [
+        "sdnotify.go",
+        "watchdog.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/go-systemd/v22/daemon",
+    importpath = "github.com/coreos/go-systemd/v22/daemon",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":daemon",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/go-systemd/v22/dbus/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dbus",
+    srcs = [
+        "dbus.go",
+        "methods.go",
+        "properties.go",
+        "set.go",
+        "subscription.go",
+        "subscription_set.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/go-systemd/v22/dbus",
+    importpath = "github.com/coreos/go-systemd/v22/dbus",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/godbus/dbus/v5:dbus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dbus",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/go-systemd/v22/journal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "journal",
+    srcs = ["journal.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/go-systemd/v22/journal",
+    importpath = "github.com/coreos/go-systemd/v22/journal",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":journal",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/coreos/pkg/capnslog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,68 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "capnslog",
+    srcs = [
+        "formatters.go",
+        "glog_formatter.go",
+        "init.go",
+        "init_windows.go",
+        "journald_formatter.go",
+        "log_hijack.go",
+        "logmap.go",
+        "pkg_logger.go",
+        "syslog_formatter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/coreos/pkg/capnslog",
+    importpath = "github.com/coreos/pkg/capnslog",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/coreos/go-systemd/journal",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":capnslog",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/creack/pty/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pty",
+    srcs = [
+        "doc.go",
+        "ioctl.go",
+        "ioctl_bsd.go",
+        "ioctl_solaris.go",
+        "pty_darwin.go",
+        "pty_dragonfly.go",
+        "pty_freebsd.go",
+        "pty_linux.go",
+        "pty_openbsd.go",
+        "pty_solaris.go",
+        "pty_unsupported.go",
+        "run.go",
+        "util.go",
+        "util_solaris.go",
+        "ztypes_386.go",
+        "ztypes_amd64.go",
+        "ztypes_arm.go",
+        "ztypes_arm64.go",
+        "ztypes_dragonfly_amd64.go",
+        "ztypes_freebsd_386.go",
+        "ztypes_freebsd_amd64.go",
+        "ztypes_freebsd_arm.go",
+        "ztypes_freebsd_arm64.go",
+        "ztypes_mipsx.go",
+        "ztypes_openbsd_32bit_int.go",
+        "ztypes_ppc64.go",
+        "ztypes_ppc64le.go",
+        "ztypes_riscvx.go",
+        "ztypes_s390x.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/creack/pty",
+    importpath = "github.com/creack/pty",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pty",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/cyphar/filepath-securejoin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "filepath-securejoin",
+    srcs = [
+        "join.go",
+        "vfs.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/cyphar/filepath-securejoin",
+    importpath = "github.com/cyphar/filepath-securejoin",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":filepath-securejoin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/deckarep/golang-set/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "golang-set",
+    srcs = [
+        "set.go",
+        "threadsafe.go",
+        "threadunsafe.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/deckarep/golang-set",
+    importpath = "github.com/deckarep/golang-set",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":golang-set",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/digestset/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "digestset",
+    srcs = ["set.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/digestset",
+    importpath = "github.com/docker/distribution/digestset",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/opencontainers/go-digest"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":digestset",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/manifest/manifestlist/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "manifestlist",
+    srcs = ["manifestlist.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/manifest/manifestlist",
+    importpath = "github.com/docker/distribution/manifest/manifestlist",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":manifestlist",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/manifest/ocischema/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ocischema",
+    srcs = [
+        "builder.go",
+        "manifest.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/manifest/ocischema",
+    importpath = "github.com/docker/distribution/manifest/ocischema",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ocischema",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/manifest/schema1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "schema1",
+    srcs = [
+        "config_builder.go",
+        "manifest.go",
+        "reference_builder.go",
+        "sign.go",
+        "verify.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/manifest/schema1",
+    importpath = "github.com/docker/distribution/manifest/schema1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/libtrust",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":schema1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/manifest/schema2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "schema2",
+    srcs = [
+        "builder.go",
+        "manifest.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/manifest/schema2",
+    importpath = "github.com/docker/distribution/manifest/schema2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/manifest",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":schema2",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/manifest/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "manifest",
+    srcs = [
+        "doc.go",
+        "versioned.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/manifest",
+    importpath = "github.com/docker/distribution/manifest",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":manifest",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/metrics/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metrics",
+    srcs = ["prometheus.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/metrics",
+    importpath = "github.com/docker/distribution/metrics",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/go-metrics"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metrics",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/reference/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "reference",
+    srcs = [
+        "helpers.go",
+        "normalize.go",
+        "reference.go",
+        "regexp.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/reference",
+    importpath = "github.com/docker/distribution/reference",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution/digestset",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":reference",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/api/errcode/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errcode",
+    srcs = [
+        "errors.go",
+        "handler.go",
+        "register.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/api/errcode",
+    importpath = "github.com/docker/distribution/registry/api/errcode",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errcode",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/api/v2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = [
+        "descriptors.go",
+        "doc.go",
+        "errors.go",
+        "headerparser.go",
+        "routes.go",
+        "urls.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/api/v2",
+    importpath = "github.com/docker/distribution/registry/api/v2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/api/errcode",
+        "//vendor/github.com/gorilla/mux",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/client/auth/challenge/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "challenge",
+    srcs = [
+        "addr.go",
+        "authchallenge.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/client/auth/challenge",
+    importpath = "github.com/docker/distribution/registry/client/auth/challenge",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":challenge",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/client/auth/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "auth",
+    srcs = [
+        "api_version.go",
+        "session.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/client/auth",
+    importpath = "github.com/docker/distribution/registry/client/auth",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution/registry/client",
+        "//vendor/github.com/docker/distribution/registry/client/auth/challenge",
+        "//vendor/github.com/docker/distribution/registry/client/transport",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":auth",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/client/transport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "transport",
+    srcs = [
+        "http_reader.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/client/transport",
+    importpath = "github.com/docker/distribution/registry/client/transport",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transport",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "blob_writer.go",
+        "errors.go",
+        "repository.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/client",
+    importpath = "github.com/docker/distribution/registry/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/api/errcode",
+        "//vendor/github.com/docker/distribution/registry/api/v2:api",
+        "//vendor/github.com/docker/distribution/registry/client/auth/challenge",
+        "//vendor/github.com/docker/distribution/registry/client/transport",
+        "//vendor/github.com/docker/distribution/registry/storage/cache",
+        "//vendor/github.com/docker/distribution/registry/storage/cache/memory",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/storage/cache/memory/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "memory",
+    srcs = ["memory.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/storage/cache/memory",
+    importpath = "github.com/docker/distribution/registry/storage/cache/memory",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/distribution/registry/storage/cache",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":memory",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/registry/storage/cache/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cache",
+    srcs = [
+        "cache.go",
+        "cachedblobdescriptorstore.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution/registry/storage/cache",
+    importpath = "github.com/docker/distribution/registry/storage/cache",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution",
+        "//vendor/github.com/docker/distribution/metrics",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cache",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/distribution/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "distribution",
+    srcs = [
+        "blobs.go",
+        "doc.go",
+        "errors.go",
+        "manifests.go",
+        "registry.go",
+        "tags.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/distribution",
+    importpath = "github.com/docker/distribution",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":distribution",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/go-connections/nat/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nat",
+    srcs = [
+        "nat.go",
+        "parse.go",
+        "sort.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/go-connections/nat",
+    importpath = "github.com/docker/go-connections/nat",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":nat",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/go-connections/sockets/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sockets",
+    srcs = [
+        "inmem_socket.go",
+        "proxy.go",
+        "sockets.go",
+        "sockets_unix.go",
+        "sockets_windows.go",
+        "tcp_socket.go",
+        "unix_socket.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/go-connections/sockets",
+    importpath = "github.com/docker/go-connections/sockets",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/net/proxy",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sockets",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/go-connections/tlsconfig/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tlsconfig",
+    srcs = [
+        "certpool_go17.go",
+        "certpool_other.go",
+        "config.go",
+        "config_client_ciphers.go",
+        "config_legacy_client_ciphers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/go-connections/tlsconfig",
+    importpath = "github.com/docker/go-connections/tlsconfig",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tlsconfig",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/go-events/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-events",
+    srcs = [
+        "broadcast.go",
+        "channel.go",
+        "errors.go",
+        "event.go",
+        "filter.go",
+        "queue.go",
+        "retry.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/go-events",
+    importpath = "github.com/docker/go-events",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-events",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/go-metrics/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-metrics",
+    srcs = [
+        "counter.go",
+        "docs.go",
+        "gauge.go",
+        "handler.go",
+        "helpers.go",
+        "namespace.go",
+        "register.go",
+        "timer.go",
+        "unit.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/go-metrics",
+    importpath = "github.com/docker/go-metrics",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/prometheus/client_golang/prometheus",
+        "//vendor/github.com/prometheus/client_golang/prometheus/promhttp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-metrics",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/go-units/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-units",
+    srcs = [
+        "duration.go",
+        "size.go",
+        "ulimit.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/go-units",
+    importpath = "github.com/docker/go-units",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-units",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libkv/store/boltdb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "boltdb",
+    srcs = ["boltdb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libkv/store/boltdb",
+    importpath = "github.com/docker/libkv/store/boltdb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":boltdb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libkv/store/consul/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "consul",
+    srcs = ["consul.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libkv/store/consul",
+    importpath = "github.com/docker/libkv/store/consul",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/github.com/hashicorp/consul/api",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":consul",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libkv/store/etcd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "etcd",
+    srcs = ["etcd.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libkv/store/etcd",
+    importpath = "github.com/docker/libkv/store/etcd",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/client",
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":etcd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libkv/store/zookeeper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "zookeeper",
+    srcs = ["zookeeper.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libkv/store/zookeeper",
+    importpath = "github.com/docker/libkv/store/zookeeper",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/github.com/samuel/go-zookeeper/zk",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":zookeeper",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libkv/store/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "store",
+    srcs = [
+        "helpers.go",
+        "store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libkv/store",
+    importpath = "github.com/docker/libkv/store",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":store",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libkv/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "libkv",
+    srcs = ["libkv.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libkv",
+    importpath = "github.com/docker/libkv",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/libkv/store"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":libkv",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/bitseq/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bitseq",
+    srcs = [
+        "sequence.go",
+        "store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/bitseq",
+    importpath = "github.com/docker/libnetwork/bitseq",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bitseq",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/cluster/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cluster",
+    srcs = ["provider.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/cluster",
+    importpath = "github.com/docker/libnetwork/cluster",
+    visibility = ["//visibility:public"],
+    deps = ["//api/types/network"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cluster",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "config",
+    srcs = ["config.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/config",
+    importpath = "github.com/docker/libnetwork/config",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/discovery",
+        "//pkg/plugingetter",
+        "//vendor/github.com/BurntSushi/toml",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/github.com/docker/libnetwork/cluster",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/ipamutils",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/osl",
+        "//vendor/github.com/docker/libnetwork/portallocator",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/datastore/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "datastore",
+    srcs = [
+        "cache.go",
+        "datastore.go",
+        "mock_store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/datastore",
+    importpath = "github.com/docker/libnetwork/datastore",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libkv",
+        "//vendor/github.com/docker/libkv/store",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":datastore",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/diagnostic/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "diagnostic",
+    srcs = [
+        "server.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/diagnostic",
+    importpath = "github.com/docker/libnetwork/diagnostic",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/signal",
+        "//vendor/github.com/docker/libnetwork/internal/caller",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":diagnostic",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/discoverapi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "discoverapi",
+    srcs = ["discoverapi.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/discoverapi",
+    importpath = "github.com/docker/libnetwork/discoverapi",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":discoverapi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/driverapi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "driverapi",
+    srcs = [
+        "driverapi.go",
+        "errors.go",
+        "ipamdata.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/driverapi",
+    importpath = "github.com/docker/libnetwork/driverapi",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":driverapi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/bridge/brmanager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "brmanager",
+    srcs = ["brmanager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/bridge/brmanager",
+    importpath = "github.com/docker/libnetwork/drivers/bridge/brmanager",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":brmanager",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/bridge/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bridge",
+    srcs = [
+        "bridge.go",
+        "bridge_store.go",
+        "errors.go",
+        "interface.go",
+        "labels.go",
+        "link.go",
+        "netlink_deprecated_linux.go",
+        "netlink_deprecated_linux_rawsockaddr_data_int8.go",
+        "netlink_deprecated_linux_rawsockaddr_data_uint8.go",
+        "netlink_deprecated_unsupported.go",
+        "port_mapping.go",
+        "setup.go",
+        "setup_bridgenetfiltering.go",
+        "setup_device.go",
+        "setup_firewalld.go",
+        "setup_ip_forwarding.go",
+        "setup_ip_tables.go",
+        "setup_ipv4.go",
+        "setup_ipv6.go",
+        "setup_verify.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/bridge",
+    importpath = "github.com/docker/libnetwork/drivers/bridge",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/iptables",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/netutils",
+        "//vendor/github.com/docker/libnetwork/ns",
+        "//vendor/github.com/docker/libnetwork/options",
+        "//vendor/github.com/docker/libnetwork/osl",
+        "//vendor/github.com/docker/libnetwork/portmapper",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/ishidawataru/sctp",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vishvananda/netlink",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bridge",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/host/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "host",
+    srcs = ["host.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/host",
+    importpath = "github.com/docker/libnetwork/drivers/host",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":host",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/ipvlan/ivmanager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ivmanager",
+    srcs = ["ivmanager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/ipvlan/ivmanager",
+    importpath = "github.com/docker/libnetwork/drivers/ipvlan/ivmanager",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ivmanager",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/ipvlan/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipvlan",
+    srcs = [
+        "ipvlan.go",
+        "ipvlan_endpoint.go",
+        "ipvlan_joinleave.go",
+        "ipvlan_network.go",
+        "ipvlan_setup.go",
+        "ipvlan_state.go",
+        "ipvlan_store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/ipvlan",
+    importpath = "github.com/docker/libnetwork/drivers/ipvlan",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/parsers/kernel",
+        "//pkg/stringid",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/netutils",
+        "//vendor/github.com/docker/libnetwork/ns",
+        "//vendor/github.com/docker/libnetwork/options",
+        "//vendor/github.com/docker/libnetwork/osl",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vishvananda/netlink",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipvlan",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/macvlan/mvmanager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mvmanager",
+    srcs = ["mvmanager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/macvlan/mvmanager",
+    importpath = "github.com/docker/libnetwork/drivers/macvlan/mvmanager",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mvmanager",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/macvlan/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "macvlan",
+    srcs = [
+        "macvlan.go",
+        "macvlan_endpoint.go",
+        "macvlan_joinleave.go",
+        "macvlan_network.go",
+        "macvlan_setup.go",
+        "macvlan_state.go",
+        "macvlan_store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/macvlan",
+    importpath = "github.com/docker/libnetwork/drivers/macvlan",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/stringid",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/netutils",
+        "//vendor/github.com/docker/libnetwork/ns",
+        "//vendor/github.com/docker/libnetwork/options",
+        "//vendor/github.com/docker/libnetwork/osl",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vishvananda/netlink",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":macvlan",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/null/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "null",
+    srcs = ["null.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/null",
+    importpath = "github.com/docker/libnetwork/drivers/null",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":null",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/overlay/overlayutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "overlayutils",
+    srcs = ["utils.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/overlay/overlayutils",
+    importpath = "github.com/docker/libnetwork/drivers/overlay/overlayutils",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":overlayutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ovmanager",
+    srcs = ["ovmanager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager",
+    importpath = "github.com/docker/libnetwork/drivers/overlay/ovmanager",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/idm",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ovmanager",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/overlay/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,62 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "overlay",
+    srcs = [
+        "encryption.go",
+        "filter.go",
+        "joinleave.go",
+        "ostweaks_linux.go",
+        "ostweaks_unsupported.go",
+        "ov_endpoint.go",
+        "ov_network.go",
+        "ov_serf.go",
+        "ov_utils.go",
+        "overlay.go",
+        "overlay.pb.go",
+        "peerdb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/overlay",
+    importpath = "github.com/docker/libnetwork/drivers/overlay",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/reexec",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/drivers/overlay/overlayutils",
+        "//vendor/github.com/docker/libnetwork/idm",
+        "//vendor/github.com/docker/libnetwork/internal/caller",
+        "//vendor/github.com/docker/libnetwork/internal/setmatrix",
+        "//vendor/github.com/docker/libnetwork/iptables",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/netutils",
+        "//vendor/github.com/docker/libnetwork/ns",
+        "//vendor/github.com/docker/libnetwork/osl",
+        "//vendor/github.com/docker/libnetwork/resolvconf",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/hashicorp/serf/serf",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vishvananda/netlink",
+        "//vendor/github.com/vishvananda/netlink/nl",
+        "//vendor/github.com/vishvananda/netns",
+        "//vendor/golang.org/x/sys/unix",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/libnetwork/osl/kernel",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/libnetwork/osl/kernel",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":overlay",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/remote/api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = ["api.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/remote/api",
+    importpath = "github.com/docker/libnetwork/drivers/remote/api",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/remote/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remote",
+    srcs = ["driver.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/remote",
+    importpath = "github.com/docker/libnetwork/drivers/remote",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/drivers/remote/api",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remote",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/windows/overlay/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "overlay",
+    srcs = [
+        "joinleave_windows.go",
+        "ov_endpoint_windows.go",
+        "ov_network_windows.go",
+        "overlay.pb.go",
+        "overlay_windows.go",
+        "peerdb_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/windows/overlay",
+    importpath = "github.com/docker/libnetwork/drivers/windows/overlay",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/discoverapi",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/drivers/windows",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/libnetwork/portmapper",
+            "//vendor/github.com/docker/libnetwork/types",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":overlay",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drivers/windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "windows",
+    srcs = [
+        "labels.go",
+        "port_mapping.go",
+        "windows.go",
+        "windows_store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drivers/windows",
+    importpath = "github.com/docker/libnetwork/drivers/windows",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/discoverapi",
+            "//vendor/github.com/docker/libnetwork/driverapi",
+            "//vendor/github.com/docker/libnetwork/netlabel",
+            "//vendor/github.com/docker/libnetwork/portmapper",
+            "//vendor/github.com/docker/libnetwork/types",
+            "//vendor/github.com/ishidawataru/sctp",
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":windows",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/drvregistry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "drvregistry",
+    srcs = ["drvregistry.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/drvregistry",
+    importpath = "github.com/docker/libnetwork/drvregistry",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":drvregistry",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/etchosts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "etchosts",
+    srcs = ["etchosts.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/etchosts",
+    importpath = "github.com/docker/libnetwork/etchosts",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":etchosts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/hostdiscovery/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hostdiscovery",
+    srcs = [
+        "hostdiscovery.go",
+        "hostdiscovery_api.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/hostdiscovery",
+    importpath = "github.com/docker/libnetwork/hostdiscovery",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/discovery",
+        "//pkg/discovery/kv",
+        "//vendor/github.com/deckarep/golang-set",
+        "//vendor/github.com/docker/libkv/store/consul",
+        "//vendor/github.com/docker/libkv/store/etcd",
+        "//vendor/github.com/docker/libkv/store/zookeeper",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hostdiscovery",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/idm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "idm",
+    srcs = ["idm.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/idm",
+    importpath = "github.com/docker/libnetwork/idm",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/bitseq",
+        "//vendor/github.com/docker/libnetwork/datastore",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":idm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/internal/caller/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "caller",
+    srcs = ["caller.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/internal/caller",
+    importpath = "github.com/docker/libnetwork/internal/caller",
+    visibility = ["//vendor/github.com/docker/libnetwork:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":caller",
+    visibility = ["//vendor/github.com/docker/libnetwork:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/internal/setmatrix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "setmatrix",
+    srcs = ["setmatrix.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/internal/setmatrix",
+    importpath = "github.com/docker/libnetwork/internal/setmatrix",
+    visibility = ["//vendor/github.com/docker/libnetwork:__subpackages__"],
+    deps = ["//vendor/github.com/deckarep/golang-set"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":setmatrix",
+    visibility = ["//vendor/github.com/docker/libnetwork:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipam/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipam",
+    srcs = [
+        "allocator.go",
+        "store.go",
+        "structures.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipam",
+    importpath = "github.com/docker/libnetwork/ipam",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/bitseq",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/ipamutils",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipam",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipamapi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipamapi",
+    srcs = [
+        "contract.go",
+        "labels.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipamapi",
+    importpath = "github.com/docker/libnetwork/ipamapi",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipamapi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipams/builtin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,59 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "builtin",
+    srcs = [
+        "builtin_unix.go",
+        "builtin_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipams/builtin",
+    importpath = "github.com/docker/libnetwork/ipams/builtin",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/ipam",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/ipam",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/ipam",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/ipam",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/ipam",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/docker/libnetwork/datastore",
+            "//vendor/github.com/docker/libnetwork/ipam",
+            "//vendor/github.com/docker/libnetwork/ipamapi",
+            "//vendor/github.com/docker/libnetwork/ipams/windowsipam",
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":builtin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipams/null/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "null",
+    srcs = ["null.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipams/null",
+    importpath = "github.com/docker/libnetwork/ipams/null",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":null",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipams/remote/api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = ["api.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipams/remote/api",
+    importpath = "github.com/docker/libnetwork/ipams/remote/api",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/libnetwork/ipamapi"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipams/remote/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remote",
+    srcs = ["remote.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipams/remote",
+    importpath = "github.com/docker/libnetwork/ipams/remote",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/ipams/remote/api",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remote",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipams/windowsipam/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "windowsipam",
+    srcs = ["windowsipam.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipams/windowsipam",
+    importpath = "github.com/docker/libnetwork/ipams/windowsipam",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":windowsipam",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ipamutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipamutils",
+    srcs = ["utils.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ipamutils",
+    importpath = "github.com/docker/libnetwork/ipamutils",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipamutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/iptables/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "iptables",
+    srcs = [
+        "conntrack.go",
+        "firewalld.go",
+        "iptables.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/iptables",
+    importpath = "github.com/docker/libnetwork/iptables",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/godbus/dbus/v5:dbus",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/vishvananda/netlink",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":iptables",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/netlabel/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "netlabel",
+    srcs = ["labels.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/netlabel",
+    importpath = "github.com/docker/libnetwork/netlabel",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":netlabel",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/netutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "netutils",
+    srcs = [
+        "utils.go",
+        "utils_freebsd.go",
+        "utils_linux.go",
+        "utils_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/netutils",
+    importpath = "github.com/docker/libnetwork/netutils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/types",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+            "//vendor/github.com/docker/libnetwork/ns",
+            "//vendor/github.com/docker/libnetwork/osl",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/vishvananda/netlink",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/libnetwork/ipamutils",
+            "//vendor/github.com/docker/libnetwork/ns",
+            "//vendor/github.com/docker/libnetwork/osl",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/vishvananda/netlink",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":netutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/networkdb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "networkdb",
+    srcs = [
+        "broadcast.go",
+        "cluster.go",
+        "delegate.go",
+        "event_delegate.go",
+        "message.go",
+        "networkdb.go",
+        "networkdb.pb.go",
+        "networkdbdiagnostic.go",
+        "nodemgmt.go",
+        "watch.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/networkdb",
+    importpath = "github.com/docker/libnetwork/networkdb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/stringid",
+        "//vendor/github.com/armon/go-radix",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/libnetwork/diagnostic",
+        "//vendor/github.com/docker/libnetwork/internal/caller",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/hashicorp/memberlist",
+        "//vendor/github.com/hashicorp/serf/serf",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":networkdb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/ns/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ns",
+    srcs = [
+        "init_linux.go",
+        "init_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/ns",
+    importpath = "github.com/docker/libnetwork/ns",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ns",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/options/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "options",
+    srcs = ["options.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/options",
+    importpath = "github.com/docker/libnetwork/options",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":options",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/osl/kernel/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "kernel",
+    srcs = [
+        "knobs.go",
+        "knobs_linux.go",
+        "knobs_unsupported.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/osl/kernel",
+    importpath = "github.com/docker/libnetwork/osl/kernel",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/sirupsen/logrus",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":kernel",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/osl/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "osl",
+    srcs = [
+        "interface_freebsd.go",
+        "interface_linux.go",
+        "interface_windows.go",
+        "namespace_linux.go",
+        "namespace_unsupported.go",
+        "namespace_windows.go",
+        "neigh_freebsd.go",
+        "neigh_linux.go",
+        "neigh_windows.go",
+        "options_linux.go",
+        "route_linux.go",
+        "sandbox.go",
+        "sandbox_freebsd.go",
+        "sandbox_unsupported.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/osl",
+    importpath = "github.com/docker/libnetwork/osl",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/types",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/reexec",
+            "//vendor/github.com/docker/libnetwork/ns",
+            "//vendor/github.com/docker/libnetwork/osl/kernel",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/reexec",
+            "//vendor/github.com/docker/libnetwork/ns",
+            "//vendor/github.com/docker/libnetwork/osl/kernel",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vishvananda/netlink",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":osl",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/portallocator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "portallocator",
+    srcs = [
+        "portallocator.go",
+        "portallocator_freebsd.go",
+        "portallocator_linux.go",
+        "portallocator_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/portallocator",
+    importpath = "github.com/docker/libnetwork/portallocator",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/sirupsen/logrus"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":portallocator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/portmapper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "portmapper",
+    srcs = [
+        "mapper.go",
+        "mapper_linux.go",
+        "mapper_windows.go",
+        "mock_proxy.go",
+        "proxy.go",
+        "proxy_linux.go",
+        "proxy_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/portmapper",
+    importpath = "github.com/docker/libnetwork/portmapper",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/libnetwork/portallocator",
+        "//vendor/github.com/ishidawataru/sctp",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":portmapper",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/resolvconf/dns/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dns",
+    srcs = ["resolvconf.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/resolvconf/dns",
+    importpath = "github.com/docker/libnetwork/resolvconf/dns",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dns",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/resolvconf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "resolvconf",
+    srcs = ["resolvconf.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/resolvconf",
+    importpath = "github.com/docker/libnetwork/resolvconf",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/ioutils",
+        "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":resolvconf",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = ["types.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork/types",
+    importpath = "github.com/docker/libnetwork/types",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/ishidawataru/sctp"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libnetwork/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,210 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "libnetwork",
+    srcs = [
+        "agent.go",
+        "agent.pb.go",
+        "controller.go",
+        "default_gateway.go",
+        "default_gateway_freebsd.go",
+        "default_gateway_linux.go",
+        "default_gateway_windows.go",
+        "drivers_freebsd.go",
+        "drivers_ipam.go",
+        "drivers_linux.go",
+        "drivers_windows.go",
+        "endpoint.go",
+        "endpoint_cnt.go",
+        "endpoint_info.go",
+        "endpoint_info_unix.go",
+        "endpoint_info_windows.go",
+        "error.go",
+        "firewall_linux.go",
+        "firewall_others.go",
+        "network.go",
+        "network_unix.go",
+        "network_windows.go",
+        "resolver.go",
+        "resolver_unix.go",
+        "resolver_windows.go",
+        "sandbox.go",
+        "sandbox_dns_unix.go",
+        "sandbox_dns_windows.go",
+        "sandbox_externalkey.go",
+        "sandbox_externalkey_unix.go",
+        "sandbox_externalkey_windows.go",
+        "sandbox_store.go",
+        "service.go",
+        "service_common.go",
+        "service_linux.go",
+        "service_unsupported.go",
+        "service_windows.go",
+        "store.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libnetwork",
+    importpath = "github.com/docker/libnetwork",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/discovery",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//pkg/reexec",
+        "//pkg/stringid",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/libkv/store/boltdb",
+        "//vendor/github.com/docker/libkv/store/consul",
+        "//vendor/github.com/docker/libkv/store/etcd",
+        "//vendor/github.com/docker/libkv/store/zookeeper",
+        "//vendor/github.com/docker/libnetwork/cluster",
+        "//vendor/github.com/docker/libnetwork/config",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/diagnostic",
+        "//vendor/github.com/docker/libnetwork/discoverapi",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/drvregistry",
+        "//vendor/github.com/docker/libnetwork/etchosts",
+        "//vendor/github.com/docker/libnetwork/hostdiscovery",
+        "//vendor/github.com/docker/libnetwork/internal/setmatrix",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/ipams/builtin",
+        "//vendor/github.com/docker/libnetwork/ipams/null",
+        "//vendor/github.com/docker/libnetwork/ipams/remote",
+        "//vendor/github.com/docker/libnetwork/ipamutils",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/libnetwork/netutils",
+        "//vendor/github.com/docker/libnetwork/networkdb",
+        "//vendor/github.com/docker/libnetwork/options",
+        "//vendor/github.com/docker/libnetwork/osl",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/miekg/dns",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/libnetwork/drivers/bridge",
+            "//vendor/github.com/docker/libnetwork/drivers/host",
+            "//vendor/github.com/docker/libnetwork/drivers/ipvlan",
+            "//vendor/github.com/docker/libnetwork/drivers/macvlan",
+            "//vendor/github.com/docker/libnetwork/drivers/null",
+            "//vendor/github.com/docker/libnetwork/drivers/overlay",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/ns",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/ishidawataru/sctp",
+            "//vendor/github.com/moby/ipvs",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/vishvananda/netlink/nl",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/docker/libnetwork/drivers/null",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/libnetwork/drivers/bridge",
+            "//vendor/github.com/docker/libnetwork/drivers/host",
+            "//vendor/github.com/docker/libnetwork/drivers/ipvlan",
+            "//vendor/github.com/docker/libnetwork/drivers/macvlan",
+            "//vendor/github.com/docker/libnetwork/drivers/null",
+            "//vendor/github.com/docker/libnetwork/drivers/overlay",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/ns",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/ishidawataru/sctp",
+            "//vendor/github.com/moby/ipvs",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/vishvananda/netlink/nl",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/docker/libnetwork/iptables",
+            "//vendor/github.com/docker/libnetwork/resolvconf",
+            "//vendor/github.com/docker/libnetwork/resolvconf/dns",
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/hcsshim",
+            "//vendor/github.com/Microsoft/hcsshim/osversion",
+            "//vendor/github.com/docker/libnetwork/drivers/null",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+            "//vendor/github.com/docker/libnetwork/drivers/windows",
+            "//vendor/github.com/docker/libnetwork/drivers/windows/overlay",
+            "//vendor/github.com/docker/libnetwork/ipams/windowsipam",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":libnetwork",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/libtrust/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "libtrust",
+    srcs = [
+        "certificates.go",
+        "doc.go",
+        "ec_key.go",
+        "filter.go",
+        "hash.go",
+        "jsonsign.go",
+        "key.go",
+        "key_files.go",
+        "key_manager.go",
+        "rsa_key.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/libtrust",
+    importpath = "github.com/docker/libtrust",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":libtrust",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/agent/configs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "configs",
+    srcs = ["configs.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/agent/configs",
+    importpath = "github.com/docker/swarmkit/agent/configs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/api",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":configs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/agent/exec/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exec",
+    srcs = [
+        "controller.go",
+        "controller_stub.go",
+        "errors.go",
+        "executor.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/agent/exec",
+    importpath = "github.com/docker/swarmkit/agent/exec",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/equality",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":exec",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/agent/secrets/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "secrets",
+    srcs = ["secrets.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/agent/secrets",
+    importpath = "github.com/docker/swarmkit/agent/secrets",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/identity",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":secrets",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/agent/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "agent",
+    srcs = [
+        "agent.go",
+        "config.go",
+        "dependency.go",
+        "errors.go",
+        "helpers.go",
+        "reporter.go",
+        "resource.go",
+        "session.go",
+        "storage.go",
+        "task.go",
+        "worker.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/agent",
+    importpath = "github.com/docker/swarmkit/agent",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/agent/configs",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/agent/secrets",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/equality",
+        "//vendor/github.com/docker/swarmkit/connectionbroker",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":agent",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/deepcopy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "deepcopy",
+    srcs = ["copy.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api/deepcopy",
+    importpath = "github.com/docker/swarmkit/api/deepcopy",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/types"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":deepcopy",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/defaults/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "defaults",
+    srcs = ["service.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api/defaults",
+    importpath = "github.com/docker/swarmkit/api/defaults",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/deepcopy",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":defaults",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/equality/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "equality",
+    srcs = ["equality.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api/equality",
+    importpath = "github.com/docker/swarmkit/api/equality",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/swarmkit/api"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":equality",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/genericresource/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "genericresource",
+    srcs = [
+        "helpers.go",
+        "parse.go",
+        "resource_management.go",
+        "string.go",
+        "validate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api/genericresource",
+    importpath = "github.com/docker/swarmkit/api/genericresource",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/swarmkit/api"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":genericresource",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/naming/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "naming",
+    srcs = ["naming.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api/naming",
+    importpath = "github.com/docker/swarmkit/api/naming",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/swarmkit/api"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":naming",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/validation/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "validation",
+    srcs = ["secrets.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api/validation",
+    importpath = "github.com/docker/swarmkit/api/validation",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":validation",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = [
+        "ca.pb.go",
+        "control.pb.go",
+        "dispatcher.pb.go",
+        "health.pb.go",
+        "logbroker.pb.go",
+        "objects.pb.go",
+        "raft.pb.go",
+        "resource.pb.go",
+        "snapshot.pb.go",
+        "specs.pb.go",
+        "storeobject.go",
+        "types.pb.go",
+        "watch.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/api",
+    importpath = "github.com/docker/swarmkit/api",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api/deepcopy",
+        "//vendor/github.com/docker/swarmkit/manager/raftselector",
+        "//vendor/github.com/docker/swarmkit/protobuf/plugin",
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/peer",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/ca/keyutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "keyutils",
+    srcs = ["keyutils.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/ca/keyutils",
+    importpath = "github.com/docker/swarmkit/ca/keyutils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/docker/swarmkit/ca/pkcs8",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":keyutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/ca/pkcs8/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkcs8",
+    srcs = ["pkcs8.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/ca/pkcs8",
+    importpath = "github.com/docker/swarmkit/ca/pkcs8",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/helpers/derhelpers",
+        "//vendor/golang.org/x/crypto/pbkdf2",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pkcs8",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/ca/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,59 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ca",
+    srcs = [
+        "auth.go",
+        "certificates.go",
+        "config.go",
+        "external.go",
+        "forward.go",
+        "keyreadwriter.go",
+        "reconciler.go",
+        "renewer.go",
+        "server.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/ca",
+    importpath = "github.com/docker/swarmkit/ca",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cloudflare/cfssl/api",
+        "//vendor/github.com/cloudflare/cfssl/config",
+        "//vendor/github.com/cloudflare/cfssl/csr",
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/cloudflare/cfssl/initca",
+        "//vendor/github.com/cloudflare/cfssl/log",
+        "//vendor/github.com/cloudflare/cfssl/signer",
+        "//vendor/github.com/cloudflare/cfssl/signer/local",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/equality",
+        "//vendor/github.com/docker/swarmkit/ca/keyutils",
+        "//vendor/github.com/docker/swarmkit/ca/pkcs8",
+        "//vendor/github.com/docker/swarmkit/connectionbroker",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/ioutils",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/net/context/ctxhttp",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/peer",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ca",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/connectionbroker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "connectionbroker",
+    srcs = ["broker.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/connectionbroker",
+    importpath = "github.com/docker/swarmkit/connectionbroker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/remotes",
+        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":connectionbroker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/identity/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "identity",
+    srcs = [
+        "combined_id.go",
+        "doc.go",
+        "randomid.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/identity",
+    importpath = "github.com/docker/swarmkit/identity",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":identity",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/ioutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ioutils",
+    srcs = ["ioutils.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/ioutils",
+    importpath = "github.com/docker/swarmkit/ioutils",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ioutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/log/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "log",
+    srcs = [
+        "context.go",
+        "grpc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/log",
+    importpath = "github.com/docker/swarmkit/log",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/grpclog",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":log",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/allocator/cnmallocator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,72 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cnmallocator",
+    srcs = [
+        "drivers_darwin.go",
+        "drivers_ipam.go",
+        "drivers_network_linux.go",
+        "drivers_network_windows.go",
+        "drivers_unsupported.go",
+        "networkallocator.go",
+        "portallocator.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/allocator/cnmallocator",
+    importpath = "github.com/docker/swarmkit/manager/allocator/cnmallocator",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/libnetwork/datastore",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/drvregistry",
+        "//vendor/github.com/docker/libnetwork/idm",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/libnetwork/ipams/builtin",
+        "//vendor/github.com/docker/libnetwork/ipams/null",
+        "//vendor/github.com/docker/libnetwork/ipams/remote",
+        "//vendor/github.com/docker/libnetwork/ipamutils",
+        "//vendor/github.com/docker/libnetwork/netlabel",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/networkallocator",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/libnetwork/drivers/bridge/brmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/host",
+            "//vendor/github.com/docker/libnetwork/drivers/ipvlan/ivmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/macvlan/mvmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/libnetwork/drivers/bridge/brmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/host",
+            "//vendor/github.com/docker/libnetwork/drivers/ipvlan/ivmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/macvlan/mvmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/docker/libnetwork/drivers/overlay/ovmanager",
+            "//vendor/github.com/docker/libnetwork/drivers/remote",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cnmallocator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/allocator/networkallocator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "networkallocator",
+    srcs = ["networkallocator.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/allocator/networkallocator",
+    importpath = "github.com/docker/swarmkit/manager/allocator/networkallocator",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/swarmkit/api"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":networkallocator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/allocator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "allocator",
+    srcs = [
+        "allocator.go",
+        "doc.go",
+        "network.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/allocator",
+    importpath = "github.com/docker/swarmkit/manager/allocator",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/cnmallocator",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/networkallocator",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":allocator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/constraint/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "constraint",
+    srcs = ["constraint.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/constraint",
+    importpath = "github.com/docker/swarmkit/manager/constraint",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/swarmkit/api"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":constraint",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/controlapi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,59 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "controlapi",
+    srcs = [
+        "ca_rotation.go",
+        "cluster.go",
+        "common.go",
+        "config.go",
+        "extension.go",
+        "network.go",
+        "node.go",
+        "resource.go",
+        "secret.go",
+        "server.go",
+        "service.go",
+        "task.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/controlapi",
+    importpath = "github.com/docker/swarmkit/manager/controlapi",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/cloudflare/cfssl/helpers",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/libnetwork/driverapi",
+        "//vendor/github.com/docker/libnetwork/ipamapi",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/defaults",
+        "//vendor/github.com/docker/swarmkit/api/genericresource",
+        "//vendor/github.com/docker/swarmkit/api/naming",
+        "//vendor/github.com/docker/swarmkit/api/validation",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/allocator",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/networkallocator",
+        "//vendor/github.com/docker/swarmkit/manager/constraint",
+        "//vendor/github.com/docker/swarmkit/manager/drivers",
+        "//vendor/github.com/docker/swarmkit/manager/encryption",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/membership",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/github.com/docker/swarmkit/template",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":controlapi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/dispatcher/heartbeat/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "heartbeat",
+    srcs = ["heartbeat.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/dispatcher/heartbeat",
+    importpath = "github.com/docker/swarmkit/manager/dispatcher/heartbeat",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":heartbeat",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/dispatcher/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dispatcher",
+    srcs = [
+        "assignments.go",
+        "dispatcher.go",
+        "nodes.go",
+        "period.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/dispatcher",
+    importpath = "github.com/docker/swarmkit/manager/dispatcher",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/equality",
+        "//vendor/github.com/docker/swarmkit/api/validation",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/dispatcher/heartbeat",
+        "//vendor/github.com/docker/swarmkit/manager/drivers",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/github.com/docker/swarmkit/remotes",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dispatcher",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/drivers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "drivers",
+    srcs = [
+        "provider.go",
+        "secrets.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/drivers",
+    importpath = "github.com/docker/swarmkit/manager/drivers",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/naming",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":drivers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/encryption/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "encryption",
+    srcs = [
+        "encryption.go",
+        "fernet.go",
+        "nacl.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/encryption",
+    importpath = "github.com/docker/swarmkit/manager/encryption",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/fernet/fernet-go",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/crypto/nacl/secretbox",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":encryption",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/health/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "health",
+    srcs = ["health.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/health",
+    importpath = "github.com/docker/swarmkit/manager/health",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":health",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/keymanager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "keymanager",
+    srcs = ["keymanager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/keymanager",
+    importpath = "github.com/docker/swarmkit/manager/keymanager",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":keymanager",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/logbroker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logbroker",
+    srcs = [
+        "broker.go",
+        "subscription.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/logbroker",
+    importpath = "github.com/docker/swarmkit/manager/logbroker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logbroker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/metrics/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metrics",
+    srcs = ["collector.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/metrics",
+    importpath = "github.com/docker/swarmkit/manager/metrics",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metrics",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/constraintenforcer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "constraintenforcer",
+    srcs = ["constraint_enforcer.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/constraintenforcer",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/constraintenforcer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/genericresource",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/constraint",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":constraintenforcer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/global/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "global",
+    srcs = ["global.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/global",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/global",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/constraint",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/restart",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/taskinit",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/update",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":global",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/global/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "global",
+    srcs = ["reconciler.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/global",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/jobs/global",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/manager/constraint",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":global",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/replicated/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "replicated",
+    srcs = ["reconciler.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/replicated",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/jobs/replicated",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":replicated",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jobs",
+    srcs = ["orchestrator.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/jobs",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/jobs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/global",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/jobs/replicated",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/restart",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/taskinit",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jobs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/replicated/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "replicated",
+    srcs = [
+        "replicated.go",
+        "services.go",
+        "slot.go",
+        "tasks.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/replicated",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/replicated",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/restart",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/taskinit",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/update",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":replicated",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/restart/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "restart",
+    srcs = ["restart.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/restart",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/restart",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/defaults",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":restart",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/taskinit/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "taskinit",
+    srcs = ["init.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/taskinit",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/taskinit",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/defaults",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/restart",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":taskinit",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/taskreaper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "taskreaper",
+    srcs = ["task_reaper.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/taskreaper",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/taskreaper",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":taskreaper",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/update/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "update",
+    srcs = ["updater.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator/update",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator/update",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/defaults",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/restart",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":update",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/orchestrator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "orchestrator",
+    srcs = [
+        "service.go",
+        "slot.go",
+        "task.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/orchestrator",
+    importpath = "github.com/docker/swarmkit/manager/orchestrator",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/defaults",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/constraint",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":orchestrator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/raftselector/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "raftselector",
+    srcs = ["raftselector.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/raftselector",
+    importpath = "github.com/docker/swarmkit/manager/raftselector",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":raftselector",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/resourceapi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "resourceapi",
+    srcs = ["allocator.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/resourceapi",
+    importpath = "github.com/docker/swarmkit/manager/resourceapi",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":resourceapi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/scheduler/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "scheduler",
+    srcs = [
+        "decision_tree.go",
+        "filter.go",
+        "nodeheap.go",
+        "nodeinfo.go",
+        "nodeset.go",
+        "pipeline.go",
+        "scheduler.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/scheduler",
+    importpath = "github.com/docker/swarmkit/manager/scheduler",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/genericresource",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/constraint",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/protobuf/ptypes",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":scheduler",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/state/raft/membership/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "membership",
+    srcs = ["cluster.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/state/raft/membership",
+    importpath = "github.com/docker/swarmkit/manager/state/raft/membership",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":membership",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/state/raft/storage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "storage",
+    srcs = [
+        "snapwrap.go",
+        "storage.go",
+        "walwrap.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/state/raft/storage",
+    importpath = "github.com/docker/swarmkit/manager/state/raft/storage",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/pkg/fileutil",
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/coreos/etcd/snap",
+        "//vendor/github.com/coreos/etcd/wal",
+        "//vendor/github.com/coreos/etcd/wal/walpb",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/encryption",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":storage",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/state/raft/transport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "transport",
+    srcs = [
+        "peer.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/state/raft/transport",
+    importpath = "github.com/docker/swarmkit/manager/state/raft/transport",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/coreos/etcd/raft",
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/membership",
+        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transport",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/state/raft/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "raft",
+    srcs = [
+        "raft.go",
+        "storage.go",
+        "util.go",
+        "wait.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/state/raft",
+    importpath = "github.com/docker/swarmkit/manager/state/raft",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/signal",
+        "//vendor/code.cloudfoundry.org/clock",
+        "//vendor/github.com/coreos/etcd/pkg/idutil",
+        "//vendor/github.com/coreos/etcd/raft",
+        "//vendor/github.com/coreos/etcd/raft/raftpb",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/encryption",
+        "//vendor/github.com/docker/swarmkit/manager/raftselector",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/membership",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/storage",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/transport",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/time/rate",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/peer",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":raft",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/state/store/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,43 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "store",
+    srcs = [
+        "apply.go",
+        "by.go",
+        "clusters.go",
+        "combinators.go",
+        "configs.go",
+        "doc.go",
+        "extensions.go",
+        "memory.go",
+        "networks.go",
+        "nodes.go",
+        "object.go",
+        "resources.go",
+        "secrets.go",
+        "services.go",
+        "tasks.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/state/store",
+    importpath = "github.com/docker/swarmkit/manager/state/store",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/naming",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/watch",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/hashicorp/go-memdb",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":store",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/state/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "state",
+    srcs = [
+        "proposer.go",
+        "watch.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/state",
+    importpath = "github.com/docker/swarmkit/manager/state",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/watch",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":state",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/watchapi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "watchapi",
+    srcs = [
+        "server.go",
+        "watch.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager/watchapi",
+    importpath = "github.com/docker/swarmkit/manager/watchapi",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/manager/state",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":watchapi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/manager/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,64 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "manager",
+    srcs = [
+        "deks.go",
+        "dirty.go",
+        "doc.go",
+        "manager.go",
+        "role_manager.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/manager",
+    importpath = "github.com/docker/swarmkit/manager",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/code.cloudfoundry.org/clock",
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/connectionbroker",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager/allocator",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/cnmallocator",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/networkallocator",
+        "//vendor/github.com/docker/swarmkit/manager/controlapi",
+        "//vendor/github.com/docker/swarmkit/manager/dispatcher",
+        "//vendor/github.com/docker/swarmkit/manager/drivers",
+        "//vendor/github.com/docker/swarmkit/manager/encryption",
+        "//vendor/github.com/docker/swarmkit/manager/health",
+        "//vendor/github.com/docker/swarmkit/manager/keymanager",
+        "//vendor/github.com/docker/swarmkit/manager/logbroker",
+        "//vendor/github.com/docker/swarmkit/manager/metrics",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/constraintenforcer",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/global",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/jobs",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/replicated",
+        "//vendor/github.com/docker/swarmkit/manager/orchestrator/taskreaper",
+        "//vendor/github.com/docker/swarmkit/manager/resourceapi",
+        "//vendor/github.com/docker/swarmkit/manager/scheduler",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/membership",
+        "//vendor/github.com/docker/swarmkit/manager/state/raft/transport",
+        "//vendor/github.com/docker/swarmkit/manager/state/store",
+        "//vendor/github.com/docker/swarmkit/manager/watchapi",
+        "//vendor/github.com/docker/swarmkit/remotes",
+        "//vendor/github.com/docker/swarmkit/xnet",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/credentials",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":manager",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/node/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "node",
+    srcs = ["node.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/node",
+    importpath = "github.com/docker/swarmkit/node",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//vendor/github.com/docker/go-metrics",
+        "//vendor/github.com/docker/libnetwork/drivers/overlay/overlayutils",
+        "//vendor/github.com/docker/swarmkit/agent",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/ca",
+        "//vendor/github.com/docker/swarmkit/ca/keyutils",
+        "//vendor/github.com/docker/swarmkit/connectionbroker",
+        "//vendor/github.com/docker/swarmkit/identity",
+        "//vendor/github.com/docker/swarmkit/ioutils",
+        "//vendor/github.com/docker/swarmkit/log",
+        "//vendor/github.com/docker/swarmkit/manager",
+        "//vendor/github.com/docker/swarmkit/manager/allocator/cnmallocator",
+        "//vendor/github.com/docker/swarmkit/manager/encryption",
+        "//vendor/github.com/docker/swarmkit/remotes",
+        "//vendor/github.com/docker/swarmkit/xnet",
+        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":node",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/protobuf/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "plugin",
+    srcs = [
+        "helpers.go",
+        "plugin.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/protobuf/plugin",
+    importpath = "github.com/docker/swarmkit/protobuf/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/api/deepcopy",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/protoc-gen-gogo/descriptor",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/protobuf/ptypes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ptypes",
+    srcs = [
+        "doc.go",
+        "timestamp.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/protobuf/ptypes",
+    importpath = "github.com/docker/swarmkit/protobuf/ptypes",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/types"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ptypes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/remotes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remotes",
+    srcs = ["remotes.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/remotes",
+    importpath = "github.com/docker/swarmkit/remotes",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/docker/swarmkit/api"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remotes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/template/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "template",
+    srcs = [
+        "context.go",
+        "expand.go",
+        "getter.go",
+        "template.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/template",
+    importpath = "github.com/docker/swarmkit/template",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/swarmkit/agent/configs",
+        "//vendor/github.com/docker/swarmkit/agent/exec",
+        "//vendor/github.com/docker/swarmkit/agent/secrets",
+        "//vendor/github.com/docker/swarmkit/api",
+        "//vendor/github.com/docker/swarmkit/api/naming",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":template",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/watch/queue/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "queue",
+    srcs = ["queue.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/watch/queue",
+    importpath = "github.com/docker/swarmkit/watch/queue",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":queue",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/watch/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "watch",
+    srcs = [
+        "sinks.go",
+        "watch.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/watch",
+    importpath = "github.com/docker/swarmkit/watch",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/go-events",
+        "//vendor/github.com/docker/swarmkit/watch/queue",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":watch",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/docker/swarmkit/xnet/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "xnet",
+    srcs = [
+        "xnet_unix.go",
+        "xnet_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/docker/swarmkit/xnet",
+    importpath = "github.com/docker/swarmkit/xnet",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":xnet",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/fernet/fernet-go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fernet-go",
+    srcs = [
+        "fernet.go",
+        "key.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/fernet/fernet-go",
+    importpath = "github.com/fernet/fernet-go",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fernet-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/fluent/fluent-logger-golang/fluent/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fluent",
+    srcs = [
+        "fluent.go",
+        "proto.go",
+        "proto_gen.go",
+        "test_message.go",
+        "test_message_gen.go",
+        "version.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/fluent/fluent-logger-golang/fluent",
+    importpath = "github.com/fluent/fluent-logger-golang/fluent",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/tinylib/msgp/msgp"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fluent",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/fsnotify/fsnotify/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fsnotify",
+    srcs = [
+        "fen.go",
+        "fsnotify.go",
+        "inotify.go",
+        "inotify_poller.go",
+        "kqueue.go",
+        "open_mode_bsd.go",
+        "open_mode_darwin.go",
+        "windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/fsnotify/fsnotify",
+    importpath = "github.com/fsnotify/fsnotify",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fsnotify",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/godbus/dbus/v5/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dbus",
+    srcs = [
+        "auth.go",
+        "auth_anonymous.go",
+        "auth_external.go",
+        "auth_sha1.go",
+        "call.go",
+        "conn.go",
+        "conn_darwin.go",
+        "conn_other.go",
+        "conn_unix.go",
+        "conn_windows.go",
+        "dbus.go",
+        "decoder.go",
+        "default_handler.go",
+        "doc.go",
+        "encoder.go",
+        "export.go",
+        "homedir.go",
+        "homedir_dynamic.go",
+        "match.go",
+        "message.go",
+        "object.go",
+        "server_interfaces.go",
+        "sig.go",
+        "transport_darwin.go",
+        "transport_generic.go",
+        "transport_nonce_tcp.go",
+        "transport_tcp.go",
+        "transport_unix.go",
+        "transport_unixcred_dragonfly.go",
+        "transport_unixcred_freebsd.go",
+        "transport_unixcred_linux.go",
+        "transport_unixcred_openbsd.go",
+        "variant.go",
+        "variant_lexer.go",
+        "variant_parser.go",
+    ],
+    cgo = True,
+    importmap = "github.com/docker/docker/vendor/github.com/godbus/dbus/v5",
+    importpath = "github.com/godbus/dbus/v5",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dbus",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gofrs/flock/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "flock",
+    srcs = [
+        "flock.go",
+        "flock_unix.go",
+        "flock_winapi.go",
+        "flock_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gofrs/flock",
+    importpath = "github.com/gofrs/flock",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":flock",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/googleapis/google/rpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rpc",
+    srcs = [
+        "code.pb.go",
+        "error_details.pb.go",
+        "status.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/googleapis/google/rpc",
+    importpath = "github.com/gogo/googleapis/google/rpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":rpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/protobuf/gogoproto/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gogoproto",
+    srcs = [
+        "doc.go",
+        "gogo.pb.go",
+        "helper.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/protobuf/gogoproto",
+    importpath = "github.com/gogo/protobuf/gogoproto",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/protoc-gen-gogo/descriptor",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gogoproto",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/protobuf/io/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "io",
+    srcs = [
+        "full.go",
+        "io.go",
+        "uint32.go",
+        "varint.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/protobuf/io",
+    importpath = "github.com/gogo/protobuf/io",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":io",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/protobuf/proto/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proto",
+    srcs = [
+        "clone.go",
+        "custom_gogo.go",
+        "decode.go",
+        "deprecated.go",
+        "discard.go",
+        "duration.go",
+        "duration_gogo.go",
+        "encode.go",
+        "encode_gogo.go",
+        "equal.go",
+        "extensions.go",
+        "extensions_gogo.go",
+        "lib.go",
+        "lib_gogo.go",
+        "message_set.go",
+        "pointer_reflect.go",
+        "pointer_reflect_gogo.go",
+        "pointer_unsafe.go",
+        "pointer_unsafe_gogo.go",
+        "properties.go",
+        "properties_gogo.go",
+        "skip_gogo.go",
+        "table_marshal.go",
+        "table_marshal_gogo.go",
+        "table_merge.go",
+        "table_unmarshal.go",
+        "table_unmarshal_gogo.go",
+        "text.go",
+        "text_gogo.go",
+        "text_parser.go",
+        "timestamp.go",
+        "timestamp_gogo.go",
+        "wrappers.go",
+        "wrappers_gogo.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/protobuf/proto",
+    importpath = "github.com/gogo/protobuf/proto",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proto",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/protobuf/protoc-gen-gogo/descriptor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "descriptor",
+    srcs = [
+        "descriptor.go",
+        "descriptor.pb.go",
+        "descriptor_gostring.gen.go",
+        "helper.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/protobuf/protoc-gen-gogo/descriptor",
+    importpath = "github.com/gogo/protobuf/protoc-gen-gogo/descriptor",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/gogo/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":descriptor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/protobuf/sortkeys/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sortkeys",
+    srcs = ["sortkeys.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/protobuf/sortkeys",
+    importpath = "github.com/gogo/protobuf/sortkeys",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sortkeys",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gogo/protobuf/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "any.go",
+        "any.pb.go",
+        "api.pb.go",
+        "doc.go",
+        "duration.go",
+        "duration.pb.go",
+        "duration_gogo.go",
+        "empty.pb.go",
+        "field_mask.pb.go",
+        "protosize.go",
+        "source_context.pb.go",
+        "struct.pb.go",
+        "timestamp.go",
+        "timestamp.pb.go",
+        "timestamp_gogo.go",
+        "type.pb.go",
+        "wrappers.pb.go",
+        "wrappers_gogo.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gogo/protobuf/types",
+    importpath = "github.com/gogo/protobuf/types",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/gddo/httputil/header/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "header",
+    srcs = ["header.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/gddo/httputil/header",
+    importpath = "github.com/golang/gddo/httputil/header",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":header",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/gddo/httputil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "httputil",
+    srcs = [
+        "buster.go",
+        "httputil.go",
+        "negotiate.go",
+        "respbuf.go",
+        "static.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/gddo/httputil",
+    importpath = "github.com/golang/gddo/httputil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/gddo/httputil/header"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":httputil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/groupcache/lru/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "lru",
+    srcs = ["lru.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/groupcache/lru",
+    importpath = "github.com/golang/groupcache/lru",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":lru",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/jsonpb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jsonpb",
+    srcs = ["jsonpb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/jsonpb",
+    importpath = "github.com/golang/protobuf/jsonpb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/struct",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonpb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/proto/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proto",
+    srcs = [
+        "clone.go",
+        "decode.go",
+        "deprecated.go",
+        "discard.go",
+        "encode.go",
+        "equal.go",
+        "extensions.go",
+        "lib.go",
+        "message_set.go",
+        "pointer_reflect.go",
+        "pointer_unsafe.go",
+        "properties.go",
+        "table_marshal.go",
+        "table_merge.go",
+        "table_unmarshal.go",
+        "text.go",
+        "text_parser.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/proto",
+    importpath = "github.com/golang/protobuf/proto",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proto",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/protoc-gen-go/descriptor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "descriptor",
+    srcs = ["descriptor.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/protoc-gen-go/descriptor",
+    importpath = "github.com/golang/protobuf/protoc-gen-go/descriptor",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":descriptor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/protoc-gen-go/generator/internal/remap/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remap",
+    srcs = ["remap.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/protoc-gen-go/generator/internal/remap",
+    importpath = "github.com/golang/protobuf/protoc-gen-go/generator/internal/remap",
+    visibility = ["//vendor/github.com/golang/protobuf/protoc-gen-go/generator:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remap",
+    visibility = ["//vendor/github.com/golang/protobuf/protoc-gen-go/generator:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/protoc-gen-go/generator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "generator",
+    srcs = ["generator.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/protoc-gen-go/generator",
+    importpath = "github.com/golang/protobuf/protoc-gen-go/generator",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/descriptor",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/generator/internal/remap",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/plugin",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":generator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/protoc-gen-go/grpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc",
+    srcs = ["grpc.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/protoc-gen-go/grpc",
+    importpath = "github.com/golang/protobuf/protoc-gen-go/grpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/descriptor",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/generator",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/protoc-gen-go/plugin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "plugin",
+    srcs = ["plugin.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/protoc-gen-go/plugin",
+    importpath = "github.com/golang/protobuf/protoc-gen-go/plugin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/descriptor",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":plugin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/protoc-gen-go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "protoc-gen-go_lib",
+    srcs = [
+        "link_grpc.go",
+        "main.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/protoc-gen-go",
+    importpath = "github.com/golang/protobuf/protoc-gen-go",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/generator",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/grpc",
+    ],
+)
+
+go_binary(
+    name = "protoc-gen-go",
+    embed = [":protoc-gen-go_lib"],
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/ptypes/any/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "any",
+    srcs = ["any.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/ptypes/any",
+    importpath = "github.com/golang/protobuf/ptypes/any",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":any",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/ptypes/duration/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "duration",
+    srcs = ["duration.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/ptypes/duration",
+    importpath = "github.com/golang/protobuf/ptypes/duration",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":duration",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/ptypes/empty/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "empty",
+    srcs = ["empty.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/ptypes/empty",
+    importpath = "github.com/golang/protobuf/ptypes/empty",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":empty",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/ptypes/struct/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "struct",
+    srcs = ["struct.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/ptypes/struct",
+    importpath = "github.com/golang/protobuf/ptypes/struct",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":struct",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/ptypes/timestamp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "timestamp",
+    srcs = ["timestamp.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/ptypes/timestamp",
+    importpath = "github.com/golang/protobuf/ptypes/timestamp",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":timestamp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/golang/protobuf/ptypes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ptypes",
+    srcs = [
+        "any.go",
+        "doc.go",
+        "duration.go",
+        "timestamp.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/golang/protobuf/ptypes",
+    importpath = "github.com/golang/protobuf/ptypes",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ptypes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/asn1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "asn1",
+    srcs = [
+        "asn1.go",
+        "common.go",
+        "marshal.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/asn1",
+    importpath = "github.com/google/certificate-transparency-go/asn1",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":asn1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/client/configpb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "configpb",
+    srcs = [
+        "gen.go",
+        "multilog.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/client/configpb",
+    importpath = "github.com/google/certificate-transparency-go/client/configpb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":configpb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "getentries.go",
+        "logclient.go",
+        "multilog.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/client",
+    importpath = "github.com/google/certificate-transparency-go/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes",
+        "//vendor/github.com/google/certificate-transparency-go",
+        "//vendor/github.com/google/certificate-transparency-go/client/configpb",
+        "//vendor/github.com/google/certificate-transparency-go/jsonclient",
+        "//vendor/github.com/google/certificate-transparency-go/tls",
+        "//vendor/github.com/google/certificate-transparency-go/x509",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/jsonclient/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jsonclient",
+    srcs = [
+        "backoff.go",
+        "client.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/jsonclient",
+    importpath = "github.com/google/certificate-transparency-go/jsonclient",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/certificate-transparency-go",
+        "//vendor/github.com/google/certificate-transparency-go/x509",
+        "//vendor/golang.org/x/net/context/ctxhttp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jsonclient",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/tls/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tls",
+    srcs = [
+        "signature.go",
+        "tls.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/tls",
+    importpath = "github.com/google/certificate-transparency-go/tls",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/google/certificate-transparency-go/asn1"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tls",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/x509/pkix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkix",
+    srcs = ["pkix.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/x509/pkix",
+    importpath = "github.com/google/certificate-transparency-go/x509/pkix",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/google/certificate-transparency-go/asn1"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pkix",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/x509/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,70 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "x509",
+    srcs = [
+        "cert_pool.go",
+        "error.go",
+        "errors.go",
+        "names.go",
+        "nilref_nil_darwin.go",
+        "nilref_zero_darwin.go",
+        "pem_decrypt.go",
+        "pkcs1.go",
+        "pkcs8.go",
+        "ptr_sysptr_windows.go",
+        "ptr_uint_windows.go",
+        "revoked.go",
+        "root.go",
+        "root_bsd.go",
+        "root_cgo_darwin.go",
+        "root_darwin.go",
+        "root_darwin_armx.go",
+        "root_linux.go",
+        "root_nacl.go",
+        "root_nocgo_darwin.go",
+        "root_plan9.go",
+        "root_solaris.go",
+        "root_unix.go",
+        "root_windows.go",
+        "sec1.go",
+        "verify.go",
+        "x509.go",
+    ],
+    cgo = True,
+    clinkopts = select({
+        "@io_bazel_rules_go//go/platform:darwin_386": [
+            "-framework CoreFoundation -framework Security",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin_amd64": [
+            "-framework CoreFoundation -framework Security",
+        ],
+        "//conditions:default": [],
+    }),
+    copts = select({
+        "@io_bazel_rules_go//go/platform:darwin_386": [
+            "-mmacosx-version-min=10.6 -D__MAC_OS_X_VERSION_MAX_ALLOWED=1080",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin_amd64": [
+            "-mmacosx-version-min=10.6 -D__MAC_OS_X_VERSION_MAX_ALLOWED=1080",
+        ],
+        "//conditions:default": [],
+    }),
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go/x509",
+    importpath = "github.com/google/certificate-transparency-go/x509",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/certificate-transparency-go/asn1",
+        "//vendor/github.com/google/certificate-transparency-go/tls",
+        "//vendor/github.com/google/certificate-transparency-go/x509/pkix",
+        "//vendor/golang.org/x/crypto/cryptobyte",
+        "//vendor/golang.org/x/crypto/cryptobyte/asn1",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":x509",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/certificate-transparency-go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "certificate-transparency-go",
+    srcs = [
+        "serialization.go",
+        "signatures.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/certificate-transparency-go",
+    importpath = "github.com/google/certificate-transparency-go",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/certificate-transparency-go/tls",
+        "//vendor/github.com/google/certificate-transparency-go/x509",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":certificate-transparency-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/go-cmp/cmp/cmpopts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cmpopts",
+    srcs = [
+        "equate.go",
+        "ignore.go",
+        "sort.go",
+        "sort_go17.go",
+        "sort_go18.go",
+        "struct_filter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/go-cmp/cmp/cmpopts",
+    importpath = "github.com/google/go-cmp/cmp/cmpopts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/github.com/google/go-cmp/cmp/internal/function",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cmpopts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/go-cmp/cmp/internal/diff/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "diff",
+    srcs = [
+        "debug_disable.go",
+        "diff.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/go-cmp/cmp/internal/diff",
+    importpath = "github.com/google/go-cmp/cmp/internal/diff",
+    visibility = ["//vendor/github.com/google/go-cmp/cmp:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":diff",
+    visibility = ["//vendor/github.com/google/go-cmp/cmp:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/go-cmp/cmp/internal/function/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "function",
+    srcs = ["func.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/google/go-cmp/cmp/internal/function",
+    importpath = "github.com/google/go-cmp/cmp/internal/function",
+    visibility = ["//vendor/github.com/google/go-cmp/cmp:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":function",
+    visibility = ["//vendor/github.com/google/go-cmp/cmp:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/go-cmp/cmp/internal/value/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "value",
+    srcs = [
+        "format.go",
+        "sort.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/go-cmp/cmp/internal/value",
+    importpath = "github.com/google/go-cmp/cmp/internal/value",
+    visibility = ["//vendor/github.com/google/go-cmp/cmp:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":value",
+    visibility = ["//vendor/github.com/google/go-cmp/cmp:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/go-cmp/cmp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cmp",
+    srcs = [
+        "compare.go",
+        "options.go",
+        "path.go",
+        "reporter.go",
+        "unsafe_panic.go",
+        "unsafe_reflect.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/go-cmp/cmp",
+    importpath = "github.com/google/go-cmp/cmp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/go-cmp/cmp/internal/diff",
+        "//vendor/github.com/google/go-cmp/cmp/internal/function",
+        "//vendor/github.com/google/go-cmp/cmp/internal/value",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cmp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/shlex/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "shlex",
+    srcs = ["shlex.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/google/shlex",
+    importpath = "github.com/google/shlex",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":shlex",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/google/uuid/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "uuid",
+    srcs = [
+        "dce.go",
+        "doc.go",
+        "hash.go",
+        "marshal.go",
+        "node.go",
+        "node_js.go",
+        "node_net.go",
+        "sql.go",
+        "time.go",
+        "util.go",
+        "uuid.go",
+        "version1.go",
+        "version4.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/google/uuid",
+    importpath = "github.com/google/uuid",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":uuid",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/googleapis/gax-go/v2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gax-go",
+    srcs = [
+        "call_option.go",
+        "gax.go",
+        "header.go",
+        "invoke.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/googleapis/gax-go/v2",
+    importpath = "github.com/googleapis/gax-go/v2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gax-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/gorilla/mux/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mux",
+    srcs = [
+        "doc.go",
+        "middleware.go",
+        "mux.go",
+        "regexp.go",
+        "route.go",
+        "test_helpers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/gorilla/mux",
+    importpath = "github.com/gorilla/mux",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mux",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/grpc-ecosystem/go-grpc-middleware/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-grpc-middleware",
+    srcs = [
+        "chain.go",
+        "doc.go",
+        "wrappers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/grpc-ecosystem/go-grpc-middleware",
+    importpath = "github.com/grpc-ecosystem/go-grpc-middleware",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-grpc-middleware",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/grpc-ecosystem/go-grpc-prometheus/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-grpc-prometheus",
+    srcs = [
+        "client.go",
+        "client_metrics.go",
+        "client_reporter.go",
+        "metric_options.go",
+        "server.go",
+        "server_metrics.go",
+        "server_reporter.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
+    importpath = "github.com/grpc-ecosystem/go-grpc-prometheus",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/prometheus/client_golang/prometheus",
+        "//vendor/golang.org/x/net/context",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-grpc-prometheus",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "otgrpc",
+    srcs = [
+        "client.go",
+        "errors.go",
+        "options.go",
+        "package.go",
+        "server.go",
+        "shared.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc",
+    importpath = "github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/opentracing/opentracing-go/ext",
+        "//vendor/github.com/opentracing/opentracing-go/log",
+        "//vendor/golang.org/x/net/context",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":otgrpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/consul/api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = [
+        "acl.go",
+        "agent.go",
+        "api.go",
+        "catalog.go",
+        "event.go",
+        "health.go",
+        "kv.go",
+        "lock.go",
+        "raw.go",
+        "semaphore.go",
+        "session.go",
+        "status.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/consul/api",
+    importpath = "github.com/hashicorp/consul/api",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/errwrap/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errwrap",
+    srcs = ["errwrap.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/errwrap",
+    importpath = "github.com/hashicorp/errwrap",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errwrap",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/go-immutable-radix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-immutable-radix",
+    srcs = [
+        "edges.go",
+        "iradix.go",
+        "iter.go",
+        "node.go",
+        "raw_iter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/go-immutable-radix",
+    importpath = "github.com/hashicorp/go-immutable-radix",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/hashicorp/golang-lru/simplelru"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-immutable-radix",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/go-memdb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-memdb",
+    srcs = [
+        "index.go",
+        "memdb.go",
+        "schema.go",
+        "txn.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/go-memdb",
+    importpath = "github.com/hashicorp/go-memdb",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/hashicorp/go-immutable-radix"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-memdb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/go-msgpack/codec/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "codec",
+    srcs = [
+        "0doc.go",
+        "binc.go",
+        "decode.go",
+        "encode.go",
+        "helper.go",
+        "helper_internal.go",
+        "msgpack.go",
+        "rpc.go",
+        "simple.go",
+        "time.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/go-msgpack/codec",
+    importpath = "github.com/hashicorp/go-msgpack/codec",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":codec",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/go-multierror/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-multierror",
+    srcs = [
+        "append.go",
+        "flatten.go",
+        "format.go",
+        "multierror.go",
+        "prefix.go",
+        "sort.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/go-multierror",
+    importpath = "github.com/hashicorp/go-multierror",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/hashicorp/errwrap"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-multierror",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/go-sockaddr/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-sockaddr",
+    srcs = [
+        "doc.go",
+        "ifaddr.go",
+        "ifaddrs.go",
+        "ifattr.go",
+        "ipaddr.go",
+        "ipaddrs.go",
+        "ipv4addr.go",
+        "ipv6addr.go",
+        "rfc.go",
+        "route_info.go",
+        "route_info_android.go",
+        "route_info_bsd.go",
+        "route_info_default.go",
+        "route_info_linux.go",
+        "route_info_solaris.go",
+        "route_info_windows.go",
+        "sockaddr.go",
+        "sockaddrs.go",
+        "unixsock.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/go-sockaddr",
+    importpath = "github.com/hashicorp/go-sockaddr",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-sockaddr",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/golang-lru/simplelru/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "simplelru",
+    srcs = [
+        "lru.go",
+        "lru_interface.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/golang-lru/simplelru",
+    importpath = "github.com/hashicorp/golang-lru/simplelru",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":simplelru",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/memberlist/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "memberlist",
+    srcs = [
+        "alive_delegate.go",
+        "awareness.go",
+        "broadcast.go",
+        "config.go",
+        "conflict_delegate.go",
+        "delegate.go",
+        "event_delegate.go",
+        "keyring.go",
+        "logging.go",
+        "memberlist.go",
+        "merge_delegate.go",
+        "mock_transport.go",
+        "net.go",
+        "net_transport.go",
+        "ping_delegate.go",
+        "queue.go",
+        "security.go",
+        "state.go",
+        "suspicion.go",
+        "transport.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/memberlist",
+    importpath = "github.com/hashicorp/memberlist",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/armon/go-metrics",
+        "//vendor/github.com/hashicorp/go-msgpack/codec",
+        "//vendor/github.com/hashicorp/go-multierror",
+        "//vendor/github.com/hashicorp/go-sockaddr",
+        "//vendor/github.com/miekg/dns",
+        "//vendor/github.com/sean-/seed",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":memberlist",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/serf/coordinate/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "coordinate",
+    srcs = [
+        "client.go",
+        "config.go",
+        "coordinate.go",
+        "phantom.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/serf/coordinate",
+    importpath = "github.com/hashicorp/serf/coordinate",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":coordinate",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/hashicorp/serf/serf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "serf",
+    srcs = [
+        "broadcast.go",
+        "coalesce.go",
+        "coalesce_member.go",
+        "coalesce_user.go",
+        "config.go",
+        "conflict_delegate.go",
+        "delegate.go",
+        "event.go",
+        "event_delegate.go",
+        "internal_query.go",
+        "keymanager.go",
+        "lamport.go",
+        "merge_delegate.go",
+        "messages.go",
+        "ping_delegate.go",
+        "query.go",
+        "serf.go",
+        "snapshot.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/hashicorp/serf/serf",
+    importpath = "github.com/hashicorp/serf/serf",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/armon/go-metrics",
+        "//vendor/github.com/hashicorp/go-msgpack/codec",
+        "//vendor/github.com/hashicorp/memberlist",
+        "//vendor/github.com/hashicorp/serf/coordinate",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":serf",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/imdario/mergo/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mergo",
+    srcs = [
+        "doc.go",
+        "map.go",
+        "merge.go",
+        "mergo.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/imdario/mergo",
+    importpath = "github.com/imdario/mergo",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mergo",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/inconshreveable/mousetrap/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mousetrap",
+    srcs = [
+        "trap_others.go",
+        "trap_windows.go",
+        "trap_windows_1.4.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/inconshreveable/mousetrap",
+    importpath = "github.com/inconshreveable/mousetrap",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mousetrap",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/ishidawataru/sctp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sctp",
+    srcs = [
+        "ipsock_linux.go",
+        "sctp.go",
+        "sctp_linux.go",
+        "sctp_unsupported.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/ishidawataru/sctp",
+    importpath = "github.com/ishidawataru/sctp",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sctp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/jmespath/go-jmespath/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-jmespath",
+    srcs = [
+        "api.go",
+        "astnodetype_string.go",
+        "functions.go",
+        "interpreter.go",
+        "lexer.go",
+        "parser.go",
+        "toktype_string.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/jmespath/go-jmespath",
+    importpath = "github.com/jmespath/go-jmespath",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-jmespath",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/matttproud/golang_protobuf_extensions/pbutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pbutil",
+    srcs = [
+        "decode.go",
+        "doc.go",
+        "encode.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/matttproud/golang_protobuf_extensions/pbutil",
+    importpath = "github.com/matttproud/golang_protobuf_extensions/pbutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pbutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/miekg/dns/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,126 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dns",
+    srcs = [
+        "acceptfunc.go",
+        "client.go",
+        "clientconfig.go",
+        "dane.go",
+        "defaults.go",
+        "dns.go",
+        "dnssec.go",
+        "dnssec_keygen.go",
+        "dnssec_keyscan.go",
+        "dnssec_privkey.go",
+        "doc.go",
+        "duplicate.go",
+        "edns.go",
+        "format.go",
+        "generate.go",
+        "labels.go",
+        "listen_go111.go",
+        "listen_go_not111.go",
+        "msg.go",
+        "msg_helpers.go",
+        "msg_truncate.go",
+        "nsecx.go",
+        "privaterr.go",
+        "reverse.go",
+        "sanitize.go",
+        "scan.go",
+        "scan_rr.go",
+        "serve_mux.go",
+        "server.go",
+        "sig0.go",
+        "singleinflight.go",
+        "smimea.go",
+        "tlsa.go",
+        "tsig.go",
+        "types.go",
+        "udp.go",
+        "udp_windows.go",
+        "update.go",
+        "version.go",
+        "xfr.go",
+        "zduplicate.go",
+        "zmsg.go",
+        "ztypes.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/miekg/dns",
+    importpath = "github.com/miekg/dns",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/crypto/ed25519",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/net/ipv4",
+            "//vendor/golang.org/x/net/ipv6",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dns",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/mistifyio/go-zfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-zfs",
+    srcs = [
+        "error.go",
+        "utils.go",
+        "utils_notsolaris.go",
+        "utils_solaris.go",
+        "zfs.go",
+        "zpool.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/mistifyio/go-zfs",
+    importpath = "github.com/mistifyio/go-zfs",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/google/uuid"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-zfs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/mitchellh/hashstructure/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hashstructure",
+    srcs = [
+        "hashstructure.go",
+        "include.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/mitchellh/hashstructure",
+    importpath = "github.com/mitchellh/hashstructure",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hashstructure",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/api/services/control/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "control",
+    srcs = [
+        "control.pb.go",
+        "generate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/api/services/control",
+    importpath = "github.com/moby/buildkit/api/services/control",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+        "//vendor/github.com/moby/buildkit/api/types",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/entitlements",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":control",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/api/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "generate.go",
+        "worker.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/api/types",
+    importpath = "github.com/moby/buildkit/api/types",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/contenthash/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,95 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "contenthash",
+    srcs = [
+        "checksum.go",
+        "checksum.pb.go",
+        "filehash.go",
+        "filehash_unix.go",
+        "filehash_windows.go",
+        "generate.go",
+        "path.go",
+        "tarsum.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/contenthash",
+    importpath = "github.com/moby/buildkit/cache/contenthash",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/hashicorp/go-immutable-radix",
+        "//vendor/github.com/hashicorp/golang-lru/simplelru",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/fsutil",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":contenthash",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metadata",
+    srcs = ["metadata.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/metadata",
+    importpath = "github.com/moby/buildkit/cache/metadata",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metadata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/remotecache/inline/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "inline",
+    srcs = ["inline.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/remotecache/inline",
+    importpath = "github.com/moby/buildkit/cache/remotecache/inline",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/cache/remotecache/v1:remotecache",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":inline",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/remotecache/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "local",
+    srcs = ["local.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/remotecache/local",
+    importpath = "github.com/moby/buildkit/cache/remotecache/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/content",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/remotecache/registry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "registry",
+    srcs = ["registry.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/remotecache/registry",
+    importpath = "github.com/moby/buildkit/cache/remotecache/registry",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/util/contentutil",
+        "//vendor/github.com/moby/buildkit/util/resolver",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":registry",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/remotecache/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remotecache",
+    srcs = [
+        "cachestorage.go",
+        "chains.go",
+        "doc.go",
+        "parse.go",
+        "spec.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/remotecache/v1",
+    importpath = "github.com/moby/buildkit/cache/remotecache/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/moby/buildkit/exporter/containerimage/exptypes",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/util/contentutil",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remotecache",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/remotecache/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "remotecache",
+    srcs = [
+        "export.go",
+        "import.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/remotecache",
+    importpath = "github.com/moby/buildkit/cache/remotecache",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/moby/buildkit/cache/remotecache/v1:remotecache",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/util/compression",
+        "//vendor/github.com/moby/buildkit/util/contentutil",
+        "//vendor/github.com/moby/buildkit/util/imageutil",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/moby/buildkit/util/progress/logs",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":remotecache",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/util/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "util",
+    srcs = ["fsutil.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache/util",
+    importpath = "github.com/moby/buildkit/cache/util",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/fsutil",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":util",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cache/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,58 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cache",
+    srcs = [
+        "blobs.go",
+        "manager.go",
+        "metadata.go",
+        "migrate_v2.go",
+        "opts.go",
+        "refs.go",
+        "remote.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cache",
+    importpath = "github.com/moby/buildkit/cache",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/diff",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/filters",
+        "//vendor/github.com/containerd/containerd/gc",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/reference",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/util/compression",
+        "//vendor/github.com/moby/buildkit/util/contentutil",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/leaseutil",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/moby/buildkit/util/progress/logs",
+        "//vendor/github.com/moby/buildkit/util/pull/pullprogress",
+        "//vendor/github.com/moby/buildkit/util/winlayers",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/identity",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cache",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/client/buildid/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "buildid",
+    srcs = ["metadata.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/client/buildid",
+    importpath = "github.com/moby/buildkit/client/buildid",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc/metadata"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":buildid",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/client/connhelper/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "connhelper",
+    srcs = ["connhelper.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/client/connhelper",
+    importpath = "github.com/moby/buildkit/client/connhelper",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":connhelper",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/client/llb/imagemetaresolver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "imagemetaresolver",
+    srcs = ["resolver.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/client/llb/imagemetaresolver",
+    importpath = "github.com/moby/buildkit/client/llb/imagemetaresolver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/util/contentutil",
+        "//vendor/github.com/moby/buildkit/util/imageutil",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":imagemetaresolver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/client/llb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "llb",
+    srcs = [
+        "async.go",
+        "definition.go",
+        "exec.go",
+        "fileop.go",
+        "marshal.go",
+        "meta.go",
+        "resolver.go",
+        "source.go",
+        "sourcemap.go",
+        "state.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/client/llb",
+    importpath = "github.com/moby/buildkit/client/llb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/google/shlex",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/sshutil",
+        "//vendor/github.com/moby/buildkit/util/system",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":llb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/client/ociindex/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ociindex",
+    srcs = ["ociindex.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/client/ociindex",
+    importpath = "github.com/moby/buildkit/client/ociindex",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gofrs/flock",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ociindex",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,68 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "build.go",
+        "client.go",
+        "client_unix.go",
+        "client_windows.go",
+        "diskusage.go",
+        "exporters.go",
+        "filter.go",
+        "graph.go",
+        "prune.go",
+        "solve.go",
+        "workers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/client",
+    importpath = "github.com/moby/buildkit/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/local",
+        "//vendor/github.com/containerd/containerd/defaults",
+        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware",
+        "//vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc",
+        "//vendor/github.com/moby/buildkit/api/services/control",
+        "//vendor/github.com/moby/buildkit/api/types",
+        "//vendor/github.com/moby/buildkit/client/buildid",
+        "//vendor/github.com/moby/buildkit/client/connhelper",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/client/ociindex",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/grpcclient",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/content",
+        "//vendor/github.com/moby/buildkit/session/filesync",
+        "//vendor/github.com/moby/buildkit/session/grpchijack",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/appdefaults",
+        "//vendor/github.com/moby/buildkit/util/entitlements",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/credentials",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Microsoft/go-winio",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/cmd/buildkitd/config/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "config",
+    srcs = [
+        "config.go",
+        "gcpolicy.go",
+        "gcpolicy_unix.go",
+        "gcpolicy_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/cmd/buildkitd/config",
+    importpath = "github.com/moby/buildkit/cmd/buildkitd/config",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/BurntSushi/toml"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":config",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/control/gateway/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gateway",
+    srcs = ["gateway.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/control/gateway",
+    importpath = "github.com/moby/buildkit/control/gateway",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/client/buildid",
+        "//vendor/github.com/moby/buildkit/frontend/gateway",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gateway",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/control/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "control",
+    srcs = ["control.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/control",
+    importpath = "github.com/moby/buildkit/control",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/api/services/control",
+        "//vendor/github.com/moby/buildkit/api/types",
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/control/gateway",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/grpchijack",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/imageutil",
+        "//vendor/github.com/moby/buildkit/util/throttle",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":control",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/executor/oci/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,140 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "oci",
+    srcs = [
+        "hosts.go",
+        "mounts.go",
+        "resolvconf.go",
+        "spec.go",
+        "spec_unix.go",
+        "spec_windows.go",
+        "user.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/executor/oci",
+    importpath = "github.com/moby/buildkit/executor/oci",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/containers",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/oci",
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/docker/libnetwork/resolvconf",
+        "//vendor/github.com/docker/libnetwork/types",
+        "//vendor/github.com/mitchellh/hashstructure",
+        "//vendor/github.com/moby/buildkit/executor",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/network",
+        "//vendor/github.com/opencontainers/runc/libcontainer/user",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/opencontainers/selinux/go-selinux",
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//profiles/seccomp",
+            "//vendor/github.com/moby/buildkit/solver/pb",
+            "//vendor/github.com/moby/buildkit/util/entitlements/security",
+            "//vendor/github.com/moby/buildkit/util/system",
+            "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/moby/buildkit/solver/pb",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":oci",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/executor/runcexecutor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "runcexecutor",
+    srcs = [
+        "executor.go",
+        "executor_common.go",
+        "executor_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/executor/runcexecutor",
+    importpath = "github.com/moby/buildkit/executor/runcexecutor",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/oci",
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/containerd/go-runc",
+        "//vendor/github.com/moby/buildkit/executor",
+        "//vendor/github.com/moby/buildkit/executor/oci",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/network",
+        "//vendor/github.com/moby/buildkit/util/rootless/specconv",
+        "//vendor/github.com/moby/buildkit/util/stack",
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/signal",
+            "//vendor/github.com/containerd/console",
+            "//vendor/golang.org/x/sync/errgroup",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/signal",
+            "//vendor/github.com/containerd/console",
+            "//vendor/golang.org/x/sync/errgroup",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":runcexecutor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/executor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "executor",
+    srcs = [
+        "executor.go",
+        "stubs.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/executor",
+    importpath = "github.com/moby/buildkit/executor",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":executor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/exporter/containerimage/exptypes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exptypes",
+    srcs = ["types.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/exporter/containerimage/exptypes",
+    importpath = "github.com/moby/buildkit/exporter/containerimage/exptypes",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":exptypes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/exporter/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "local",
+    srcs = ["export.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/exporter/local",
+    importpath = "github.com/moby/buildkit/exporter/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/filesync",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/tonistiigi/fsutil",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/golang.org/x/time/rate",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/exporter/tar/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tar",
+    srcs = ["export.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/exporter/tar",
+    importpath = "github.com/moby/buildkit/exporter/tar",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/filesync",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/tonistiigi/fsutil",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tar",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/exporter/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exporter",
+    srcs = ["exporter.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/exporter",
+    importpath = "github.com/moby/buildkit/exporter",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/moby/buildkit/cache"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":exporter",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/builder/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "builder",
+    srcs = [
+        "build.go",
+        "caps.go",
+        "subrequests.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/builder",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/builder",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/moby/buildkit/api/services/control",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/exporter/containerimage/exptypes",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/dockerfile2llb",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/dockerignore",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/moby/buildkit/frontend/subrequests",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/moby/buildkit/util/stack",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/grpc/codes",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":builder",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/command/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "command",
+    srcs = ["command.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/command",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/command",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":command",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/dockerfile2llb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,45 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dockerfile2llb",
+    srcs = [
+        "convert.go",
+        "convert_norunnetwork.go",
+        "convert_norunsecurity.go",
+        "convert_runmount.go",
+        "convert_secrets.go",
+        "convert_ssh.go",
+        "defaultshell.go",
+        "directives.go",
+        "image.go",
+        "platform.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/dockerfile2llb",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/dockerfile2llb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/strslice",
+        "//pkg/signal",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/docker/go-connections/nat",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/client/llb/imagemetaresolver",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/instructions",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/shell",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/system",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dockerfile2llb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/dockerignore/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dockerignore",
+    srcs = ["dockerignore.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/dockerignore",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/dockerignore",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dockerignore",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/instructions/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "instructions",
+    srcs = [
+        "bflag.go",
+        "commands.go",
+        "commands_runmount.go",
+        "commands_secrets.go",
+        "commands_ssh.go",
+        "errors_unix.go",
+        "errors_windows.go",
+        "parse.go",
+        "support.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/instructions",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/instructions",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/container",
+        "//api/types/strslice",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/command",
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":instructions",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/parser/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "parser",
+    srcs = [
+        "errors.go",
+        "line_parsers.go",
+        "parser.go",
+        "split_command.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/parser",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/parser",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/frontend/dockerfile/command",
+        "//vendor/github.com/moby/buildkit/util/stack",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":parser",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/dockerfile/shell/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "shell",
+    srcs = [
+        "equal_env_unix.go",
+        "equal_env_windows.go",
+        "lex.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/dockerfile/shell",
+    importpath = "github.com/moby/buildkit/frontend/dockerfile/shell",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":shell",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/gateway/client/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "client",
+    srcs = [
+        "client.go",
+        "result.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/gateway/client",
+    importpath = "github.com/moby/buildkit/frontend/gateway/client",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":client",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/gateway/forwarder/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "forwarder",
+    srcs = [
+        "forward.go",
+        "frontend.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/gateway/forwarder",
+    importpath = "github.com/moby/buildkit/frontend/gateway/forwarder",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/cache/util",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/frontend/gateway",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":forwarder",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/gateway/grpcclient/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpcclient",
+    srcs = ["client.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/gateway/grpcclient",
+    importpath = "github.com/moby/buildkit/frontend/gateway/grpcclient",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/googleapis/google/rpc",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpcclient",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/gateway/pb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pb",
+    srcs = [
+        "caps.go",
+        "gateway.pb.go",
+        "generate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/gateway/pb",
+    importpath = "github.com/moby/buildkit/frontend/gateway/pb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/googleapis/google/rpc",
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/moby/buildkit/api/types",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/apicaps/pb",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/gateway/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,61 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "gateway",
+    srcs = [
+        "container.go",
+        "gateway.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/gateway",
+    importpath = "github.com/moby/buildkit/frontend/gateway",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/gogo/googleapis/google/rpc",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+        "//vendor/github.com/moby/buildkit/api/types",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/util",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/executor",
+        "//vendor/github.com/moby/buildkit/exporter/containerimage/exptypes",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/mounts",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/moby/buildkit/util/stack",
+        "//vendor/github.com/moby/buildkit/util/system",
+        "//vendor/github.com/moby/buildkit/util/tracing",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/net/http2",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/health",
+        "//vendor/google.golang.org/grpc/health/grpc_health_v1",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":gateway",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/subrequests/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "subrequests",
+    srcs = [
+        "describe.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend/subrequests",
+    importpath = "github.com/moby/buildkit/frontend/subrequests",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/pb",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":subrequests",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/frontend/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "frontend",
+    srcs = [
+        "frontend.go",
+        "result.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/frontend",
+    importpath = "github.com/moby/buildkit/frontend",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/opencontainers/go-digest",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":frontend",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/identity/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "identity",
+    srcs = ["randomid.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/identity",
+    importpath = "github.com/moby/buildkit/identity",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":identity",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/auth/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "auth",
+    srcs = [
+        "auth.go",
+        "auth.pb.go",
+        "generate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/auth",
+    importpath = "github.com/moby/buildkit/session/auth",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/crypto/nacl/sign",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":auth",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/content/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "content",
+    srcs = [
+        "attachable.go",
+        "caller.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/content",
+    importpath = "github.com/moby/buildkit/session/content",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/api/services/content/v1:content",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/content/proxy",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/services/content/contentserver",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/metadata",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":content",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/filesync/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "filesync",
+    srcs = [
+        "diffcopy.go",
+        "filesync.go",
+        "filesync.pb.go",
+        "generate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/filesync",
+    importpath = "github.com/moby/buildkit/session/filesync",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/tonistiigi/fsutil",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":filesync",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/grpchijack/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpchijack",
+    srcs = [
+        "dial.go",
+        "hijack.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/grpchijack",
+    importpath = "github.com/moby/buildkit/session/grpchijack",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/api/services/control",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/metadata",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpchijack",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/secrets/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "secrets",
+    srcs = [
+        "generate.go",
+        "secrets.go",
+        "secrets.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/secrets",
+    importpath = "github.com/moby/buildkit/session/secrets",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":secrets",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/sshforward/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sshforward",
+    srcs = [
+        "copy.go",
+        "generate.go",
+        "ssh.go",
+        "ssh.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/sshforward",
+    importpath = "github.com/moby/buildkit/session/sshforward",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/golang.org/x/net/context",
+        "//vendor/golang.org/x/sync/errgroup",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sshforward",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/upload/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "upload",
+    srcs = [
+        "generate.go",
+        "upload.go",
+        "upload.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session/upload",
+    importpath = "github.com/moby/buildkit/session/upload",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":upload",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/session/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "session",
+    srcs = [
+        "group.go",
+        "grpc.go",
+        "manager.go",
+        "session.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/session",
+    importpath = "github.com/moby/buildkit/session",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware",
+        "//vendor/github.com/grpc-ecosystem/grpc-opentracing/go/otgrpc",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/net/http2",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/health",
+        "//vendor/google.golang.org/grpc/health/grpc_health_v1",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":session",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/snapshot/containerd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "containerd",
+    srcs = [
+        "content.go",
+        "snapshotter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/snapshot/containerd",
+    importpath = "github.com/moby/buildkit/snapshot/containerd",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/namespaces",
+        "//vendor/github.com/containerd/containerd/snapshots",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":containerd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/snapshot/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,71 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snapshot",
+    srcs = [
+        "localmounter.go",
+        "localmounter_unix.go",
+        "localmounter_windows.go",
+        "snapshotter.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/snapshot",
+    importpath = "github.com/moby/buildkit/snapshot",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/snapshots",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/containerd/containerd/errdefs",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":snapshot",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/bboltcachestorage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bboltcachestorage",
+    srcs = ["storage.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/bboltcachestorage",
+    importpath = "github.com/moby/buildkit/solver/bboltcachestorage",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bboltcachestorage",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/errdefs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errdefs",
+    srcs = [
+        "context.go",
+        "errdefs.pb.go",
+        "exit.go",
+        "fronetendcap.go",
+        "generate.go",
+        "op.go",
+        "solve.go",
+        "source.go",
+        "subrequest.go",
+        "vertex.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/errdefs",
+    importpath = "github.com/moby/buildkit/solver/errdefs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/jsonpb",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/google.golang.org/grpc/codes",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errdefs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/internal/pipe/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pipe",
+    srcs = ["pipe.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/internal/pipe",
+    importpath = "github.com/moby/buildkit/solver/internal/pipe",
+    visibility = ["//vendor/github.com/moby/buildkit/solver:__subpackages__"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pipe",
+    visibility = ["//vendor/github.com/moby/buildkit/solver:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/llbsolver/errdefs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errdefs",
+    srcs = [
+        "exec.go",
+        "file.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/llbsolver/errdefs",
+    importpath = "github.com/moby/buildkit/solver/llbsolver/errdefs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errdefs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/llbsolver/file/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,43 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "file",
+    srcs = [
+        "backend.go",
+        "refmanager.go",
+        "unpack.go",
+        "user_linux.go",
+        "user_nolinux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/llbsolver/file",
+    importpath = "github.com/moby/buildkit/solver/llbsolver/file",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/archive",
+        "//pkg/chrootarchive",
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/ops/fileoptypes",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/fsutil/copy",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/opencontainers/runc/libcontainer/user",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":file",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/llbsolver/mounts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mounts",
+    srcs = ["mount.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/llbsolver/mounts",
+    importpath = "github.com/moby/buildkit/solver/llbsolver/mounts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/sys",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/secrets",
+        "//vendor/github.com/moby/buildkit/session/sshforward",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/grpcerrors",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/google.golang.org/grpc/codes",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mounts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/llbsolver/ops/fileoptypes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fileoptypes",
+    srcs = ["types.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/llbsolver/ops/fileoptypes",
+    importpath = "github.com/moby/buildkit/solver/llbsolver/ops/fileoptypes",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fileoptypes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/llbsolver/ops/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,55 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ops",
+    srcs = [
+        "build.go",
+        "exec.go",
+        "exec_binfmt.go",
+        "file.go",
+        "source.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/llbsolver/ops",
+    importpath = "github.com/moby/buildkit/solver/llbsolver/ops",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/executor",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/frontend/gateway",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/file",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/mounts",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/ops/fileoptypes",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/archutil",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/progress/logs",
+        "//vendor/github.com/moby/buildkit/util/system",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/tonistiigi/fsutil/copy",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ops",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/llbsolver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,52 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "llbsolver",
+    srcs = [
+        "bridge.go",
+        "result.go",
+        "solver.go",
+        "vertex.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/llbsolver",
+    importpath = "github.com/moby/buildkit/solver/llbsolver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/mitchellh/hashstructure",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/contenthash",
+        "//vendor/github.com/moby/buildkit/cache/remotecache",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/control/gateway",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/exporter/containerimage/exptypes",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/frontend/gateway",
+        "//vendor/github.com/moby/buildkit/frontend/gateway/client",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/llbsolver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/compression",
+        "//vendor/github.com/moby/buildkit/util/entitlements",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/moby/buildkit/worker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":llbsolver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/pb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pb",
+    srcs = [
+        "attr.go",
+        "caps.go",
+        "const.go",
+        "generate.go",
+        "ops.pb.go",
+        "platform.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver/pb",
+    importpath = "github.com/moby/buildkit/solver/pb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+        "//vendor/github.com/moby/buildkit/util/apicaps",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/solver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "solver",
+    srcs = [
+        "cachekey.go",
+        "cachemanager.go",
+        "cacheopts.go",
+        "cachestorage.go",
+        "combinedcache.go",
+        "edge.go",
+        "exporter.go",
+        "index.go",
+        "jobs.go",
+        "memorycachestorage.go",
+        "progress.go",
+        "result.go",
+        "scheduler.go",
+        "types.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/solver",
+    importpath = "github.com/moby/buildkit/solver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver/errdefs",
+        "//vendor/github.com/moby/buildkit/solver/internal/pipe",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/cond",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/moby/buildkit/util/tracing",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/golang.org/x/sync/errgroup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":solver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/source/git/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "git",
+    srcs = [
+        "gitsource.go",
+        "gitsource_unix.go",
+        "gitsource_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/source/git",
+    importpath = "github.com/moby/buildkit/source/git",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/secrets",
+        "//vendor/github.com/moby/buildkit/session/sshforward",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/progress/logs",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":git",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/source/http/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "http",
+    srcs = [
+        "httpsource.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/source/http",
+    importpath = "github.com/moby/buildkit/source/http",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/upload",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/tracing",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/go.etcd.io/bbolt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":http",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/source/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "local",
+    srcs = ["local.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/source/local",
+    importpath = "github.com/moby/buildkit/source/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/contenthash",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/filesync",
+        "//vendor/github.com/moby/buildkit/snapshot",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/github.com/tonistiigi/fsutil",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/golang.org/x/time/rate",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/source/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "source",
+    srcs = [
+        "gitidentifier.go",
+        "identifier.go",
+        "manager.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/source",
+    importpath = "github.com/moby/buildkit/source",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/reference",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/solver/pb",
+        "//vendor/github.com/moby/buildkit/util/sshutil",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":source",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/apicaps/pb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pb",
+    srcs = [
+        "caps.pb.go",
+        "generate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/apicaps/pb",
+    importpath = "github.com/moby/buildkit/util/apicaps/pb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/gogoproto",
+        "//vendor/github.com/gogo/protobuf/proto",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/apicaps/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "apicaps",
+    srcs = ["caps.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/apicaps",
+    importpath = "github.com/moby/buildkit/util/apicaps",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/util/apicaps/pb",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":apicaps",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/appdefaults/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "appdefaults",
+    srcs = [
+        "appdefaults_unix.go",
+        "appdefaults_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/appdefaults",
+    importpath = "github.com/moby/buildkit/util/appdefaults",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":appdefaults",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/archutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "archutil",
+    srcs = [
+        "386_binary.go",
+        "386_check.go",
+        "386_check_386.go",
+        "amd64_binary.go",
+        "amd64_check.go",
+        "amd64_check_amd64.go",
+        "arm64_binary.go",
+        "arm64_check.go",
+        "arm64_check_arm64.go",
+        "arm_binary.go",
+        "arm_check.go",
+        "arm_check_arm.go",
+        "check_unix.go",
+        "check_windows.go",
+        "detect.go",
+        "ppc64le_binary.go",
+        "ppc64le_check.go",
+        "ppc64le_check_ppc64le.go",
+        "riscv64_binary.go",
+        "riscv64_check.go",
+        "riscv64_check_riscv64.go",
+        "s390x_binary.go",
+        "s390x_check.go",
+        "s390x_check_s390x.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/archutil",
+    importpath = "github.com/moby/buildkit/util/archutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":archutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/compression/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "compression",
+    srcs = ["compression.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/compression",
+    importpath = "github.com/moby/buildkit/util/compression",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":compression",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/cond/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cond",
+    srcs = ["cond.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/cond",
+    importpath = "github.com/moby/buildkit/util/cond",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cond",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/contentutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "contentutil",
+    srcs = [
+        "buffer.go",
+        "copy.go",
+        "fetcher.go",
+        "multiprovider.go",
+        "pusher.go",
+        "refs.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/contentutil",
+    importpath = "github.com/moby/buildkit/util/contentutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/moby/buildkit/util/resolver/retryhandler",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":contentutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/entitlements/security/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "security",
+    srcs = ["security_linux.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/entitlements/security",
+    importpath = "github.com/moby/buildkit/util/entitlements/security",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/containers",
+            "//vendor/github.com/containerd/containerd/oci",
+            "//vendor/github.com/containerd/containerd/sys",
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":security",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/entitlements/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "entitlements",
+    srcs = ["entitlements.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/entitlements",
+    importpath = "github.com/moby/buildkit/util/entitlements",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":entitlements",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/flightcontrol/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "flightcontrol",
+    srcs = ["flightcontrol.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/flightcontrol",
+    importpath = "github.com/moby/buildkit/util/flightcontrol",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":flightcontrol",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/grpcerrors/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpcerrors",
+    srcs = [
+        "grpcerrors.go",
+        "intercept.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/grpcerrors",
+    importpath = "github.com/moby/buildkit/util/grpcerrors",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/gogo/protobuf/types",
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+        "//vendor/github.com/moby/buildkit/util/stack",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpcerrors",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/imageutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "imageutil",
+    srcs = [
+        "config.go",
+        "schema1.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/imageutil",
+    importpath = "github.com/moby/buildkit/util/imageutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/platforms",
+        "//vendor/github.com/containerd/containerd/reference",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/moby/buildkit/util/leaseutil",
+        "//vendor/github.com/moby/buildkit/util/resolver/retryhandler",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":imageutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/leaseutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "leaseutil",
+    srcs = ["manager.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/leaseutil",
+    importpath = "github.com/moby/buildkit/util/leaseutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/leases",
+        "//vendor/github.com/containerd/containerd/namespaces",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":leaseutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/network/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,64 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "network",
+    srcs = [
+        "host.go",
+        "network.go",
+        "none.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/network",
+    importpath = "github.com/moby/buildkit/util/network",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/containerd/oci",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":network",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/progress/logs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logs",
+    srcs = ["logs.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/progress/logs",
+    importpath = "github.com/moby/buildkit/util/progress/logs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/identity",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/units",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/progress/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "progress",
+    srcs = [
+        "multireader.go",
+        "multiwriter.go",
+        "progress.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/progress",
+    importpath = "github.com/moby/buildkit/util/progress",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":progress",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/pull/pullprogress/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pullprogress",
+    srcs = ["progress.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/pull/pullprogress",
+    importpath = "github.com/moby/buildkit/util/pull/pullprogress",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/moby/buildkit/util/progress",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pullprogress",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/resolver/retryhandler/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "retryhandler",
+    srcs = ["retry.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/resolver/retryhandler",
+    importpath = "github.com/moby/buildkit/util/resolver/retryhandler",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":retryhandler",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/resolver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "resolver",
+    srcs = [
+        "authorizer.go",
+        "pool.go",
+        "resolver.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/resolver",
+    importpath = "github.com/moby/buildkit/util/resolver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/remotes",
+        "//vendor/github.com/containerd/containerd/remotes/docker",
+        "//vendor/github.com/containerd/containerd/remotes/docker/auth",
+        "//vendor/github.com/containerd/containerd/remotes/errors",
+        "//vendor/github.com/docker/distribution/reference",
+        "//vendor/github.com/moby/buildkit/cmd/buildkitd/config",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/session/auth",
+        "//vendor/github.com/moby/buildkit/source",
+        "//vendor/github.com/moby/buildkit/util/flightcontrol",
+        "//vendor/github.com/moby/buildkit/util/tracing",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":resolver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/rootless/specconv/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,76 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "specconv",
+    srcs = [
+        "specconv_linux.go",
+        "specconv_nonlinux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/rootless/specconv",
+    importpath = "github.com/moby/buildkit/util/rootless/specconv",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+            "//vendor/github.com/pkg/errors",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":specconv",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/sshutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sshutil",
+    srcs = [
+        "keyscan.go",
+        "transport_validation.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/sshutil",
+    importpath = "github.com/moby/buildkit/util/sshutil",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/crypto/ssh"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sshutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/stack/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stack",
+    srcs = [
+        "generate.go",
+        "stack.go",
+        "stack.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/stack",
+    importpath = "github.com/moby/buildkit/util/stack",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/typeurl",
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stack",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/system/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "system",
+    srcs = [
+        "path.go",
+        "path_unix.go",
+        "path_windows.go",
+        "seccomp_noseccomp.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/system",
+    importpath = "github.com/moby/buildkit/util/system",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":system",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/throttle/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "throttle",
+    srcs = ["throttle.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/throttle",
+    importpath = "github.com/moby/buildkit/util/throttle",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":throttle",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/tracing/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tracing",
+    srcs = [
+        "multispan.go",
+        "tracing.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/tracing",
+    importpath = "github.com/moby/buildkit/util/tracing",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opentracing-contrib/go-stdlib/nethttp",
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/opentracing/opentracing-go/ext",
+        "//vendor/github.com/opentracing/opentracing-go/log",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tracing",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/util/winlayers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "winlayers",
+    srcs = [
+        "applier.go",
+        "context.go",
+        "differ.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/util/winlayers",
+    importpath = "github.com/moby/buildkit/util/winlayers",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/archive",
+        "//vendor/github.com/containerd/containerd/archive/compression",
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/diff",
+        "//vendor/github.com/containerd/containerd/errdefs",
+        "//vendor/github.com/containerd/containerd/images",
+        "//vendor/github.com/containerd/containerd/log",
+        "//vendor/github.com/containerd/containerd/mount",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":winlayers",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/buildkit/worker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "worker",
+    srcs = [
+        "cacheresult.go",
+        "filter.go",
+        "result.go",
+        "worker.go",
+        "workercontroller.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/buildkit/worker",
+    importpath = "github.com/moby/buildkit/worker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/containerd/content",
+        "//vendor/github.com/containerd/containerd/filters",
+        "//vendor/github.com/moby/buildkit/cache",
+        "//vendor/github.com/moby/buildkit/cache/metadata",
+        "//vendor/github.com/moby/buildkit/client",
+        "//vendor/github.com/moby/buildkit/client/llb",
+        "//vendor/github.com/moby/buildkit/executor",
+        "//vendor/github.com/moby/buildkit/exporter",
+        "//vendor/github.com/moby/buildkit/frontend",
+        "//vendor/github.com/moby/buildkit/session",
+        "//vendor/github.com/moby/buildkit/solver",
+        "//vendor/github.com/moby/buildkit/util/compression",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:specs-go",
+        "//vendor/github.com/pkg/errors",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":worker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/ipvs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipvs",
+    srcs = [
+        "constants.go",
+        "doc.go",
+        "ipvs.go",
+        "netlink.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/ipvs",
+    importpath = "github.com/moby/ipvs",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vishvananda/netlink/nl",
+            "//vendor/github.com/vishvananda/netns",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/sirupsen/logrus",
+            "//vendor/github.com/vishvananda/netlink/nl",
+            "//vendor/github.com/vishvananda/netns",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipvs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/locker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "locker",
+    srcs = ["locker.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/locker",
+    importpath = "github.com/moby/locker",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":locker",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/sys/mount/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,75 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mount",
+    srcs = [
+        "doc.go",
+        "flags_bsd.go",
+        "flags_linux.go",
+        "flags_unix.go",
+        "mount_errors.go",
+        "mount_unix.go",
+        "mounter_bsd.go",
+        "mounter_linux.go",
+        "mounter_unsupported.go",
+        "sharedsubtree_linux.go",
+    ],
+    cgo = True,
+    importmap = "github.com/docker/docker/vendor/github.com/moby/sys/mount",
+    importpath = "github.com/moby/sys/mount",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/moby/sys/mountinfo",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mount",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/sys/mountinfo/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mountinfo",
+    srcs = [
+        "doc.go",
+        "mounted_linux.go",
+        "mounted_unix.go",
+        "mountinfo.go",
+        "mountinfo_bsd.go",
+        "mountinfo_filters.go",
+        "mountinfo_linux.go",
+        "mountinfo_unsupported.go",
+        "mountinfo_windows.go",
+    ],
+    cgo = True,
+    importmap = "github.com/docker/docker/vendor/github.com/moby/sys/mountinfo",
+    importpath = "github.com/moby/sys/mountinfo",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mountinfo",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/sys/symlink/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "symlink",
+    srcs = [
+        "doc.go",
+        "fs.go",
+        "fs_unix.go",
+        "fs_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/sys/symlink",
+    importpath = "github.com/moby/sys/symlink",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":symlink",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/term/windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "windows",
+    srcs = [
+        "ansi_reader.go",
+        "ansi_writer.go",
+        "console.go",
+        "doc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/term/windows",
+    importpath = "github.com/moby/term/windows",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/Azure/go-ansiterm",
+            "//vendor/github.com/Azure/go-ansiterm/winterm",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":windows",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/moby/term/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,72 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "term",
+    srcs = [
+        "ascii.go",
+        "proxy.go",
+        "tc.go",
+        "term.go",
+        "term_windows.go",
+        "termios.go",
+        "termios_bsd.go",
+        "termios_nonbsd.go",
+        "winsize.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/moby/term",
+    importpath = "github.com/moby/term",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/moby/term/windows",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":term",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/morikuni/aec/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "aec",
+    srcs = [
+        "aec.go",
+        "ansi.go",
+        "builder.go",
+        "sgr.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/morikuni/aec",
+    importpath = "github.com/morikuni/aec",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":aec",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/go-digest/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-digest",
+    srcs = [
+        "algorithm.go",
+        "digest.go",
+        "digester.go",
+        "doc.go",
+        "verifiers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/go-digest",
+    importpath = "github.com/opencontainers/go-digest",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-digest",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/image-spec/identity/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "identity",
+    srcs = [
+        "chainid.go",
+        "helpers.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/image-spec/identity",
+    importpath = "github.com/opencontainers/image-spec/identity",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/opencontainers/go-digest"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":identity",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/image-spec/specs-go/v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "specs-go",
+    srcs = [
+        "annotations.go",
+        "config.go",
+        "descriptor.go",
+        "index.go",
+        "layout.go",
+        "manifest.go",
+        "mediatype.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/image-spec/specs-go/v1",
+    importpath = "github.com/opencontainers/image-spec/specs-go/v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/opencontainers/image-spec/specs-go",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":specs-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/image-spec/specs-go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "specs-go",
+    srcs = [
+        "version.go",
+        "versioned.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/image-spec/specs-go",
+    importpath = "github.com/opencontainers/image-spec/specs-go",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":specs-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/apparmor/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "apparmor",
+    srcs = ["apparmor_disabled.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/apparmor",
+    importpath = "github.com/opencontainers/runc/libcontainer/apparmor",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":apparmor",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/cgroups/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cgroups",
+    srcs = [
+        "cgroups.go",
+        "cgroups_unsupported.go",
+        "stats.go",
+        "utils.go",
+        "v1_utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/cgroups",
+    importpath = "github.com/opencontainers/runc/libcontainer/cgroups",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/cyphar/filepath-securejoin",
+        "//vendor/golang.org/x/sys/unix",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cgroups",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/configs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,83 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "configs",
+    srcs = [
+        "blkio_device.go",
+        "cgroup_linux.go",
+        "cgroup_unsupported.go",
+        "config.go",
+        "config_linux.go",
+        "device.go",
+        "device_unix.go",
+        "device_windows.go",
+        "hugepage_limit.go",
+        "intelrdt.go",
+        "interface_priority_map.go",
+        "mount.go",
+        "namespaces.go",
+        "namespaces_linux.go",
+        "namespaces_syscall.go",
+        "namespaces_syscall_unsupported.go",
+        "namespaces_unsupported.go",
+        "network.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/configs",
+    importpath = "github.com/opencontainers/runc/libcontainer/configs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/runtime-spec/specs-go",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/coreos/go-systemd/v22/dbus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/coreos/go-systemd/v22/dbus",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":configs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/devices/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "devices",
+    srcs = ["devices.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/devices",
+    importpath = "github.com/opencontainers/runc/libcontainer/devices",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/runc/libcontainer/configs",
+        "//vendor/golang.org/x/sys/unix",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":devices",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/nsenter/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nsenter",
+    srcs = [
+        "cloned_binary.c",
+        "namespace.h",
+        "nsenter.go",
+        "nsenter_unsupported.go",
+        "nsexec.c",
+    ],
+    cgo = True,
+    copts = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "-Wall",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "-Wall",
+        ],
+        "//conditions:default": [],
+    }),
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/nsenter",
+    importpath = "github.com/opencontainers/runc/libcontainer/nsenter",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":nsenter",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/user/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,51 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "user",
+    srcs = [
+        "lookup.go",
+        "lookup_unix.go",
+        "lookup_windows.go",
+        "user.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/user",
+    importpath = "github.com/opencontainers/runc/libcontainer/user",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":user",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runc/libcontainer/utils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "utils",
+    srcs = [
+        "cmsg.go",
+        "utils.go",
+        "utils_unix.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runc/libcontainer/utils",
+    importpath = "github.com/opencontainers/runc/libcontainer/utils",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/sys/unix"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":utils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/runtime-spec/specs-go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "specs-go",
+    srcs = [
+        "config.go",
+        "state.go",
+        "version.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/runtime-spec/specs-go",
+    importpath = "github.com/opencontainers/runtime-spec/specs-go",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":specs-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/selinux/go-selinux/label/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "label",
+    srcs = [
+        "label.go",
+        "label_linux.go",
+        "label_stub.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/selinux/go-selinux/label",
+    importpath = "github.com/opencontainers/selinux/go-selinux/label",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opencontainers/selinux/go-selinux",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/pkg/errors",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":label",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/selinux/go-selinux/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,37 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go-selinux",
+    srcs = [
+        "doc.go",
+        "selinux.go",
+        "selinux_linux.go",
+        "selinux_stub.go",
+        "xattrs_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/selinux/go-selinux",
+    importpath = "github.com/opencontainers/selinux/go-selinux",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/opencontainers/selinux/pkg/pwalk",
+            "//vendor/github.com/willf/bitset",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/opencontainers/selinux/pkg/pwalk",
+            "//vendor/github.com/willf/bitset",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go-selinux",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opencontainers/selinux/pkg/pwalk/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pwalk",
+    srcs = ["pwalk.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/opencontainers/selinux/pkg/pwalk",
+    importpath = "github.com/opencontainers/selinux/pkg/pwalk",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pwalk",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opentracing/opentracing-go/ext/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ext",
+    srcs = [
+        "field.go",
+        "tags.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opentracing/opentracing-go/ext",
+    importpath = "github.com/opentracing/opentracing-go/ext",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/opentracing/opentracing-go/log",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ext",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opentracing/opentracing-go/log/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "log",
+    srcs = [
+        "field.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opentracing/opentracing-go/log",
+    importpath = "github.com/opentracing/opentracing-go/log",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":log",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opentracing/opentracing-go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "opentracing-go",
+    srcs = [
+        "ext.go",
+        "globaltracer.go",
+        "gocontext.go",
+        "noop.go",
+        "propagation.go",
+        "span.go",
+        "tracer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opentracing/opentracing-go",
+    importpath = "github.com/opentracing/opentracing-go",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/opentracing/opentracing-go/log"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":opentracing-go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/opentracing-contrib/go-stdlib/nethttp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nethttp",
+    srcs = [
+        "client.go",
+        "doc.go",
+        "server.go",
+        "status-code-tracker.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/opentracing-contrib/go-stdlib/nethttp",
+    importpath = "github.com/opentracing-contrib/go-stdlib/nethttp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/opentracing/opentracing-go",
+        "//vendor/github.com/opentracing/opentracing-go/ext",
+        "//vendor/github.com/opentracing/opentracing-go/log",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":nethttp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/philhofer/fwd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fwd",
+    srcs = [
+        "reader.go",
+        "writer.go",
+        "writer_unsafe.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/philhofer/fwd",
+    importpath = "github.com/philhofer/fwd",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fwd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/pkg/errors/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errors",
+    srcs = [
+        "errors.go",
+        "go113.go",
+        "stack.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/pkg/errors",
+    importpath = "github.com/pkg/errors",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errors",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/client_golang/prometheus/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["metric.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/client_golang/prometheus/internal",
+    importpath = "github.com/prometheus/client_golang/prometheus/internal",
+    visibility = ["//vendor/github.com/prometheus/client_golang/prometheus:__subpackages__"],
+    deps = ["//vendor/github.com/prometheus/client_model/go"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/github.com/prometheus/client_golang/prometheus:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/client_golang/prometheus/promhttp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "promhttp",
+    srcs = [
+        "delegator.go",
+        "http.go",
+        "instrument_client.go",
+        "instrument_server.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/client_golang/prometheus/promhttp",
+    importpath = "github.com/prometheus/client_golang/prometheus/promhttp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/prometheus/client_golang/prometheus",
+        "//vendor/github.com/prometheus/client_model/go",
+        "//vendor/github.com/prometheus/common/expfmt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":promhttp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/client_golang/prometheus/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,95 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "prometheus",
+    srcs = [
+        "build_info.go",
+        "build_info_pre_1.12.go",
+        "collector.go",
+        "counter.go",
+        "desc.go",
+        "doc.go",
+        "expvar_collector.go",
+        "fnv.go",
+        "gauge.go",
+        "go_collector.go",
+        "histogram.go",
+        "labels.go",
+        "metric.go",
+        "observer.go",
+        "process_collector.go",
+        "process_collector_other.go",
+        "process_collector_windows.go",
+        "registry.go",
+        "summary.go",
+        "timer.go",
+        "untyped.go",
+        "value.go",
+        "vec.go",
+        "wrap.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/client_golang/prometheus",
+    importpath = "github.com/prometheus/client_golang/prometheus",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/beorn7/perks/quantile",
+        "//vendor/github.com/cespare/xxhash/v2:xxhash",
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes",
+        "//vendor/github.com/prometheus/client_golang/prometheus/internal",
+        "//vendor/github.com/prometheus/client_model/go",
+        "//vendor/github.com/prometheus/common/expfmt",
+        "//vendor/github.com/prometheus/common/model",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/prometheus/procfs",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":prometheus",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/client_model/go/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go",
+    srcs = ["metrics.pb.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/client_model/go",
+    importpath = "github.com/prometheus/client_model/go",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/common/expfmt/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "expfmt",
+    srcs = [
+        "decode.go",
+        "encode.go",
+        "expfmt.go",
+        "openmetrics_create.go",
+        "text_create.go",
+        "text_parse.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/common/expfmt",
+    importpath = "github.com/prometheus/common/expfmt",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes",
+        "//vendor/github.com/matttproud/golang_protobuf_extensions/pbutil",
+        "//vendor/github.com/prometheus/client_model/go",
+        "//vendor/github.com/prometheus/common/internal/bitbucket.org/ww/goautoneg",
+        "//vendor/github.com/prometheus/common/model",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":expfmt",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/common/internal/bitbucket.org/ww/goautoneg/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "goautoneg",
+    srcs = ["autoneg.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/common/internal/bitbucket.org/ww/goautoneg",
+    importpath = "github.com/prometheus/common/internal/bitbucket.org/ww/goautoneg",
+    visibility = ["//vendor/github.com/prometheus/common:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":goautoneg",
+    visibility = ["//vendor/github.com/prometheus/common:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/common/model/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "model",
+    srcs = [
+        "alert.go",
+        "fingerprinting.go",
+        "fnv.go",
+        "labels.go",
+        "labelset.go",
+        "metric.go",
+        "model.go",
+        "signature.go",
+        "silence.go",
+        "time.go",
+        "value.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/common/model",
+    importpath = "github.com/prometheus/common/model",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":model",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/procfs/internal/fs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fs",
+    srcs = ["fs.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/procfs/internal/fs",
+    importpath = "github.com/prometheus/procfs/internal/fs",
+    visibility = ["//vendor/github.com/prometheus/procfs:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fs",
+    visibility = ["//vendor/github.com/prometheus/procfs:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/procfs/internal/util/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "util",
+    srcs = [
+        "parse.go",
+        "readfile.go",
+        "sysreadfile.go",
+        "sysreadfile_compat.go",
+        "valueparser.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/procfs/internal/util",
+    importpath = "github.com/prometheus/procfs/internal/util",
+    visibility = ["//vendor/github.com/prometheus/procfs:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":util",
+    visibility = ["//vendor/github.com/prometheus/procfs:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/prometheus/procfs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,96 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "procfs",
+    srcs = [
+        "arp.go",
+        "buddyinfo.go",
+        "cpuinfo.go",
+        "crypto.go",
+        "doc.go",
+        "fs.go",
+        "ipvs.go",
+        "loadavg.go",
+        "mdstat.go",
+        "meminfo.go",
+        "mountinfo.go",
+        "mountstats.go",
+        "net_conntrackstat.go",
+        "net_dev.go",
+        "net_sockstat.go",
+        "net_softnet.go",
+        "net_udp.go",
+        "net_unix.go",
+        "proc.go",
+        "proc_environ.go",
+        "proc_fdinfo.go",
+        "proc_io.go",
+        "proc_limits.go",
+        "proc_maps.go",
+        "proc_ns.go",
+        "proc_psi.go",
+        "proc_stat.go",
+        "proc_status.go",
+        "schedstat.go",
+        "stat.go",
+        "swaps.go",
+        "vm.go",
+        "xfrm.go",
+        "zoneinfo.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/prometheus/procfs",
+    importpath = "github.com/prometheus/procfs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/prometheus/procfs/internal/fs",
+        "//vendor/github.com/prometheus/procfs/internal/util",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":procfs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/samuel/go-zookeeper/zk/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "zk",
+    srcs = [
+        "conn.go",
+        "constants.go",
+        "flw.go",
+        "lock.go",
+        "server_help.go",
+        "server_java.go",
+        "structs.go",
+        "tracer.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/samuel/go-zookeeper/zk",
+    importpath = "github.com/samuel/go-zookeeper/zk",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":zk",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/sean-/seed/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "seed",
+    srcs = ["init.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/sean-/seed",
+    importpath = "github.com/sean-/seed",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":seed",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/sirupsen/logrus/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,72 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logrus",
+    srcs = [
+        "alt_exit.go",
+        "buffer_pool.go",
+        "doc.go",
+        "entry.go",
+        "exported.go",
+        "formatter.go",
+        "hooks.go",
+        "json_formatter.go",
+        "logger.go",
+        "logrus.go",
+        "terminal_check_bsd.go",
+        "terminal_check_js.go",
+        "terminal_check_no_terminal.go",
+        "terminal_check_notappengine.go",
+        "terminal_check_solaris.go",
+        "terminal_check_unix.go",
+        "terminal_check_windows.go",
+        "text_formatter.go",
+        "writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/sirupsen/logrus",
+    importpath = "github.com/sirupsen/logrus",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logrus",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/spf13/cobra/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cobra",
+    srcs = [
+        "args.go",
+        "bash_completions.go",
+        "cobra.go",
+        "command.go",
+        "command_notwin.go",
+        "command_win.go",
+        "custom_completions.go",
+        "fish_completions.go",
+        "powershell_completions.go",
+        "shell_completions.go",
+        "zsh_completions.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/spf13/cobra",
+    importpath = "github.com/spf13/cobra",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/spf13/pflag",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/inconshreveable/mousetrap",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cobra",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/spf13/pflag/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pflag",
+    srcs = [
+        "bool.go",
+        "bool_slice.go",
+        "bytes.go",
+        "count.go",
+        "duration.go",
+        "duration_slice.go",
+        "flag.go",
+        "float32.go",
+        "float32_slice.go",
+        "float64.go",
+        "float64_slice.go",
+        "golangflag.go",
+        "int.go",
+        "int16.go",
+        "int32.go",
+        "int32_slice.go",
+        "int64.go",
+        "int64_slice.go",
+        "int8.go",
+        "int_slice.go",
+        "ip.go",
+        "ip_slice.go",
+        "ipmask.go",
+        "ipnet.go",
+        "string.go",
+        "string_array.go",
+        "string_slice.go",
+        "string_to_int.go",
+        "string_to_int64.go",
+        "string_to_string.go",
+        "uint.go",
+        "uint16.go",
+        "uint32.go",
+        "uint64.go",
+        "uint8.go",
+        "uint_slice.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/spf13/pflag",
+    importpath = "github.com/spf13/pflag",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pflag",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/syndtr/gocapability/capability/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "capability",
+    srcs = [
+        "capability.go",
+        "capability_linux.go",
+        "capability_noop.go",
+        "enum.go",
+        "enum_gen.go",
+        "syscall_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/syndtr/gocapability/capability",
+    importpath = "github.com/syndtr/gocapability/capability",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":capability",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/tchap/go-patricia/patricia/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "patricia",
+    srcs = [
+        "children.go",
+        "patricia.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/tchap/go-patricia/patricia",
+    importpath = "github.com/tchap/go-patricia/patricia",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":patricia",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/tinylib/msgp/msgp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "msgp",
+    srcs = [
+        "advise_linux.go",
+        "advise_other.go",
+        "circular.go",
+        "defs.go",
+        "edit.go",
+        "elsize.go",
+        "errors.go",
+        "extension.go",
+        "file.go",
+        "file_port.go",
+        "integers.go",
+        "json.go",
+        "json_bytes.go",
+        "number.go",
+        "read.go",
+        "read_bytes.go",
+        "size.go",
+        "unsafe.go",
+        "write.go",
+        "write_bytes.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/tinylib/msgp/msgp",
+    importpath = "github.com/tinylib/msgp/msgp",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/philhofer/fwd"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":msgp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/tonistiigi/fsutil/copy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,89 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "copy",
+    srcs = [
+        "copy.go",
+        "copy_darwin.go",
+        "copy_linux.go",
+        "copy_nowindows.go",
+        "copy_unix.go",
+        "copy_windows.go",
+        "hardlink.go",
+        "hardlink_unix.go",
+        "hardlink_windows.go",
+        "mkdir.go",
+        "mkdir_unix.go",
+        "mkdir_windows.go",
+        "stat_bsd.go",
+        "stat_sysv.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/tonistiigi/fsutil/copy",
+    importpath = "github.com/tonistiigi/fsutil/copy",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/containerd/continuity/fs",
+        "//vendor/github.com/pkg/errors",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":copy",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/tonistiigi/fsutil/types/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = [
+        "generate.go",
+        "stat.go",
+        "stat.pb.go",
+        "wire.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/tonistiigi/fsutil/types",
+    importpath = "github.com/tonistiigi/fsutil/types",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/gogo/protobuf/proto",
+        "//vendor/github.com/gogo/protobuf/sortkeys",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":types",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/tonistiigi/fsutil/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,85 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fsutil",
+    srcs = [
+        "chtimes_linux.go",
+        "chtimes_nolinux.go",
+        "diff.go",
+        "diff_containerd.go",
+        "diskwriter.go",
+        "diskwriter_unix.go",
+        "diskwriter_windows.go",
+        "followlinks.go",
+        "fs.go",
+        "hardlinks.go",
+        "receive.go",
+        "send.go",
+        "stat.go",
+        "stat_unix.go",
+        "stat_windows.go",
+        "tarwriter.go",
+        "validator.go",
+        "walker.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/tonistiigi/fsutil",
+    importpath = "github.com/tonistiigi/fsutil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/fileutils",
+        "//vendor/github.com/opencontainers/go-digest",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/tonistiigi/fsutil/types",
+        "//vendor/golang.org/x/sync/errgroup",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/containerd/continuity/sysx",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/containerd/continuity/sysx",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fsutil",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/tonistiigi/units/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "units",
+    srcs = ["bytes.go"],
+    importmap = "github.com/docker/docker/vendor/github.com/tonistiigi/units",
+    importpath = "github.com/tonistiigi/units",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":units",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/ugorji/go/codec/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,43 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "codec",
+    srcs = [
+        "0doc.go",
+        "binc.go",
+        "cbor.go",
+        "decode.go",
+        "encode.go",
+        "fast-path.generated.go",
+        "gen-helper.generated.go",
+        "goversion_arrayof_gte_go15.go",
+        "goversion_arrayof_lt_go15.go",
+        "goversion_makemap_gte_go19.go",
+        "goversion_makemap_lt_go19.go",
+        "goversion_unexportedembeddedptr_gte_go110.go",
+        "goversion_unexportedembeddedptr_lt_go110.go",
+        "goversion_unsupported_lt_go14.go",
+        "goversion_vendor_eq_go15.go",
+        "goversion_vendor_eq_go16.go",
+        "goversion_vendor_gte_go17.go",
+        "goversion_vendor_lt_go15.go",
+        "helper.go",
+        "helper_internal.go",
+        "helper_not_unsafe.go",
+        "helper_unsafe.go",
+        "json.go",
+        "msgpack.go",
+        "rpc.go",
+        "simple.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/ugorji/go/codec",
+    importpath = "github.com/ugorji/go/codec",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":codec",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/vbatts/tar-split/archive/tar/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tar",
+    srcs = [
+        "common.go",
+        "format.go",
+        "reader.go",
+        "stat_actime1.go",
+        "stat_actime2.go",
+        "stat_unix.go",
+        "strconv.go",
+        "writer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/vbatts/tar-split/archive/tar",
+    importpath = "github.com/vbatts/tar-split/archive/tar",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tar",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/vbatts/tar-split/tar/asm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "asm",
+    srcs = [
+        "assemble.go",
+        "disassemble.go",
+        "doc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/vbatts/tar-split/tar/asm",
+    importpath = "github.com/vbatts/tar-split/tar/asm",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/vbatts/tar-split/archive/tar",
+        "//vendor/github.com/vbatts/tar-split/tar/storage",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":asm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/vbatts/tar-split/tar/storage/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "storage",
+    srcs = [
+        "doc.go",
+        "entry.go",
+        "getter.go",
+        "packer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/vbatts/tar-split/tar/storage",
+    importpath = "github.com/vbatts/tar-split/tar/storage",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":storage",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/vishvananda/netlink/nl/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nl",
+    srcs = [
+        "addr_linux.go",
+        "bridge_linux.go",
+        "conntrack_linux.go",
+        "devlink_linux.go",
+        "genetlink_linux.go",
+        "link_linux.go",
+        "mpls_linux.go",
+        "nl_linux.go",
+        "nl_unspecified.go",
+        "rdma_link_linux.go",
+        "route_linux.go",
+        "seg6_linux.go",
+        "seg6local_linux.go",
+        "syscall.go",
+        "tc_linux.go",
+        "xfrm_linux.go",
+        "xfrm_monitor_linux.go",
+        "xfrm_policy_linux.go",
+        "xfrm_state_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/vishvananda/netlink/nl",
+    importpath = "github.com/vishvananda/netlink/nl",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/vishvananda/netns",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/vishvananda/netns",
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":nl",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/vishvananda/netlink/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,114 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "netlink",
+    srcs = [
+        "addr.go",
+        "addr_linux.go",
+        "bpf_linux.go",
+        "bridge_linux.go",
+        "class.go",
+        "class_linux.go",
+        "conntrack_linux.go",
+        "conntrack_unspecified.go",
+        "devlink_linux.go",
+        "filter.go",
+        "filter_linux.go",
+        "fou.go",
+        "fou_linux.go",
+        "fou_unspecified.go",
+        "genetlink_linux.go",
+        "genetlink_unspecified.go",
+        "gtp_linux.go",
+        "handle_linux.go",
+        "handle_unspecified.go",
+        "ioctl_linux.go",
+        "link.go",
+        "link_linux.go",
+        "link_tuntap_linux.go",
+        "neigh.go",
+        "neigh_linux.go",
+        "netlink.go",
+        "netlink_linux.go",
+        "netlink_unspecified.go",
+        "netns_linux.go",
+        "netns_unspecified.go",
+        "order.go",
+        "protinfo.go",
+        "protinfo_linux.go",
+        "qdisc.go",
+        "qdisc_linux.go",
+        "rdma_link_linux.go",
+        "route.go",
+        "route_linux.go",
+        "route_unspecified.go",
+        "rule.go",
+        "rule_linux.go",
+        "socket.go",
+        "socket_linux.go",
+        "xfrm.go",
+        "xfrm_monitor_linux.go",
+        "xfrm_policy.go",
+        "xfrm_policy_linux.go",
+        "xfrm_state.go",
+        "xfrm_state_linux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/vishvananda/netlink",
+    importpath = "github.com/vishvananda/netlink",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/vishvananda/netlink/nl",
+        "//vendor/golang.org/x/sys/unix",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/github.com/vishvananda/netns",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":netlink",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/vishvananda/netns/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "netns",
+    srcs = [
+        "netns.go",
+        "netns_linux.go",
+        "netns_unspecified.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/vishvananda/netns",
+    importpath = "github.com/vishvananda/netns",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/sys/unix"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":netns",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/github.com/willf/bitset/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bitset",
+    srcs = [
+        "bitset.go",
+        "popcnt.go",
+        "popcnt_19.go",
+        "popcnt_amd64.go",
+        "popcnt_amd64.s",
+        "popcnt_generic.go",
+        "trailing_zeros_18.go",
+        "trailing_zeros_19.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/github.com/willf/bitset",
+    importpath = "github.com/willf/bitset",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bitset",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.etcd.io/bbolt/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,54 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bbolt",
+    srcs = [
+        "bolt_386.go",
+        "bolt_amd64.go",
+        "bolt_arm.go",
+        "bolt_arm64.go",
+        "bolt_linux.go",
+        "bolt_mips64x.go",
+        "bolt_mipsx.go",
+        "bolt_openbsd.go",
+        "bolt_ppc64.go",
+        "bolt_ppc64le.go",
+        "bolt_riscv64.go",
+        "bolt_s390x.go",
+        "bolt_unix.go",
+        "bolt_unix_aix.go",
+        "bolt_unix_solaris.go",
+        "bolt_windows.go",
+        "boltsync_unix.go",
+        "bucket.go",
+        "cursor.go",
+        "db.go",
+        "doc.go",
+        "errors.go",
+        "freelist.go",
+        "freelist_hmap.go",
+        "node.go",
+        "page.go",
+        "tx.go",
+        "unsafe.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.etcd.io/bbolt",
+    importpath = "go.etcd.io/bbolt",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bbolt",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/internal/tagencoding/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tagencoding",
+    srcs = ["tagencoding.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/internal/tagencoding",
+    importpath = "go.opencensus.io/internal/tagencoding",
+    visibility = ["//vendor/go.opencensus.io:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tagencoding",
+    visibility = ["//vendor/go.opencensus.io:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = [
+        "internal.go",
+        "sanitize.go",
+        "traceinternals.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/internal",
+    importpath = "go.opencensus.io/internal",
+    visibility = ["//vendor/go.opencensus.io:__subpackages__"],
+    deps = ["//vendor/go.opencensus.io"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/go.opencensus.io:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/metric/metricdata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metricdata",
+    srcs = [
+        "doc.go",
+        "exemplar.go",
+        "label.go",
+        "metric.go",
+        "point.go",
+        "type_string.go",
+        "unit.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/metric/metricdata",
+    importpath = "go.opencensus.io/metric/metricdata",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/go.opencensus.io/resource"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metricdata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/metric/metricproducer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metricproducer",
+    srcs = [
+        "manager.go",
+        "producer.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/metric/metricproducer",
+    importpath = "go.opencensus.io/metric/metricproducer",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/go.opencensus.io/metric/metricdata"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metricproducer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/plugin/ocgrpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ocgrpc",
+    srcs = [
+        "client.go",
+        "client_metrics.go",
+        "client_stats_handler.go",
+        "doc.go",
+        "server.go",
+        "server_metrics.go",
+        "server_stats_handler.go",
+        "stats_common.go",
+        "trace_common.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/plugin/ocgrpc",
+    importpath = "go.opencensus.io/plugin/ocgrpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/metric/metricdata",
+        "//vendor/go.opencensus.io/stats",
+        "//vendor/go.opencensus.io/stats/view",
+        "//vendor/go.opencensus.io/tag",
+        "//vendor/go.opencensus.io/trace",
+        "//vendor/go.opencensus.io/trace/propagation",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/stats",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ocgrpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/plugin/ochttp/propagation/b3/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b3",
+    srcs = ["b3.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/plugin/ochttp/propagation/b3",
+    importpath = "go.opencensus.io/plugin/ochttp/propagation/b3",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/trace",
+        "//vendor/go.opencensus.io/trace/propagation",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":b3",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/plugin/ochttp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ochttp",
+    srcs = [
+        "client.go",
+        "client_stats.go",
+        "doc.go",
+        "route.go",
+        "server.go",
+        "span_annotating_client_trace.go",
+        "stats.go",
+        "trace.go",
+        "wrapped_body.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/plugin/ochttp",
+    importpath = "go.opencensus.io/plugin/ochttp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/plugin/ochttp/propagation/b3",
+        "//vendor/go.opencensus.io/stats",
+        "//vendor/go.opencensus.io/stats/view",
+        "//vendor/go.opencensus.io/tag",
+        "//vendor/go.opencensus.io/trace",
+        "//vendor/go.opencensus.io/trace/propagation",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ochttp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/resource/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "resource",
+    srcs = ["resource.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/resource",
+    importpath = "go.opencensus.io/resource",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":resource",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/stats/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["record.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/stats/internal",
+    importpath = "go.opencensus.io/stats/internal",
+    visibility = ["//vendor/go.opencensus.io/stats:__subpackages__"],
+    deps = ["//vendor/go.opencensus.io/tag"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/go.opencensus.io/stats:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/stats/view/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "view",
+    srcs = [
+        "aggregation.go",
+        "aggregation_data.go",
+        "collector.go",
+        "doc.go",
+        "export.go",
+        "view.go",
+        "view_to_metric.go",
+        "worker.go",
+        "worker_commands.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/stats/view",
+    importpath = "go.opencensus.io/stats/view",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/internal/tagencoding",
+        "//vendor/go.opencensus.io/metric/metricdata",
+        "//vendor/go.opencensus.io/metric/metricproducer",
+        "//vendor/go.opencensus.io/stats",
+        "//vendor/go.opencensus.io/stats/internal",
+        "//vendor/go.opencensus.io/tag",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":view",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/stats/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "doc.go",
+        "measure.go",
+        "measure_float64.go",
+        "measure_int64.go",
+        "record.go",
+        "units.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/stats",
+    importpath = "go.opencensus.io/stats",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/metric/metricdata",
+        "//vendor/go.opencensus.io/stats/internal",
+        "//vendor/go.opencensus.io/tag",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stats",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/tag/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tag",
+    srcs = [
+        "context.go",
+        "doc.go",
+        "key.go",
+        "map.go",
+        "map_codec.go",
+        "metadata.go",
+        "profile_19.go",
+        "profile_not19.go",
+        "validate.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/tag",
+    importpath = "go.opencensus.io/tag",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tag",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/trace/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["internal.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/trace/internal",
+    importpath = "go.opencensus.io/trace/internal",
+    visibility = ["//vendor/go.opencensus.io/trace:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/go.opencensus.io/trace:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/trace/propagation/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "propagation",
+    srcs = ["propagation.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/trace/propagation",
+    importpath = "go.opencensus.io/trace/propagation",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/go.opencensus.io/trace"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":propagation",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/trace/tracestate/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tracestate",
+    srcs = ["tracestate.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/trace/tracestate",
+    importpath = "go.opencensus.io/trace/tracestate",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tracestate",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/trace/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "trace",
+    srcs = [
+        "basetypes.go",
+        "config.go",
+        "doc.go",
+        "evictedqueue.go",
+        "export.go",
+        "lrumap.go",
+        "sampling.go",
+        "spanbucket.go",
+        "spanstore.go",
+        "status_codes.go",
+        "trace.go",
+        "trace_go11.go",
+        "trace_nongo11.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io/trace",
+    importpath = "go.opencensus.io/trace",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/groupcache/lru",
+        "//vendor/go.opencensus.io/internal",
+        "//vendor/go.opencensus.io/trace/internal",
+        "//vendor/go.opencensus.io/trace/tracestate",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":trace",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/go.opencensus.io/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "go.opencensus.io",
+    srcs = ["opencensus.go"],
+    importmap = "github.com/docker/docker/vendor/go.opencensus.io",
+    importpath = "go.opencensus.io",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":go.opencensus.io",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/blowfish/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "blowfish",
+    srcs = [
+        "block.go",
+        "cipher.go",
+        "const.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/blowfish",
+    importpath = "golang.org/x/crypto/blowfish",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":blowfish",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/chacha20/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "chacha20",
+    srcs = [
+        "chacha_arm64.go",
+        "chacha_arm64.s",
+        "chacha_generic.go",
+        "chacha_noasm.go",
+        "chacha_ppc64le.go",
+        "chacha_ppc64le.s",
+        "chacha_s390x.go",
+        "chacha_s390x.s",
+        "xor.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/chacha20",
+    importpath = "golang.org/x/crypto/chacha20",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/crypto/internal/subtle",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:s390x": [
+            "//vendor/golang.org/x/sys/cpu",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":chacha20",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/cryptobyte/asn1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "asn1",
+    srcs = ["asn1.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/cryptobyte/asn1",
+    importpath = "golang.org/x/crypto/cryptobyte/asn1",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":asn1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/cryptobyte/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cryptobyte",
+    srcs = [
+        "asn1.go",
+        "builder.go",
+        "string.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/cryptobyte",
+    importpath = "golang.org/x/crypto/cryptobyte",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/crypto/cryptobyte/asn1"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cryptobyte",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/curve25519/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "curve25519",
+    srcs = [
+        "curve25519.go",
+        "curve25519_amd64.go",
+        "curve25519_amd64.s",
+        "curve25519_generic.go",
+        "curve25519_noasm.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/curve25519",
+    importpath = "golang.org/x/crypto/curve25519",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":curve25519",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/ed25519/internal/edwards25519/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "edwards25519",
+    srcs = [
+        "const.go",
+        "edwards25519.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/ed25519/internal/edwards25519",
+    importpath = "golang.org/x/crypto/ed25519/internal/edwards25519",
+    visibility = ["//vendor/golang.org/x/crypto/ed25519:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":edwards25519",
+    visibility = ["//vendor/golang.org/x/crypto/ed25519:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/ed25519/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ed25519",
+    srcs = [
+        "ed25519.go",
+        "ed25519_go113.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/ed25519",
+    importpath = "golang.org/x/crypto/ed25519",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/crypto/ed25519/internal/edwards25519"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ed25519",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/internal/subtle/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "subtle",
+    srcs = ["aliasing.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/internal/subtle",
+    importpath = "golang.org/x/crypto/internal/subtle",
+    visibility = ["//vendor/golang.org/x/crypto:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":subtle",
+    visibility = ["//vendor/golang.org/x/crypto:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/nacl/secretbox/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "secretbox",
+    srcs = ["secretbox.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/nacl/secretbox",
+    importpath = "golang.org/x/crypto/nacl/secretbox",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/crypto/internal/subtle",
+        "//vendor/golang.org/x/crypto/poly1305",
+        "//vendor/golang.org/x/crypto/salsa20/salsa",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":secretbox",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/nacl/sign/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sign",
+    srcs = ["sign.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/nacl/sign",
+    importpath = "golang.org/x/crypto/nacl/sign",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/crypto/ed25519",
+        "//vendor/golang.org/x/crypto/internal/subtle",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":sign",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/ocsp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ocsp",
+    srcs = ["ocsp.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/ocsp",
+    importpath = "golang.org/x/crypto/ocsp",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ocsp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/otr/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "otr",
+    srcs = [
+        "otr.go",
+        "smp.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/otr",
+    importpath = "golang.org/x/crypto/otr",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":otr",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/pbkdf2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pbkdf2",
+    srcs = ["pbkdf2.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/pbkdf2",
+    importpath = "golang.org/x/crypto/pbkdf2",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pbkdf2",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/pkcs12/internal/rc2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rc2",
+    srcs = ["rc2.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/pkcs12/internal/rc2",
+    importpath = "golang.org/x/crypto/pkcs12/internal/rc2",
+    visibility = ["//vendor/golang.org/x/crypto/pkcs12:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":rc2",
+    visibility = ["//vendor/golang.org/x/crypto/pkcs12:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/pkcs12/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkcs12",
+    srcs = [
+        "bmp-string.go",
+        "crypto.go",
+        "errors.go",
+        "mac.go",
+        "pbkdf.go",
+        "pkcs12.go",
+        "safebags.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/pkcs12",
+    importpath = "golang.org/x/crypto/pkcs12",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/crypto/pkcs12/internal/rc2"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":pkcs12",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/poly1305/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "poly1305",
+    srcs = [
+        "bits_compat.go",
+        "bits_go1.13.go",
+        "mac_noasm.go",
+        "poly1305.go",
+        "sum_amd64.go",
+        "sum_amd64.s",
+        "sum_generic.go",
+        "sum_ppc64le.go",
+        "sum_ppc64le.s",
+        "sum_s390x.go",
+        "sum_s390x.s",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/poly1305",
+    importpath = "golang.org/x/crypto/poly1305",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:s390x": [
+            "//vendor/golang.org/x/sys/cpu",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":poly1305",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/salsa20/salsa/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "salsa",
+    srcs = [
+        "hsalsa20.go",
+        "salsa208.go",
+        "salsa20_amd64.go",
+        "salsa20_amd64.s",
+        "salsa20_noasm.go",
+        "salsa20_ref.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/salsa20/salsa",
+    importpath = "golang.org/x/crypto/salsa20/salsa",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":salsa",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/ssh/internal/bcrypt_pbkdf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bcrypt_pbkdf",
+    srcs = ["bcrypt_pbkdf.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/ssh/internal/bcrypt_pbkdf",
+    importpath = "golang.org/x/crypto/ssh/internal/bcrypt_pbkdf",
+    visibility = ["//vendor/golang.org/x/crypto/ssh:__subpackages__"],
+    deps = ["//vendor/golang.org/x/crypto/blowfish"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bcrypt_pbkdf",
+    visibility = ["//vendor/golang.org/x/crypto/ssh:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/ssh/test/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "test",
+    srcs = ["doc.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/ssh/test",
+    importpath = "golang.org/x/crypto/ssh/test",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":test",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/crypto/ssh/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,45 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ssh",
+    srcs = [
+        "buffer.go",
+        "certs.go",
+        "channel.go",
+        "cipher.go",
+        "client.go",
+        "client_auth.go",
+        "common.go",
+        "connection.go",
+        "doc.go",
+        "handshake.go",
+        "kex.go",
+        "keys.go",
+        "mac.go",
+        "messages.go",
+        "mux.go",
+        "server.go",
+        "session.go",
+        "ssh_gss.go",
+        "streamlocal.go",
+        "tcpip.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/crypto/ssh",
+    importpath = "golang.org/x/crypto/ssh",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/crypto/chacha20",
+        "//vendor/golang.org/x/crypto/curve25519",
+        "//vendor/golang.org/x/crypto/ed25519",
+        "//vendor/golang.org/x/crypto/poly1305",
+        "//vendor/golang.org/x/crypto/ssh/internal/bcrypt_pbkdf",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ssh",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/bpf/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bpf",
+    srcs = [
+        "asm.go",
+        "constants.go",
+        "doc.go",
+        "instructions.go",
+        "setter.go",
+        "vm.go",
+        "vm_instructions.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/bpf",
+    importpath = "golang.org/x/net/bpf",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bpf",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/context/ctxhttp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ctxhttp",
+    srcs = ["ctxhttp.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/context/ctxhttp",
+    importpath = "golang.org/x/net/context/ctxhttp",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ctxhttp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/context/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "context",
+    srcs = [
+        "context.go",
+        "go17.go",
+        "go19.go",
+        "pre_go17.go",
+        "pre_go19.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/context",
+    importpath = "golang.org/x/net/context",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":context",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/http/httpguts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "httpguts",
+    srcs = [
+        "guts.go",
+        "httplex.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/http/httpguts",
+    importpath = "golang.org/x/net/http/httpguts",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/net/idna"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":httpguts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/http2/hpack/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "hpack",
+    srcs = [
+        "encode.go",
+        "hpack.go",
+        "huffman.go",
+        "tables.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/http2/hpack",
+    importpath = "golang.org/x/net/http2/hpack",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":hpack",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/http2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "http2",
+    srcs = [
+        "ciphers.go",
+        "client_conn_pool.go",
+        "databuffer.go",
+        "errors.go",
+        "flow.go",
+        "frame.go",
+        "go111.go",
+        "gotrack.go",
+        "headermap.go",
+        "http2.go",
+        "not_go111.go",
+        "pipe.go",
+        "server.go",
+        "transport.go",
+        "write.go",
+        "writesched.go",
+        "writesched_priority.go",
+        "writesched_random.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/http2",
+    importpath = "golang.org/x/net/http2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/net/http/httpguts",
+        "//vendor/golang.org/x/net/http2/hpack",
+        "//vendor/golang.org/x/net/idna",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":http2",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/idna/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "idna",
+    srcs = [
+        "idna10.0.0.go",
+        "idna9.0.0.go",
+        "punycode.go",
+        "tables10.0.0.go",
+        "tables11.0.0.go",
+        "tables12.00.go",
+        "tables9.0.0.go",
+        "trie.go",
+        "trieval.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/idna",
+    importpath = "golang.org/x/net/idna",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/text/secure/bidirule",
+        "//vendor/golang.org/x/text/unicode/bidi",
+        "//vendor/golang.org/x/text/unicode/norm",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":idna",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/internal/iana/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "iana",
+    srcs = ["const.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/internal/iana",
+    importpath = "golang.org/x/net/internal/iana",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":iana",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/internal/socket/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,145 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "socket",
+    srcs = [
+        "cmsghdr.go",
+        "cmsghdr_bsd.go",
+        "cmsghdr_linux_32bit.go",
+        "cmsghdr_linux_64bit.go",
+        "cmsghdr_solaris_64bit.go",
+        "cmsghdr_stub.go",
+        "empty.s",
+        "error_unix.go",
+        "error_windows.go",
+        "iovec_32bit.go",
+        "iovec_64bit.go",
+        "iovec_solaris_64bit.go",
+        "iovec_stub.go",
+        "mmsghdr_stub.go",
+        "mmsghdr_unix.go",
+        "msghdr_bsd.go",
+        "msghdr_bsdvar.go",
+        "msghdr_linux.go",
+        "msghdr_linux_32bit.go",
+        "msghdr_linux_64bit.go",
+        "msghdr_openbsd.go",
+        "msghdr_solaris_64bit.go",
+        "msghdr_stub.go",
+        "norace.go",
+        "race.go",
+        "rawconn.go",
+        "rawconn_mmsg.go",
+        "rawconn_msg.go",
+        "rawconn_nommsg.go",
+        "rawconn_nomsg.go",
+        "socket.go",
+        "sys.go",
+        "sys_bsd.go",
+        "sys_bsdvar.go",
+        "sys_const_unix.go",
+        "sys_darwin.go",
+        "sys_dragonfly.go",
+        "sys_go1_11_darwin.go",
+        "sys_linkname.go",
+        "sys_linux.go",
+        "sys_linux_386.go",
+        "sys_linux_386.s",
+        "sys_linux_amd64.go",
+        "sys_linux_arm.go",
+        "sys_linux_arm64.go",
+        "sys_linux_mips.go",
+        "sys_linux_mips64.go",
+        "sys_linux_mips64le.go",
+        "sys_linux_mipsle.go",
+        "sys_linux_ppc64.go",
+        "sys_linux_ppc64le.go",
+        "sys_linux_riscv64.go",
+        "sys_linux_s390x.go",
+        "sys_linux_s390x.s",
+        "sys_netbsd.go",
+        "sys_posix.go",
+        "sys_solaris.go",
+        "sys_solaris_amd64.s",
+        "sys_stub.go",
+        "sys_unix.go",
+        "sys_windows.go",
+        "zsys_aix_ppc64.go",
+        "zsys_darwin_386.go",
+        "zsys_darwin_amd64.go",
+        "zsys_darwin_arm.go",
+        "zsys_darwin_arm64.go",
+        "zsys_dragonfly_amd64.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_freebsd_arm64.go",
+        "zsys_linux_386.go",
+        "zsys_linux_amd64.go",
+        "zsys_linux_arm.go",
+        "zsys_linux_arm64.go",
+        "zsys_linux_mips.go",
+        "zsys_linux_mips64.go",
+        "zsys_linux_mips64le.go",
+        "zsys_linux_mipsle.go",
+        "zsys_linux_ppc64.go",
+        "zsys_linux_ppc64le.go",
+        "zsys_linux_riscv64.go",
+        "zsys_linux_s390x.go",
+        "zsys_netbsd_386.go",
+        "zsys_netbsd_amd64.go",
+        "zsys_netbsd_arm.go",
+        "zsys_netbsd_arm64.go",
+        "zsys_openbsd_386.go",
+        "zsys_openbsd_amd64.go",
+        "zsys_openbsd_arm.go",
+        "zsys_openbsd_arm64.go",
+        "zsys_solaris_amd64.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/internal/socket",
+    importpath = "golang.org/x/net/internal/socket",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":socket",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/internal/socks/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "socks",
+    srcs = [
+        "client.go",
+        "socks.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/internal/socks",
+    importpath = "golang.org/x/net/internal/socks",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":socks",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/internal/timeseries/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "timeseries",
+    srcs = ["timeseries.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/internal/timeseries",
+    importpath = "golang.org/x/net/internal/timeseries",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":timeseries",
+    visibility = ["//vendor/golang.org/x/net:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/ipv4/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,94 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipv4",
+    srcs = [
+        "batch.go",
+        "control.go",
+        "control_bsd.go",
+        "control_pktinfo.go",
+        "control_stub.go",
+        "control_unix.go",
+        "control_windows.go",
+        "dgramopt.go",
+        "doc.go",
+        "endpoint.go",
+        "genericopt.go",
+        "header.go",
+        "helper.go",
+        "iana.go",
+        "icmp.go",
+        "icmp_linux.go",
+        "icmp_stub.go",
+        "packet.go",
+        "payload.go",
+        "payload_cmsg.go",
+        "payload_nocmsg.go",
+        "sockopt.go",
+        "sockopt_posix.go",
+        "sockopt_stub.go",
+        "sys_aix.go",
+        "sys_asmreq.go",
+        "sys_asmreq_stub.go",
+        "sys_asmreqn.go",
+        "sys_asmreqn_stub.go",
+        "sys_bpf.go",
+        "sys_bpf_stub.go",
+        "sys_bsd.go",
+        "sys_darwin.go",
+        "sys_dragonfly.go",
+        "sys_freebsd.go",
+        "sys_linux.go",
+        "sys_solaris.go",
+        "sys_ssmreq.go",
+        "sys_ssmreq_stub.go",
+        "sys_stub.go",
+        "sys_windows.go",
+        "zsys_aix_ppc64.go",
+        "zsys_darwin.go",
+        "zsys_dragonfly.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_freebsd_arm64.go",
+        "zsys_linux_386.go",
+        "zsys_linux_amd64.go",
+        "zsys_linux_arm.go",
+        "zsys_linux_arm64.go",
+        "zsys_linux_mips.go",
+        "zsys_linux_mips64.go",
+        "zsys_linux_mips64le.go",
+        "zsys_linux_mipsle.go",
+        "zsys_linux_ppc.go",
+        "zsys_linux_ppc64.go",
+        "zsys_linux_ppc64le.go",
+        "zsys_linux_riscv64.go",
+        "zsys_linux_s390x.go",
+        "zsys_netbsd.go",
+        "zsys_openbsd.go",
+        "zsys_solaris.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/ipv4",
+    importpath = "golang.org/x/net/ipv4",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/net/bpf",
+        "//vendor/golang.org/x/net/internal/iana",
+        "//vendor/golang.org/x/net/internal/socket",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipv4",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/ipv6/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,93 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "ipv6",
+    srcs = [
+        "batch.go",
+        "control.go",
+        "control_rfc2292_unix.go",
+        "control_rfc3542_unix.go",
+        "control_stub.go",
+        "control_unix.go",
+        "control_windows.go",
+        "dgramopt.go",
+        "doc.go",
+        "endpoint.go",
+        "genericopt.go",
+        "header.go",
+        "helper.go",
+        "iana.go",
+        "icmp.go",
+        "icmp_bsd.go",
+        "icmp_linux.go",
+        "icmp_solaris.go",
+        "icmp_stub.go",
+        "icmp_windows.go",
+        "payload.go",
+        "payload_cmsg.go",
+        "payload_nocmsg.go",
+        "sockopt.go",
+        "sockopt_posix.go",
+        "sockopt_stub.go",
+        "sys_aix.go",
+        "sys_asmreq.go",
+        "sys_asmreq_stub.go",
+        "sys_bpf.go",
+        "sys_bpf_stub.go",
+        "sys_bsd.go",
+        "sys_darwin.go",
+        "sys_freebsd.go",
+        "sys_linux.go",
+        "sys_solaris.go",
+        "sys_ssmreq.go",
+        "sys_ssmreq_stub.go",
+        "sys_stub.go",
+        "sys_windows.go",
+        "zsys_aix_ppc64.go",
+        "zsys_darwin.go",
+        "zsys_dragonfly.go",
+        "zsys_freebsd_386.go",
+        "zsys_freebsd_amd64.go",
+        "zsys_freebsd_arm.go",
+        "zsys_freebsd_arm64.go",
+        "zsys_linux_386.go",
+        "zsys_linux_amd64.go",
+        "zsys_linux_arm.go",
+        "zsys_linux_arm64.go",
+        "zsys_linux_mips.go",
+        "zsys_linux_mips64.go",
+        "zsys_linux_mips64le.go",
+        "zsys_linux_mipsle.go",
+        "zsys_linux_ppc.go",
+        "zsys_linux_ppc64.go",
+        "zsys_linux_ppc64le.go",
+        "zsys_linux_riscv64.go",
+        "zsys_linux_s390x.go",
+        "zsys_netbsd.go",
+        "zsys_openbsd.go",
+        "zsys_solaris.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/ipv6",
+    importpath = "golang.org/x/net/ipv6",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/net/bpf",
+        "//vendor/golang.org/x/net/internal/iana",
+        "//vendor/golang.org/x/net/internal/socket",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":ipv6",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/proxy/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proxy",
+    srcs = [
+        "dial.go",
+        "direct.go",
+        "per_host.go",
+        "proxy.go",
+        "socks5.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/proxy",
+    importpath = "golang.org/x/net/proxy",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/net/internal/socks"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proxy",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/trace/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "trace",
+    srcs = [
+        "events.go",
+        "histogram.go",
+        "trace.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/trace",
+    importpath = "golang.org/x/net/trace",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/net/internal/timeseries"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":trace",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/net/websocket/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "websocket",
+    srcs = [
+        "client.go",
+        "dial.go",
+        "hybi.go",
+        "server.go",
+        "websocket.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/net/websocket",
+    importpath = "golang.org/x/net/websocket",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":websocket",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/oauth2/google/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "google",
+    srcs = [
+        "appengine.go",
+        "appengine_gen2_flex.go",
+        "default.go",
+        "doc.go",
+        "google.go",
+        "jwt.go",
+        "sdk.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/oauth2/google",
+    importpath = "golang.org/x/oauth2/google",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/cloud.google.com/go/compute/metadata",
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/golang.org/x/oauth2/internal",
+        "//vendor/golang.org/x/oauth2/jws",
+        "//vendor/golang.org/x/oauth2/jwt",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":google",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/oauth2/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = [
+        "doc.go",
+        "oauth2.go",
+        "token.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/oauth2/internal",
+    importpath = "golang.org/x/oauth2/internal",
+    visibility = ["//vendor/golang.org/x/oauth2:__subpackages__"],
+    deps = ["//vendor/golang.org/x/net/context/ctxhttp"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/golang.org/x/oauth2:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/oauth2/jws/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jws",
+    srcs = ["jws.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/oauth2/jws",
+    importpath = "golang.org/x/oauth2/jws",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jws",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/oauth2/jwt/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "jwt",
+    srcs = ["jwt.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/oauth2/jwt",
+    importpath = "golang.org/x/oauth2/jwt",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/golang.org/x/oauth2/internal",
+        "//vendor/golang.org/x/oauth2/jws",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":jwt",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/oauth2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "oauth2",
+    srcs = [
+        "oauth2.go",
+        "token.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/oauth2",
+    importpath = "golang.org/x/oauth2",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/oauth2/internal"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":oauth2",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sync/errgroup/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errgroup",
+    srcs = ["errgroup.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sync/errgroup",
+    importpath = "golang.org/x/sync/errgroup",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":errgroup",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sync/semaphore/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "semaphore",
+    srcs = ["semaphore.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sync/semaphore",
+    importpath = "golang.org/x/sync/semaphore",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":semaphore",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sync/syncmap/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "syncmap",
+    srcs = [
+        "go19.go",
+        "map.go",
+        "pre_go19.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sync/syncmap",
+    importpath = "golang.org/x/sync/syncmap",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":syncmap",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/cpu/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cpu",
+    srcs = [
+        "asm_aix_ppc64.s",
+        "byteorder.go",
+        "cpu.go",
+        "cpu_aix.go",
+        "cpu_arm.go",
+        "cpu_arm64.go",
+        "cpu_arm64.s",
+        "cpu_gc_arm64.go",
+        "cpu_gc_s390x.go",
+        "cpu_gc_x86.go",
+        "cpu_linux.go",
+        "cpu_linux_arm.go",
+        "cpu_linux_arm64.go",
+        "cpu_linux_mips64x.go",
+        "cpu_linux_noinit.go",
+        "cpu_linux_ppc64x.go",
+        "cpu_linux_s390x.go",
+        "cpu_mips64x.go",
+        "cpu_mipsx.go",
+        "cpu_netbsd_arm64.go",
+        "cpu_other_arm.go",
+        "cpu_other_arm64.go",
+        "cpu_ppc64x.go",
+        "cpu_riscv64.go",
+        "cpu_s390x.go",
+        "cpu_s390x.s",
+        "cpu_wasm.go",
+        "cpu_x86.go",
+        "cpu_x86.s",
+        "cpu_zos.go",
+        "cpu_zos_s390x.go",
+        "hwcap_linux.go",
+        "syscall_aix_ppc64_gc.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/cpu",
+    importpath = "golang.org/x/sys/cpu",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cpu",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/execabs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "execabs",
+    srcs = ["execabs.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/execabs",
+    importpath = "golang.org/x/sys/execabs",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":execabs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/internal/unsafeheader/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "unsafeheader",
+    srcs = ["unsafeheader.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/internal/unsafeheader",
+    importpath = "golang.org/x/sys/internal/unsafeheader",
+    visibility = ["//vendor/golang.org/x/sys:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":unsafeheader",
+    visibility = ["//vendor/golang.org/x/sys:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/unix/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,317 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "unix",
+    srcs = [
+        "affinity_linux.go",
+        "aliases.go",
+        "asm_aix_ppc64.s",
+        "asm_darwin_386.s",
+        "asm_darwin_amd64.s",
+        "asm_darwin_arm.s",
+        "asm_darwin_arm64.s",
+        "asm_dragonfly_amd64.s",
+        "asm_freebsd_386.s",
+        "asm_freebsd_amd64.s",
+        "asm_freebsd_arm.s",
+        "asm_freebsd_arm64.s",
+        "asm_linux_386.s",
+        "asm_linux_amd64.s",
+        "asm_linux_arm.s",
+        "asm_linux_arm64.s",
+        "asm_linux_mips64x.s",
+        "asm_linux_mipsx.s",
+        "asm_linux_ppc64x.s",
+        "asm_linux_riscv64.s",
+        "asm_linux_s390x.s",
+        "asm_netbsd_386.s",
+        "asm_netbsd_amd64.s",
+        "asm_netbsd_arm.s",
+        "asm_netbsd_arm64.s",
+        "asm_openbsd_386.s",
+        "asm_openbsd_amd64.s",
+        "asm_openbsd_arm.s",
+        "asm_openbsd_arm64.s",
+        "asm_solaris_amd64.s",
+        "bluetooth_linux.go",
+        "cap_freebsd.go",
+        "constants.go",
+        "dev_aix_ppc64.go",
+        "dev_darwin.go",
+        "dev_dragonfly.go",
+        "dev_freebsd.go",
+        "dev_linux.go",
+        "dev_netbsd.go",
+        "dev_openbsd.go",
+        "dirent.go",
+        "endian_big.go",
+        "endian_little.go",
+        "env_unix.go",
+        "errors_freebsd_386.go",
+        "errors_freebsd_amd64.go",
+        "errors_freebsd_arm.go",
+        "errors_freebsd_arm64.go",
+        "fcntl.go",
+        "fcntl_darwin.go",
+        "fcntl_linux_32bit.go",
+        "fdset.go",
+        "ioctl.go",
+        "pagesize_unix.go",
+        "pledge_openbsd.go",
+        "ptrace_darwin.go",
+        "ptrace_ios.go",
+        "race.go",
+        "race0.go",
+        "readdirent_getdents.go",
+        "readdirent_getdirentries.go",
+        "sockcmsg_dragonfly.go",
+        "sockcmsg_linux.go",
+        "sockcmsg_unix.go",
+        "sockcmsg_unix_other.go",
+        "str.go",
+        "syscall.go",
+        "syscall_aix.go",
+        "syscall_aix_ppc64.go",
+        "syscall_bsd.go",
+        "syscall_darwin.1_12.go",
+        "syscall_darwin.1_13.go",
+        "syscall_darwin.go",
+        "syscall_darwin_386.go",
+        "syscall_darwin_amd64.go",
+        "syscall_darwin_arm.go",
+        "syscall_darwin_arm64.go",
+        "syscall_darwin_libSystem.go",
+        "syscall_dragonfly.go",
+        "syscall_dragonfly_amd64.go",
+        "syscall_freebsd.go",
+        "syscall_freebsd_386.go",
+        "syscall_freebsd_amd64.go",
+        "syscall_freebsd_arm.go",
+        "syscall_freebsd_arm64.go",
+        "syscall_illumos.go",
+        "syscall_linux.go",
+        "syscall_linux_386.go",
+        "syscall_linux_amd64.go",
+        "syscall_linux_amd64_gc.go",
+        "syscall_linux_arm.go",
+        "syscall_linux_arm64.go",
+        "syscall_linux_gc.go",
+        "syscall_linux_gc_386.go",
+        "syscall_linux_gc_arm.go",
+        "syscall_linux_mips64x.go",
+        "syscall_linux_mipsx.go",
+        "syscall_linux_ppc64x.go",
+        "syscall_linux_riscv64.go",
+        "syscall_linux_s390x.go",
+        "syscall_netbsd.go",
+        "syscall_netbsd_386.go",
+        "syscall_netbsd_amd64.go",
+        "syscall_netbsd_arm.go",
+        "syscall_netbsd_arm64.go",
+        "syscall_openbsd.go",
+        "syscall_openbsd_386.go",
+        "syscall_openbsd_amd64.go",
+        "syscall_openbsd_arm.go",
+        "syscall_openbsd_arm64.go",
+        "syscall_solaris.go",
+        "syscall_solaris_amd64.go",
+        "syscall_unix.go",
+        "syscall_unix_gc.go",
+        "syscall_unix_gc_ppc64x.go",
+        "timestruct.go",
+        "unveil_openbsd.go",
+        "xattr_bsd.go",
+        "zerrors_aix_ppc64.go",
+        "zerrors_darwin_386.go",
+        "zerrors_darwin_amd64.go",
+        "zerrors_darwin_arm.go",
+        "zerrors_darwin_arm64.go",
+        "zerrors_dragonfly_amd64.go",
+        "zerrors_freebsd_386.go",
+        "zerrors_freebsd_amd64.go",
+        "zerrors_freebsd_arm.go",
+        "zerrors_freebsd_arm64.go",
+        "zerrors_linux.go",
+        "zerrors_linux_386.go",
+        "zerrors_linux_amd64.go",
+        "zerrors_linux_arm.go",
+        "zerrors_linux_arm64.go",
+        "zerrors_linux_mips.go",
+        "zerrors_linux_mips64.go",
+        "zerrors_linux_mips64le.go",
+        "zerrors_linux_mipsle.go",
+        "zerrors_linux_ppc64.go",
+        "zerrors_linux_ppc64le.go",
+        "zerrors_linux_riscv64.go",
+        "zerrors_linux_s390x.go",
+        "zerrors_netbsd_386.go",
+        "zerrors_netbsd_amd64.go",
+        "zerrors_netbsd_arm.go",
+        "zerrors_netbsd_arm64.go",
+        "zerrors_openbsd_386.go",
+        "zerrors_openbsd_amd64.go",
+        "zerrors_openbsd_arm.go",
+        "zerrors_openbsd_arm64.go",
+        "zerrors_solaris_amd64.go",
+        "zptrace_armnn_linux.go",
+        "zptrace_linux_arm64.go",
+        "zptrace_mipsnn_linux.go",
+        "zptrace_mipsnnle_linux.go",
+        "zptrace_x86_linux.go",
+        "zsyscall_aix_ppc64.go",
+        "zsyscall_aix_ppc64_gc.go",
+        "zsyscall_darwin_386.1_13.go",
+        "zsyscall_darwin_386.1_13.s",
+        "zsyscall_darwin_386.go",
+        "zsyscall_darwin_386.s",
+        "zsyscall_darwin_amd64.1_13.go",
+        "zsyscall_darwin_amd64.1_13.s",
+        "zsyscall_darwin_amd64.go",
+        "zsyscall_darwin_amd64.s",
+        "zsyscall_darwin_arm.1_13.go",
+        "zsyscall_darwin_arm.1_13.s",
+        "zsyscall_darwin_arm.go",
+        "zsyscall_darwin_arm.s",
+        "zsyscall_darwin_arm64.1_13.go",
+        "zsyscall_darwin_arm64.1_13.s",
+        "zsyscall_darwin_arm64.go",
+        "zsyscall_darwin_arm64.s",
+        "zsyscall_dragonfly_amd64.go",
+        "zsyscall_freebsd_386.go",
+        "zsyscall_freebsd_amd64.go",
+        "zsyscall_freebsd_arm.go",
+        "zsyscall_freebsd_arm64.go",
+        "zsyscall_illumos_amd64.go",
+        "zsyscall_linux.go",
+        "zsyscall_linux_386.go",
+        "zsyscall_linux_amd64.go",
+        "zsyscall_linux_arm.go",
+        "zsyscall_linux_arm64.go",
+        "zsyscall_linux_mips.go",
+        "zsyscall_linux_mips64.go",
+        "zsyscall_linux_mips64le.go",
+        "zsyscall_linux_mipsle.go",
+        "zsyscall_linux_ppc64.go",
+        "zsyscall_linux_ppc64le.go",
+        "zsyscall_linux_riscv64.go",
+        "zsyscall_linux_s390x.go",
+        "zsyscall_netbsd_386.go",
+        "zsyscall_netbsd_amd64.go",
+        "zsyscall_netbsd_arm.go",
+        "zsyscall_netbsd_arm64.go",
+        "zsyscall_openbsd_386.go",
+        "zsyscall_openbsd_amd64.go",
+        "zsyscall_openbsd_arm.go",
+        "zsyscall_openbsd_arm64.go",
+        "zsyscall_solaris_amd64.go",
+        "zsysctl_openbsd_386.go",
+        "zsysctl_openbsd_amd64.go",
+        "zsysctl_openbsd_arm.go",
+        "zsysctl_openbsd_arm64.go",
+        "zsysnum_darwin_386.go",
+        "zsysnum_darwin_amd64.go",
+        "zsysnum_darwin_arm.go",
+        "zsysnum_darwin_arm64.go",
+        "zsysnum_dragonfly_amd64.go",
+        "zsysnum_freebsd_386.go",
+        "zsysnum_freebsd_amd64.go",
+        "zsysnum_freebsd_arm.go",
+        "zsysnum_freebsd_arm64.go",
+        "zsysnum_linux_386.go",
+        "zsysnum_linux_amd64.go",
+        "zsysnum_linux_arm.go",
+        "zsysnum_linux_arm64.go",
+        "zsysnum_linux_mips.go",
+        "zsysnum_linux_mips64.go",
+        "zsysnum_linux_mips64le.go",
+        "zsysnum_linux_mipsle.go",
+        "zsysnum_linux_ppc64.go",
+        "zsysnum_linux_ppc64le.go",
+        "zsysnum_linux_riscv64.go",
+        "zsysnum_linux_s390x.go",
+        "zsysnum_netbsd_386.go",
+        "zsysnum_netbsd_amd64.go",
+        "zsysnum_netbsd_arm.go",
+        "zsysnum_netbsd_arm64.go",
+        "zsysnum_openbsd_386.go",
+        "zsysnum_openbsd_amd64.go",
+        "zsysnum_openbsd_arm.go",
+        "zsysnum_openbsd_arm64.go",
+        "ztypes_aix_ppc64.go",
+        "ztypes_darwin_386.go",
+        "ztypes_darwin_amd64.go",
+        "ztypes_darwin_arm.go",
+        "ztypes_darwin_arm64.go",
+        "ztypes_dragonfly_amd64.go",
+        "ztypes_freebsd_386.go",
+        "ztypes_freebsd_amd64.go",
+        "ztypes_freebsd_arm.go",
+        "ztypes_freebsd_arm64.go",
+        "ztypes_linux.go",
+        "ztypes_linux_386.go",
+        "ztypes_linux_amd64.go",
+        "ztypes_linux_arm.go",
+        "ztypes_linux_arm64.go",
+        "ztypes_linux_mips.go",
+        "ztypes_linux_mips64.go",
+        "ztypes_linux_mips64le.go",
+        "ztypes_linux_mipsle.go",
+        "ztypes_linux_ppc64.go",
+        "ztypes_linux_ppc64le.go",
+        "ztypes_linux_riscv64.go",
+        "ztypes_linux_s390x.go",
+        "ztypes_netbsd_386.go",
+        "ztypes_netbsd_amd64.go",
+        "ztypes_netbsd_arm.go",
+        "ztypes_netbsd_arm64.go",
+        "ztypes_openbsd_386.go",
+        "ztypes_openbsd_amd64.go",
+        "ztypes_openbsd_arm.go",
+        "ztypes_openbsd_arm64.go",
+        "ztypes_solaris_amd64.go",
+    ],
+    cgo = True,
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/unix",
+    importpath = "golang.org/x/sys/unix",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":unix",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/windows/registry/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "registry",
+    srcs = [
+        "key.go",
+        "syscall.go",
+        "value.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/windows/registry",
+    importpath = "golang.org/x/sys/windows/registry",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":registry",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/windows/svc/debug/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "debug",
+    srcs = [
+        "log.go",
+        "service.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/windows/svc/debug",
+    importpath = "golang.org/x/sys/windows/svc/debug",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows/svc",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":debug",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/windows/svc/eventlog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "eventlog",
+    srcs = [
+        "install.go",
+        "log.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/windows/svc/eventlog",
+    importpath = "golang.org/x/sys/windows/svc/eventlog",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/windows",
+            "//vendor/golang.org/x/sys/windows/registry",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":eventlog",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/windows/svc/mgr/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "mgr",
+    srcs = [
+        "config.go",
+        "mgr.go",
+        "recovery.go",
+        "service.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/windows/svc/mgr",
+    importpath = "golang.org/x/sys/windows/svc/mgr",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+            "//vendor/golang.org/x/sys/windows",
+            "//vendor/golang.org/x/sys/windows/svc",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mgr",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/windows/svc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "svc",
+    srcs = [
+        "event.go",
+        "go12.go",
+        "go13.go",
+        "security.go",
+        "service.go",
+        "sys_386.s",
+        "sys_amd64.s",
+        "sys_arm.s",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/windows/svc",
+    importpath = "golang.org/x/sys/windows/svc",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+            "//vendor/golang.org/x/sys/windows",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":svc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/sys/windows/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,45 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "windows",
+    srcs = [
+        "aliases.go",
+        "dll_windows.go",
+        "empty.s",
+        "env_windows.go",
+        "eventlog.go",
+        "exec_windows.go",
+        "memory_windows.go",
+        "race.go",
+        "race0.go",
+        "security_windows.go",
+        "service.go",
+        "setupapierrors_windows.go",
+        "str.go",
+        "syscall.go",
+        "syscall_windows.go",
+        "types_windows.go",
+        "types_windows_386.go",
+        "types_windows_amd64.go",
+        "types_windows_arm.go",
+        "zerrors_windows.go",
+        "zknownfolderids_windows.go",
+        "zsyscall_windows.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/sys/windows",
+    importpath = "golang.org/x/sys/windows",
+    visibility = ["//visibility:public"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/golang.org/x/sys/internal/unsafeheader",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":windows",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/text/secure/bidirule/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bidirule",
+    srcs = [
+        "bidirule.go",
+        "bidirule10.0.0.go",
+        "bidirule9.0.0.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/text/secure/bidirule",
+    importpath = "golang.org/x/text/secure/bidirule",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/text/transform",
+        "//vendor/golang.org/x/text/unicode/bidi",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bidirule",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/text/transform/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "transform",
+    srcs = ["transform.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/text/transform",
+    importpath = "golang.org/x/text/transform",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transform",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/text/unicode/bidi/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bidi",
+    srcs = [
+        "bidi.go",
+        "bracket.go",
+        "core.go",
+        "prop.go",
+        "tables10.0.0.go",
+        "tables11.0.0.go",
+        "tables12.0.0.go",
+        "tables9.0.0.go",
+        "trieval.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/text/unicode/bidi",
+    importpath = "golang.org/x/text/unicode/bidi",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bidi",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/text/unicode/norm/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "norm",
+    srcs = [
+        "composition.go",
+        "forminfo.go",
+        "input.go",
+        "iter.go",
+        "normalize.go",
+        "readwriter.go",
+        "tables10.0.0.go",
+        "tables11.0.0.go",
+        "tables12.0.0.go",
+        "tables9.0.0.go",
+        "transform.go",
+        "trie.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/text/unicode/norm",
+    importpath = "golang.org/x/text/unicode/norm",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/text/transform"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":norm",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/golang.org/x/time/rate/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "rate",
+    srcs = ["rate.go"],
+    importmap = "github.com/docker/docker/vendor/golang.org/x/time/rate",
+    importpath = "golang.org/x/time/rate",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":rate",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/googleapi/transport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "transport",
+    srcs = ["apikey.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/googleapi/transport",
+    importpath = "google.golang.org/api/googleapi/transport",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transport",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = [
+        "creds.go",
+        "pool.go",
+        "settings.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/internal",
+    importpath = "google.golang.org/api/internal",
+    visibility = ["//vendor/google.golang.org/api:__subpackages__"],
+    deps = [
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/golang.org/x/oauth2/google",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/naming",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/google.golang.org/api:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/iterator/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "iterator",
+    srcs = ["iterator.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/iterator",
+    importpath = "google.golang.org/api/iterator",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":iterator",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/option/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "option",
+    srcs = [
+        "credentials_go19.go",
+        "credentials_notgo19.go",
+        "option.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/option",
+    importpath = "google.golang.org/api/option",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/golang.org/x/oauth2/google",
+        "//vendor/google.golang.org/api/internal",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":option",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/support/bundler/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bundler",
+    srcs = ["bundler.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/support/bundler",
+    importpath = "google.golang.org/api/support/bundler",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/golang.org/x/sync/semaphore"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":bundler",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/transport/grpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc",
+    srcs = [
+        "dial.go",
+        "dial_socketopt.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/transport/grpc",
+    importpath = "google.golang.org/api/transport/grpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/plugin/ocgrpc",
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/google.golang.org/api/internal",
+        "//vendor/google.golang.org/api/option",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/balancer/grpclb",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/credentials/google",
+        "//vendor/google.golang.org/grpc/credentials/oauth",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/transport/http/internal/propagation/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "propagation",
+    srcs = ["http.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/transport/http/internal/propagation",
+    importpath = "google.golang.org/api/transport/http/internal/propagation",
+    visibility = ["//vendor/google.golang.org/api/transport/http:__subpackages__"],
+    deps = [
+        "//vendor/go.opencensus.io/trace",
+        "//vendor/go.opencensus.io/trace/propagation",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":propagation",
+    visibility = ["//vendor/google.golang.org/api/transport/http:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/transport/http/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "http",
+    srcs = ["dial.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/transport/http",
+    importpath = "google.golang.org/api/transport/http",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/go.opencensus.io/plugin/ochttp",
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/google.golang.org/api/googleapi/transport",
+        "//vendor/google.golang.org/api/internal",
+        "//vendor/google.golang.org/api/option",
+        "//vendor/google.golang.org/api/transport/http/internal/propagation",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":http",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/api/transport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "transport",
+    srcs = [
+        "dial.go",
+        "doc.go",
+        "go19.go",
+        "not_go19.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/api/transport",
+    importpath = "google.golang.org/api/transport",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/oauth2/google",
+        "//vendor/google.golang.org/api/internal",
+        "//vendor/google.golang.org/api/option",
+        "//vendor/google.golang.org/api/transport/grpc",
+        "//vendor/google.golang.org/api/transport/http",
+        "//vendor/google.golang.org/grpc",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transport",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/api/annotations/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "annotations",
+    srcs = [
+        "annotations.pb.go",
+        "client.pb.go",
+        "field_behavior.pb.go",
+        "http.pb.go",
+        "resource.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/api/annotations",
+    importpath = "google.golang.org/genproto/googleapis/api/annotations",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/protoc-gen-go/descriptor",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":annotations",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/api/distribution/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "distribution",
+    srcs = ["distribution.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/api/distribution",
+    importpath = "google.golang.org/genproto/googleapis/api/distribution",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":distribution",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/api/label/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "label",
+    srcs = ["label.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/api/label",
+    importpath = "google.golang.org/genproto/googleapis/api/label",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":label",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/api/metric/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metric",
+    srcs = ["metric.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/api/metric",
+    importpath = "google.golang.org/genproto/googleapis/api/metric",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/google.golang.org/genproto/googleapis/api",
+        "//vendor/google.golang.org/genproto/googleapis/api/label",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metric",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/api/monitoredres/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "monitoredres",
+    srcs = ["monitored_resource.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/api/monitoredres",
+    importpath = "google.golang.org/genproto/googleapis/api/monitoredres",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/struct",
+        "//vendor/google.golang.org/genproto/googleapis/api",
+        "//vendor/google.golang.org/genproto/googleapis/api/label",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":monitoredres",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/api/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "api",
+    srcs = ["launch_stage.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/api",
+    importpath = "google.golang.org/genproto/googleapis/api",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":api",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/logging/type/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "type",
+    srcs = [
+        "http_request.pb.go",
+        "log_severity.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/logging/type",
+    importpath = "google.golang.org/genproto/googleapis/logging/type",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/google.golang.org/genproto/googleapis/api/annotations",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":type",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/logging/v2/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "logging",
+    srcs = [
+        "log_entry.pb.go",
+        "logging.pb.go",
+        "logging_config.pb.go",
+        "logging_metrics.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/logging/v2",
+    importpath = "google.golang.org/genproto/googleapis/logging/v2",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/github.com/golang/protobuf/ptypes/empty",
+        "//vendor/github.com/golang/protobuf/ptypes/struct",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+        "//vendor/google.golang.org/genproto/googleapis/api/annotations",
+        "//vendor/google.golang.org/genproto/googleapis/api/distribution",
+        "//vendor/google.golang.org/genproto/googleapis/api/metric",
+        "//vendor/google.golang.org/genproto/googleapis/api/monitoredres",
+        "//vendor/google.golang.org/genproto/googleapis/logging/type",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/genproto/protobuf/field_mask",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":logging",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/googleapis/rpc/status/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "status",
+    srcs = ["status.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/googleapis/rpc/status",
+    importpath = "google.golang.org/genproto/googleapis/rpc/status",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/any",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":status",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/genproto/protobuf/field_mask/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "field_mask",
+    srcs = ["field_mask.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/genproto/protobuf/field_mask",
+    importpath = "google.golang.org/genproto/protobuf/field_mask",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/github.com/golang/protobuf/proto"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":field_mask",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/attributes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "attributes",
+    srcs = ["attributes.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/attributes",
+    importpath = "google.golang.org/grpc/attributes",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":attributes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/backoff/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "backoff",
+    srcs = ["backoff.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/backoff",
+    importpath = "google.golang.org/grpc/backoff",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":backoff",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/balancer/base/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "base",
+    srcs = [
+        "balancer.go",
+        "base.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/balancer/base",
+    importpath = "google.golang.org/grpc/balancer/base",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc/balancer",
+        "//vendor/google.golang.org/grpc/connectivity",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/resolver",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":base",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/balancer/grpclb/grpc_lb_v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_lb_v1",
+    srcs = ["load_balancer.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/balancer/grpclb/grpc_lb_v1",
+    importpath = "google.golang.org/grpc/balancer/grpclb/grpc_lb_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc_lb_v1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/balancer/grpclb/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpclb",
+    srcs = [
+        "grpclb.go",
+        "grpclb_config.go",
+        "grpclb_picker.go",
+        "grpclb_remote_balancer.go",
+        "grpclb_util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/balancer/grpclb",
+    importpath = "google.golang.org/grpc/balancer/grpclb",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/balancer",
+        "//vendor/google.golang.org/grpc/balancer/grpclb/grpc_lb_v1",
+        "//vendor/google.golang.org/grpc/balancer/roundrobin",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/connectivity",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/internal",
+        "//vendor/google.golang.org/grpc/internal/backoff",
+        "//vendor/google.golang.org/grpc/internal/channelz",
+        "//vendor/google.golang.org/grpc/internal/grpcrand",
+        "//vendor/google.golang.org/grpc/internal/resolver/dns",
+        "//vendor/google.golang.org/grpc/keepalive",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/resolver",
+        "//vendor/google.golang.org/grpc/serviceconfig",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpclb",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/balancer/roundrobin/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "roundrobin",
+    srcs = ["roundrobin.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/balancer/roundrobin",
+    importpath = "google.golang.org/grpc/balancer/roundrobin",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc/balancer",
+        "//vendor/google.golang.org/grpc/balancer/base",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/internal/grpcrand",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":roundrobin",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/balancer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "balancer",
+    srcs = ["balancer.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/balancer",
+    importpath = "google.golang.org/grpc/balancer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc/connectivity",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/internal",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/resolver",
+        "//vendor/google.golang.org/grpc/serviceconfig",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":balancer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/binarylog/grpc_binarylog_v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_binarylog_v1",
+    srcs = ["binarylog.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/binarylog/grpc_binarylog_v1",
+    importpath = "google.golang.org/grpc/binarylog/grpc_binarylog_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes/duration",
+        "//vendor/github.com/golang/protobuf/ptypes/timestamp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc_binarylog_v1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/codes/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "codes",
+    srcs = [
+        "code_string.go",
+        "codes.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/codes",
+    importpath = "google.golang.org/grpc/codes",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":codes",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/connectivity/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "connectivity",
+    srcs = ["connectivity.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/connectivity",
+    importpath = "google.golang.org/grpc/connectivity",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc/grpclog"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":connectivity",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/internal/authinfo/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "authinfo",
+    srcs = ["authinfo.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts/internal/authinfo",
+    importpath = "google.golang.org/grpc/credentials/alts/internal/authinfo",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+    deps = [
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":authinfo",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/internal/conn/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "conn",
+    srcs = [
+        "aeadrekey.go",
+        "aes128gcm.go",
+        "aes128gcmrekey.go",
+        "common.go",
+        "counter.go",
+        "record.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts/internal/conn",
+    importpath = "google.golang.org/grpc/credentials/alts/internal/conn",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+    deps = ["//vendor/google.golang.org/grpc/credentials/alts/internal"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":conn",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/internal/handshaker/service/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "service",
+    srcs = ["service.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts/internal/handshaker/service",
+    importpath = "google.golang.org/grpc/credentials/alts/internal/handshaker/service",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+    deps = ["//vendor/google.golang.org/grpc"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":service",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/internal/handshaker/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "handshaker",
+    srcs = ["handshaker.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts/internal/handshaker",
+    importpath = "google.golang.org/grpc/credentials/alts/internal/handshaker",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+    deps = [
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/authinfo",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/conn",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":handshaker",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_gcp",
+    srcs = [
+        "altscontext.pb.go",
+        "handshaker.pb.go",
+        "transport_security_common.pb.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp",
+    importpath = "google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc_gcp",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["common.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts/internal",
+    importpath = "google.golang.org/grpc/credentials/alts/internal",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+    deps = ["//vendor/google.golang.org/grpc/credentials"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/google.golang.org/grpc/credentials/alts:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/alts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "alts",
+    srcs = [
+        "alts.go",
+        "utils.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/alts",
+    importpath = "google.golang.org/grpc/credentials/alts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/handshaker",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/handshaker/service",
+        "//vendor/google.golang.org/grpc/credentials/alts/internal/proto/grpc_gcp",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/peer",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":alts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/google/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "google",
+    srcs = ["google.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/google",
+    importpath = "google.golang.org/grpc/credentials/google",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/credentials/alts",
+        "//vendor/google.golang.org/grpc/credentials/oauth",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/internal",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":google",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["syscallconn.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/internal",
+    importpath = "google.golang.org/grpc/credentials/internal",
+    visibility = ["//vendor/google.golang.org/grpc/credentials:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/google.golang.org/grpc/credentials:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/oauth/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "oauth",
+    srcs = ["oauth.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials/oauth",
+    importpath = "google.golang.org/grpc/credentials/oauth",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/oauth2",
+        "//vendor/golang.org/x/oauth2/google",
+        "//vendor/golang.org/x/oauth2/jwt",
+        "//vendor/google.golang.org/grpc/credentials",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":oauth",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/credentials/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "credentials",
+    srcs = [
+        "credentials.go",
+        "go12.go",
+        "tls.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/credentials",
+    importpath = "google.golang.org/grpc/credentials",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/google.golang.org/grpc/credentials/internal",
+        "//vendor/google.golang.org/grpc/internal",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":credentials",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/encoding/proto/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "proto",
+    srcs = ["proto.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/encoding/proto",
+    importpath = "google.golang.org/grpc/encoding/proto",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/google.golang.org/grpc/encoding",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":proto",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/encoding/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "encoding",
+    srcs = ["encoding.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/encoding",
+    importpath = "google.golang.org/grpc/encoding",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":encoding",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/grpclog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpclog",
+    srcs = [
+        "grpclog.go",
+        "logger.go",
+        "loggerv2.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/grpclog",
+    importpath = "google.golang.org/grpc/grpclog",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpclog",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/health/grpc_health_v1/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc_health_v1",
+    srcs = ["health.pb.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/health/grpc_health_v1",
+    importpath = "google.golang.org/grpc/health/grpc_health_v1",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc_health_v1",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/health/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "health",
+    srcs = [
+        "client.go",
+        "server.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/health",
+    importpath = "google.golang.org/grpc/health",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/connectivity",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/health/grpc_health_v1",
+        "//vendor/google.golang.org/grpc/internal",
+        "//vendor/google.golang.org/grpc/internal/backoff",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":health",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/backoff/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "backoff",
+    srcs = ["backoff.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/backoff",
+    importpath = "google.golang.org/grpc/internal/backoff",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = [
+        "//vendor/google.golang.org/grpc/backoff",
+        "//vendor/google.golang.org/grpc/internal/grpcrand",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":backoff",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/balancerload/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "balancerload",
+    srcs = ["load.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/balancerload",
+    importpath = "google.golang.org/grpc/internal/balancerload",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = ["//vendor/google.golang.org/grpc/metadata"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":balancerload",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/binarylog/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "binarylog",
+    srcs = [
+        "binarylog.go",
+        "binarylog_testutil.go",
+        "env_config.go",
+        "method_logger.go",
+        "sink.go",
+        "util.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/binarylog",
+    importpath = "google.golang.org/grpc/internal/binarylog",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes",
+        "//vendor/google.golang.org/grpc/binarylog/grpc_binarylog_v1",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/status",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":binarylog",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/buffer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "buffer",
+    srcs = ["unbounded.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/buffer",
+    importpath = "google.golang.org/grpc/internal/buffer",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":buffer",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/channelz/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "channelz",
+    srcs = [
+        "funcs.go",
+        "types.go",
+        "types_linux.go",
+        "types_nonlinux.go",
+        "util_linux.go",
+        "util_nonlinux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/channelz",
+    importpath = "google.golang.org/grpc/internal/channelz",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = [
+        "//vendor/google.golang.org/grpc/connectivity",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/grpclog",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":channelz",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/envconfig/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "envconfig",
+    srcs = ["envconfig.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/envconfig",
+    importpath = "google.golang.org/grpc/internal/envconfig",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":envconfig",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/grpcrand/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpcrand",
+    srcs = ["grpcrand.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/grpcrand",
+    importpath = "google.golang.org/grpc/internal/grpcrand",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpcrand",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/grpcsync/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpcsync",
+    srcs = ["event.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/grpcsync",
+    importpath = "google.golang.org/grpc/internal/grpcsync",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpcsync",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/resolver/dns/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "dns",
+    srcs = [
+        "dns_resolver.go",
+        "go113.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/resolver/dns",
+    importpath = "google.golang.org/grpc/internal/resolver/dns",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = [
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/internal/envconfig",
+        "//vendor/google.golang.org/grpc/internal/grpcrand",
+        "//vendor/google.golang.org/grpc/resolver",
+        "//vendor/google.golang.org/grpc/serviceconfig",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":dns",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/resolver/passthrough/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "passthrough",
+    srcs = ["passthrough.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/resolver/passthrough",
+    importpath = "google.golang.org/grpc/internal/resolver/passthrough",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = ["//vendor/google.golang.org/grpc/resolver"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":passthrough",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/syscall/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,66 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "syscall",
+    srcs = [
+        "syscall_linux.go",
+        "syscall_nonlinux.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/syscall",
+    importpath = "google.golang.org/grpc/internal/syscall",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/golang.org/x/sys/unix",
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//vendor/google.golang.org/grpc/grpclog",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":syscall",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/transport/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,46 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "transport",
+    srcs = [
+        "bdp_estimator.go",
+        "controlbuf.go",
+        "defaults.go",
+        "flowcontrol.go",
+        "handler_server.go",
+        "http2_client.go",
+        "http2_server.go",
+        "http_util.go",
+        "log.go",
+        "transport.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal/transport",
+    importpath = "google.golang.org/grpc/internal/transport",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/golang.org/x/net/http2",
+        "//vendor/golang.org/x/net/http2/hpack",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/internal",
+        "//vendor/google.golang.org/grpc/internal/channelz",
+        "//vendor/google.golang.org/grpc/internal/grpcrand",
+        "//vendor/google.golang.org/grpc/internal/syscall",
+        "//vendor/google.golang.org/grpc/keepalive",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/peer",
+        "//vendor/google.golang.org/grpc/stats",
+        "//vendor/google.golang.org/grpc/status",
+        "//vendor/google.golang.org/grpc/tap",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":transport",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/internal/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "internal",
+    srcs = ["internal.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/internal",
+    importpath = "google.golang.org/grpc/internal",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+    deps = ["//vendor/google.golang.org/grpc/connectivity"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":internal",
+    visibility = ["//vendor/google.golang.org/grpc:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/keepalive/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "keepalive",
+    srcs = ["keepalive.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/keepalive",
+    importpath = "google.golang.org/grpc/keepalive",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":keepalive",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/metadata/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "metadata",
+    srcs = ["metadata.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/metadata",
+    importpath = "google.golang.org/grpc/metadata",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":metadata",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/naming/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "naming",
+    srcs = [
+        "dns_resolver.go",
+        "naming.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/naming",
+    importpath = "google.golang.org/grpc/naming",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc/grpclog"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":naming",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/peer/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "peer",
+    srcs = ["peer.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/peer",
+    importpath = "google.golang.org/grpc/peer",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc/credentials"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":peer",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/resolver/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "resolver",
+    srcs = ["resolver.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/resolver",
+    importpath = "google.golang.org/grpc/resolver",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/google.golang.org/grpc/attributes",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/serviceconfig",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":resolver",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/serviceconfig/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "serviceconfig",
+    srcs = ["serviceconfig.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/serviceconfig",
+    importpath = "google.golang.org/grpc/serviceconfig",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":serviceconfig",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/stats/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "stats",
+    srcs = [
+        "handlers.go",
+        "stats.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/stats",
+    importpath = "google.golang.org/grpc/stats",
+    visibility = ["//visibility:public"],
+    deps = ["//vendor/google.golang.org/grpc/metadata"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":stats",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/status/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "status",
+    srcs = ["status.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/status",
+    importpath = "google.golang.org/grpc/status",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/golang/protobuf/proto",
+        "//vendor/github.com/golang/protobuf/ptypes",
+        "//vendor/google.golang.org/genproto/googleapis/rpc/status",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/internal",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":status",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/tap/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tap",
+    srcs = ["tap.go"],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc/tap",
+    importpath = "google.golang.org/grpc/tap",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":tap",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/google.golang.org/grpc/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,72 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "grpc",
+    srcs = [
+        "backoff.go",
+        "balancer.go",
+        "balancer_conn_wrappers.go",
+        "balancer_v1_wrapper.go",
+        "call.go",
+        "clientconn.go",
+        "codec.go",
+        "dialoptions.go",
+        "doc.go",
+        "interceptor.go",
+        "picker_wrapper.go",
+        "pickfirst.go",
+        "preloader.go",
+        "proxy.go",
+        "resolver_conn_wrapper.go",
+        "rpc_util.go",
+        "server.go",
+        "service_config.go",
+        "stream.go",
+        "trace.go",
+        "version.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/google.golang.org/grpc",
+    importpath = "google.golang.org/grpc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/golang.org/x/net/trace",
+        "//vendor/google.golang.org/grpc/backoff",
+        "//vendor/google.golang.org/grpc/balancer",
+        "//vendor/google.golang.org/grpc/balancer/base",
+        "//vendor/google.golang.org/grpc/balancer/roundrobin",
+        "//vendor/google.golang.org/grpc/codes",
+        "//vendor/google.golang.org/grpc/connectivity",
+        "//vendor/google.golang.org/grpc/credentials",
+        "//vendor/google.golang.org/grpc/encoding",
+        "//vendor/google.golang.org/grpc/encoding/proto",
+        "//vendor/google.golang.org/grpc/grpclog",
+        "//vendor/google.golang.org/grpc/internal",
+        "//vendor/google.golang.org/grpc/internal/backoff",
+        "//vendor/google.golang.org/grpc/internal/balancerload",
+        "//vendor/google.golang.org/grpc/internal/binarylog",
+        "//vendor/google.golang.org/grpc/internal/buffer",
+        "//vendor/google.golang.org/grpc/internal/channelz",
+        "//vendor/google.golang.org/grpc/internal/envconfig",
+        "//vendor/google.golang.org/grpc/internal/grpcrand",
+        "//vendor/google.golang.org/grpc/internal/grpcsync",
+        "//vendor/google.golang.org/grpc/internal/resolver/dns",
+        "//vendor/google.golang.org/grpc/internal/resolver/passthrough",
+        "//vendor/google.golang.org/grpc/internal/transport",
+        "//vendor/google.golang.org/grpc/keepalive",
+        "//vendor/google.golang.org/grpc/metadata",
+        "//vendor/google.golang.org/grpc/naming",
+        "//vendor/google.golang.org/grpc/peer",
+        "//vendor/google.golang.org/grpc/resolver",
+        "//vendor/google.golang.org/grpc/serviceconfig",
+        "//vendor/google.golang.org/grpc/stats",
+        "//vendor/google.golang.org/grpc/status",
+        "//vendor/google.golang.org/grpc/tap",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":grpc",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/assert/cmp/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cmp",
+    srcs = [
+        "compare.go",
+        "result.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/assert/cmp",
+    importpath = "gotest.tools/v3/assert/cmp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/gotest.tools/v3/internal/format",
+        "//vendor/gotest.tools/v3/internal/source",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cmp",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/assert/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "assert",
+    srcs = ["assert.go"],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/assert",
+    importpath = "gotest.tools/v3/assert",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/internal/assert",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":assert",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/env/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "env",
+    srcs = ["env.go"],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/env",
+    importpath = "gotest.tools/v3/env",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/internal/cleanup",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":env",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/fs/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fs",
+    srcs = [
+        "file.go",
+        "manifest.go",
+        "manifest_unix.go",
+        "manifest_windows.go",
+        "ops.go",
+        "path.go",
+        "report.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/fs",
+    importpath = "gotest.tools/v3/fs",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/internal/cleanup",
+        "//vendor/gotest.tools/v3/internal/format",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":fs",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/icmd/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "icmd",
+    srcs = [
+        "command.go",
+        "exitcode.go",
+        "ops.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/icmd",
+    importpath = "gotest.tools/v3/icmd",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/github.com/pkg/errors",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":icmd",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/internal/assert/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "assert",
+    srcs = [
+        "assert.go",
+        "result.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/internal/assert",
+    importpath = "gotest.tools/v3/internal/assert",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/internal/format",
+        "//vendor/gotest.tools/v3/internal/source",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":assert",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/internal/cleanup/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cleanup",
+    srcs = ["cleanup.go"],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/internal/cleanup",
+    importpath = "gotest.tools/v3/internal/cleanup",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":cleanup",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/internal/difflib/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "difflib",
+    srcs = ["difflib.go"],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/internal/difflib",
+    importpath = "gotest.tools/v3/internal/difflib",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":difflib",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/internal/format/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "format",
+    srcs = [
+        "diff.go",
+        "format.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/internal/format",
+    importpath = "gotest.tools/v3/internal/format",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+    deps = ["//vendor/gotest.tools/v3/internal/difflib"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":format",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/internal/source/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "source",
+    srcs = [
+        "defers.go",
+        "source.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/internal/source",
+    importpath = "gotest.tools/v3/internal/source",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+    deps = ["//vendor/github.com/pkg/errors"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":source",
+    visibility = ["//vendor/gotest.tools/v3:__subpackages__"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/poll/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "poll",
+    srcs = [
+        "check.go",
+        "poll.go",
+    ],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/poll",
+    importpath = "gotest.tools/v3/poll",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//vendor/gotest.tools/v3/internal/assert",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":poll",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ vendor/gotest.tools/v3/skip/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "skip",
+    srcs = ["skip.go"],
+    importmap = "github.com/docker/docker/vendor/gotest.tools/v3/skip",
+    importpath = "gotest.tools/v3/skip",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//vendor/gotest.tools/v3/internal/format",
+        "//vendor/gotest.tools/v3/internal/source",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":skip",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/drivers/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "drivers",
+    srcs = [
+        "adapter.go",
+        "extpoint.go",
+        "proxy.go",
+    ],
+    importpath = "github.com/docker/docker/volume/drivers",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//errdefs",
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//volume",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":drivers",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "drivers_test",
+    srcs = [
+        "extpoint_test.go",
+        "proxy_test.go",
+    ],
+    embed = [":drivers"],
+    deps = [
+        "//pkg/plugins",
+        "//vendor/github.com/docker/go-connections/tlsconfig",
+        "//volume/testutils",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/local/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,71 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "local",
+    srcs = [
+        "local.go",
+        "local_unix.go",
+        "local_windows.go",
+    ],
+    importpath = "github.com/docker/docker/volume/local",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//daemon/names",
+        "//errdefs",
+        "//pkg/idtools",
+        "//quota",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//volume",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//vendor/github.com/docker/go-units",
+            "//vendor/github.com/moby/sys/mount",
+            "//vendor/github.com/moby/sys/mountinfo",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":local",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "local_test",
+    srcs = [
+        "local_linux_test.go",
+        "local_test.go",
+    ],
+    embed = [":local"],
+    deps = [
+        "//pkg/idtools",
+        "//vendor/github.com/moby/sys/mountinfo",
+        "//vendor/gotest.tools/v3/skip",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//quota",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//quota",
+            "//vendor/gotest.tools/v3/assert",
+            "//vendor/gotest.tools/v3/assert/cmp",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/mounts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,49 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "mounts",
+    srcs = [
+        "lcow_parser.go",
+        "linux_parser.go",
+        "mounts.go",
+        "parser.go",
+        "validate.go",
+        "volume_copy.go",
+        "volume_unix.go",
+        "volume_windows.go",
+        "windows_parser.go",
+    ],
+    importpath = "github.com/docker/docker/volume/mounts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types/mount",
+        "//pkg/idtools",
+        "//pkg/stringid",
+        "//vendor/github.com/opencontainers/selinux/go-selinux/label",
+        "//vendor/github.com/pkg/errors",
+        "//volume",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":mounts",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "mounts_test",
+    srcs = [
+        "parser_test.go",
+        "validate_test.go",
+        "validate_unix_test.go",
+        "validate_windows_test.go",
+    ],
+    embed = [":mounts"],
+    deps = [
+        "//api/types/mount",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+    ],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/service/opts/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "opts",
+    srcs = ["opts.go"],
+    importpath = "github.com/docker/docker/volume/service/opts",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":opts",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/service/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,89 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "service",
+    srcs = [
+        "by.go",
+        "convert.go",
+        "db.go",
+        "default_driver.go",
+        "default_driver_stubs.go",
+        "errors.go",
+        "restore.go",
+        "service.go",
+        "store.go",
+        "store_unix.go",
+        "store_windows.go",
+    ],
+    importpath = "github.com/docker/docker/volume/service",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//api/types",
+        "//api/types/filters",
+        "//errdefs",
+        "//pkg/directory",
+        "//pkg/idtools",
+        "//pkg/plugingetter",
+        "//pkg/stringid",
+        "//vendor/github.com/moby/locker",
+        "//vendor/github.com/pkg/errors",
+        "//vendor/github.com/sirupsen/logrus",
+        "//vendor/go.etcd.io/bbolt",
+        "//volume",
+        "//volume/drivers",
+        "//volume/mounts",
+        "//volume/service/opts",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//volume/local",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//volume/local",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//volume/local",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":service",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "service_test",
+    srcs = [
+        "db_test.go",
+        "restore_test.go",
+        "service_linux_test.go",
+        "service_test.go",
+        "store_test.go",
+    ],
+    embed = [":service"],
+    deps = [
+        "//api/types/filters",
+        "//errdefs",
+        "//vendor/github.com/google/go-cmp/cmp",
+        "//vendor/go.etcd.io/bbolt",
+        "//vendor/gotest.tools/v3/assert",
+        "//vendor/gotest.tools/v3/assert/cmp",
+        "//volume",
+        "//volume/drivers",
+        "//volume/service/opts",
+        "//volume/testutils",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:android": [
+            "//pkg/idtools",
+            "//volume/local",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//pkg/idtools",
+            "//volume/local",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/testutils/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testutils",
+    srcs = ["testutils.go"],
+    importpath = "github.com/docker/docker/volume/testutils",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//pkg/plugingetter",
+        "//pkg/plugins",
+        "//volume",
+    ],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":testutils",
+    visibility = ["//visibility:public"],
+)
+
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ volume/BUILD.bazel	1970-01-01 00:00:00.000000000 +0000
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "volume",
+    srcs = ["volume.go"],
+    importpath = "github.com/docker/docker/volume",
+    visibility = ["//visibility:public"],
+)
+
+alias(
+    name = "go_default_library",
+    actual = ":volume",
+    visibility = ["//visibility:public"],
+)
+
