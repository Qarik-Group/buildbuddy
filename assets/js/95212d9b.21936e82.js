"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[700],{4137:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=r,h=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return t?a.createElement(h,o(o({ref:n},d),{},{components:t})):a.createElement(h,o({ref:n},d))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8735:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return d},default:function(){return c}});var a=t(7462),r=t(3366),i=(t(7294),t(4137)),o=["components"],l={id:"workflows-config",title:"Workflows configuration",sidebar_label:"Workflows configuration"},s=void 0,u={unversionedId:"workflows-config",id:"workflows-config",title:"Workflows configuration",description:"This page provides documentation for buildbuddy.yaml, which can be placed",source:"@site/../docs/workflows-config.md",sourceDirName:".",slug:"/workflows-config",permalink:"/docs/workflows-config",editUrl:"https://github.com/buildbuddy-io/buildbuddy/edit/master/docs/../docs/workflows-config.md",tags:[],version:"current",lastUpdatedBy:"Brandon Duffany",lastUpdatedAt:1643819499,formattedLastUpdatedAt:"2/2/2022",frontMatter:{id:"workflows-config",title:"Workflows configuration",sidebar_label:"Workflows configuration"},sidebar:"someSidebar",previous:{title:"Workflows setup",permalink:"/docs/workflows-setup"},next:{title:"Troubleshooting",permalink:"/docs/troubleshooting"}},d=[{value:"Example config",id:"example-config",children:[],level:2},{value:"Mac configuration",id:"mac-configuration",children:[],level:2},{value:"buildbuddy.yaml schema",id:"buildbuddyyaml-schema",children:[{value:"<code>BuildBuddyConfig</code>",id:"buildbuddyconfig",children:[],level:3},{value:"<code>Action</code>",id:"action",children:[],level:3},{value:"<code>Triggers</code>",id:"triggers",children:[],level:3},{value:"<code>PushTrigger</code>",id:"pushtrigger",children:[],level:3},{value:"<code>PullRequestTrigger</code>",id:"pullrequesttrigger",children:[],level:3}],level:2}],p={toc:d};function c(e){var n=e.components,t=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This page provides documentation for ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbuddy.yaml"),", which can be placed\nat the root of your git repo to configure BuildBuddy workflow execution."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The configuration in ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbuddy.yaml")," only takes effect after you\n",(0,i.kt)("a",{parentName:"p",href:"workflows-setup#enable-workflows-for-a-repo"},"enable workflows for the repo"),"."))),(0,i.kt)("h2",{id:"example-config"},"Example config"),(0,i.kt)("p",null,"You can copy this example config as a starting point for your own ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbuddy.yaml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'actions:\n  - name: "Test all targets"\n    triggers:\n      push:\n        branches:\n          - "main"\n      pull_request:\n        branches:\n          - "main"\n    bazel_commands:\n      - "test //..."\n')),(0,i.kt)("p",null,"This config is equivalent to the default config that we use if you do\nnot have a ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbuddy.yaml"),", with one exception: this example uses ",(0,i.kt)("inlineCode",{parentName:"p"},'"main"'),"\nfor the branch name -- if you copy this config, be sure to replace that with\nthe name of your main branch. By default, we run the above bazel command\nwhen any branch is pushed."),(0,i.kt)("p",null,"Other points to note:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Remote cache and remote execution (RBE) require additional configuration.\nThe configuration steps are the same as when running Bazel locally.\nSee the ",(0,i.kt)("strong",{parentName:"li"},"Setup")," page in the BuildBuddy UI."),(0,i.kt)("li",{parentName:"ul"},"Bazel commands are run directly in your workspace, which means that your\n",(0,i.kt)("inlineCode",{parentName:"li"},".bazelrc")," is respected. If you have lots of flags, we recommend adding\nthem to your ",(0,i.kt)("inlineCode",{parentName:"li"},".bazelrc")," instead of adding them in this YAML config."),(0,i.kt)("li",{parentName:"ul"},"We run your commands with a ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/bazelbuild/bazelisk"},"bazelisk"),"-compatible\nwrapper so that your ",(0,i.kt)("inlineCode",{parentName:"li"},".bazelversion")," file is respected. If\n",(0,i.kt)("inlineCode",{parentName:"li"},".bazelversion")," is missing, the latest version of Bazel is used. We\nalways recommend including a ",(0,i.kt)("inlineCode",{parentName:"li"},".bazelversion")," in your repo to prevent\nproblems caused by using conflicting versions of Bazel in different\nbuild environments.")),(0,i.kt)("h2",{id:"mac-configuration"},"Mac configuration"),(0,i.kt)("p",null,"By default, workflows will execute on BuildBuddy's Linux executors,\nbut it is also possible to run workflows on macOS by using self-hosted\nexecutors."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Set up one or more Mac executors that will be dedicated to running\nworkflows, following the steps in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/enterprise-mac-rbe"},"Enterprise\nMac RBE Setup")," guide."),(0,i.kt)("p",{parentName:"li"},"Then, in your ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbuddy-executor.plist")," file, find the\n",(0,i.kt)("inlineCode",{parentName:"p"},"EnvironmentVariables")," section and set ",(0,i.kt)("inlineCode",{parentName:"p"},"MY_POOL")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"workflows"),". You'll\nalso need to set ",(0,i.kt)("inlineCode",{parentName:"p"},"SYS_MEMORY_BYTES")," to allow enough memory to be\nused for workflows (a minimum of 8GB is required)."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"        ...\n        <key>EnvironmentVariables</key>\n        <dict>\n            ...\n            \x3c!-- Set the required executor pool name for workflows --\x3e\n            <key>MY_POOL</key>\n            <string>workflows</string>\n            \x3c!-- Allocate 16GB of memory to workflows (8GB minimum) --\x3e\n            <key>SYS_MEMORY_BYTES</key>\n            <string>16000000000</string>\n        </dict>\n        ...\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"If you haven't already, ",(0,i.kt)("a",{parentName:"p",href:"/docs/workflows-setup#enable-workflows-for-a-repo"},"enable workflows for your\nrepo"),", then create a\nfile called ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbuddy.yaml")," at the root of your repo. See the\n",(0,i.kt)("a",{parentName:"p",href:"#example-config"},"Example config")," for a starting point.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Set ",(0,i.kt)("inlineCode",{parentName:"p"},'os: "darwin"')," on the workflow action that you would like to build\non macOS. For M1 Macs, add ",(0,i.kt)("inlineCode",{parentName:"p"},'arch: "arm64"')," as well. Note: if you\ncopy another action as a starting point, be sure to give the new action\na unique name:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'actions:\n  - name: "Test all targets (Mac)"\n    os: "darwin" # <-- add this line\n    arch: "arm64" # <-- add this line for M1 Macs only\n    triggers:\n      push:\n        branches:\n          - "main"\n      pull_request:\n        branches:\n          - "main"\n    bazel_commands:\n      - "test //... --build_metadata=ROLE=CI --bes_backend=grpcs://cloud.buildbuddy.io --bes_results_url=https://app.buildbuddy.io/invocation/"\n')),(0,i.kt)("p",null,"That's it! Whenever any of the configured triggers are matched, one of\nthe Mac executors in the ",(0,i.kt)("inlineCode",{parentName:"p"},"workflows")," pool should execute the\nworkflow, and BuildBuddy will publish the results to your branch."),(0,i.kt)("h2",{id:"buildbuddyyaml-schema"},"buildbuddy.yaml schema"),(0,i.kt)("h3",{id:"buildbuddyconfig"},(0,i.kt)("inlineCode",{parentName:"h3"},"BuildBuddyConfig")),(0,i.kt)("p",null,"The top-level BuildBuddy workflow config, which specifies bazel commands\nthat can be run on a repo, as well as the events that trigger those commands."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Fields:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"actions"))," (",(0,i.kt)("a",{parentName:"li",href:"#action"},(0,i.kt)("inlineCode",{parentName:"a"},"Action"))," list): List of actions that can be triggered by BuildBuddy.\nEach action corresponds to a separate check on GitHub.\nIf multiple actions are matched for a given event, the actions are run in\norder. If an action fails, subsequent actions will still be executed.")),(0,i.kt)("h3",{id:"action"},(0,i.kt)("inlineCode",{parentName:"h3"},"Action")),(0,i.kt)("p",null,"A named group of Bazel commands that run when triggered."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Fields:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"name"))," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): A name unique to this config, which shows up as the name of the check\nin GitHub."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"triggers"))," (",(0,i.kt)("a",{parentName:"li",href:"#triggers"},(0,i.kt)("inlineCode",{parentName:"a"},"Triggers")),"): The triggers that should cause this action to be run."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"os"))," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The operating system on which to run the workflow.\nDefaults to ",(0,i.kt)("inlineCode",{parentName:"li"},'"linux"'),". ",(0,i.kt)("inlineCode",{parentName:"li"},'"darwin"')," (macOS) is also supported, but\nrequires using self-hosted Mac executors running on a dedicated\n",(0,i.kt)("inlineCode",{parentName:"li"},"workflows")," pool."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"arch"))," (",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"): The CPU architecture of the workflow runner.\nDefaults to ",(0,i.kt)("inlineCode",{parentName:"li"},'"amd64"'),". ",(0,i.kt)("inlineCode",{parentName:"li"},'"arm64"')," is also supported when running under\n",(0,i.kt)("inlineCode",{parentName:"li"},'os: "darwin"'),", but requires using self-hosted M1 Mac executors running\non a dedicated ",(0,i.kt)("inlineCode",{parentName:"li"},"workflows")," pool."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"bazel_commands"))," (",(0,i.kt)("inlineCode",{parentName:"li"},"string")," list): Bazel commands to be run in order.\nIf a command fails, subsequent ones are not run, and the action is\nreported as failed. Otherwise, the action is reported as succeeded.")),(0,i.kt)("h3",{id:"triggers"},(0,i.kt)("inlineCode",{parentName:"h3"},"Triggers")),(0,i.kt)("p",null,"Defines whether an action should run when a branch is pushed to the repo."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Fields:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"push"))," (",(0,i.kt)("a",{parentName:"li",href:"#push-trigger"},(0,i.kt)("inlineCode",{parentName:"a"},"PushTrigger")),"): Configuration for push events associated with the repo.\nThis is mostly useful for reporting commit statuses that show up on the\nhome page of the repo."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"pull_request"))," (",(0,i.kt)("a",{parentName:"li",href:"#pull-request-trigger"},(0,i.kt)("inlineCode",{parentName:"a"},"PullRequestTrigger")),"):\nConfiguration for pull request events associated with the repo.\nThis is required if you want to use BuildBuddy to report the status of\nthis action on pull requests, and optionally prevent pull requests from\nbeing merged if the action fails.")),(0,i.kt)("h3",{id:"pushtrigger"},(0,i.kt)("inlineCode",{parentName:"h3"},"PushTrigger")),(0,i.kt)("p",null,"Defines whether an action should execute when a branch is pushed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Fields:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"branches"))," (",(0,i.kt)("inlineCode",{parentName:"li"},"string")," list): The branches that, when pushed to, will trigger the action.")),(0,i.kt)("h3",{id:"pullrequesttrigger"},(0,i.kt)("inlineCode",{parentName:"h3"},"PullRequestTrigger")),(0,i.kt)("p",null,"Defines whether an action should execute when a pull request (PR) branch is\npushed."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Fields:")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"branches"))," (",(0,i.kt)("inlineCode",{parentName:"li"},"string")," list): The ",(0,i.kt)("em",{parentName:"li"},"target")," branches of a pull request.\nFor example, if this is set to ",(0,i.kt)("inlineCode",{parentName:"li"},'[ "v1", "v2" ]'),", then the\nassociated action is only run when a PR wants to merge a branch ",(0,i.kt)("em",{parentName:"li"},"into"),"\nthe ",(0,i.kt)("inlineCode",{parentName:"li"},"v1")," branch or the ",(0,i.kt)("inlineCode",{parentName:"li"},"v2")," branch.")))}c.isMDXComponent=!0}}]);