"use strict";(self.webpackChunkbuildbuddy_docs_website=self.webpackChunkbuildbuddy_docs_website||[]).push([[1477],{10:function(e){e.exports=JSON.parse('{"blogPosts":[{"id":"welcoming-brentley-jones","metadata":{"permalink":"/blog/welcoming-brentley-jones","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/welcoming-brentley-jones.md","source":"@site/blog/welcoming-brentley-jones.md","title":"Welcoming Brentley Jones","description":"At BuildBuddy, our mission is to bring the world\'s best developer tools to every company. A big part of that mission involves connecting engineers across different companies, sharing knowledge, and keeping an open dialog on best practices.","date":"2021-12-13T12:00:00.000Z","formattedDate":"December 13, 2021","tags":[{"label":"company","permalink":"/blog/tags/company"},{"label":"team","permalink":"/blog/tags/team"}],"readingTime":0.77,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"nextItem":{"title":"Welcoming Lulu Zhang","permalink":"/blog/welcoming-lulu-zhang"}},"content":"At BuildBuddy, our mission is to bring the world\'s best developer tools to every company. A big part of that mission involves connecting engineers across different companies, sharing knowledge, and keeping an open dialog on best practices.\\n\\nThat\'s why we\'re so excited to share that [**Brentley Jones**](https://brentleyjones.com) has joined BuildBuddy as a Staff Developer Evangelist. His deep experience with Bazel at scale will directly benefit BuildBuddy users and customers.\\n\\nBrentley is a maintainer of Bazel\'s [rules_apple](https://github.com/bazelbuild/rules_apple/blob/master/MAINTENANCE.md#maintainers) and [rules_swift](https://github.com/bazelbuild/rules_swift/) which contain Bazel\'s support for iOS, macOS, Swift, and more. He\'s also a regular contributor to the [Bazel Slack](https://slack.bazel.build/), and the [Bazel GitHub repo](https://github.com/bazelbuild/bazel/issues?q=author%3Abrentleyjones).\\n\\nBrentley joins us from Lyft, where he was a Staff Software Engineer on their Client Tooling team. Prior to Lyft, Brentley was an engineer at Target, where he led their migration to Bazel.\\n\\n![](../static/img/blog/welcome_brentley.png)\\n\\nWe look forward to working alongside Brentley to build the future of developer tools.\\n\\nWelcome to BuildBuddy, Brentley!"},{"id":"welcoming-lulu-zhang","metadata":{"permalink":"/blog/welcoming-lulu-zhang","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/welcoming-lulu-zhang.md","source":"@site/blog/welcoming-lulu-zhang.md","title":"Welcoming Lulu Zhang","description":"To fulfill our mission of bringing the world\'s best developer tools to every company, we\'re continually expanding our team to keep up with demand we\'re seeing from customers. That\'s why we\'re excited to share today that Lulu Zhang is joining BuildBuddy\'s engineering team.","date":"2021-12-01T01:12:00.000Z","formattedDate":"December 1, 2021","tags":[{"label":"company","permalink":"/blog/tags/company"},{"label":"team","permalink":"/blog/tags/team"}],"readingTime":0.435,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"Welcoming Brentley Jones","permalink":"/blog/welcoming-brentley-jones"},"nextItem":{"title":"BuildBuddy v2.7.0 Release Notes","permalink":"/blog/buildbuddy-v2-7-0-release-notes"}},"content":"To fulfill our mission of bringing the world\'s best developer tools to every company, we\'re continually expanding our team to keep up with demand we\'re seeing from customers. That\'s why we\'re excited to share today that [**Lulu Zhang**](https://www.linkedin.com/in/luluzhang66/) is joining BuildBuddy\'s engineering team.\\n\\nLulu joins us from Thumbtack. Prior to Thumbtack, Lulu spent 5 years at Google where she worked on Google Play, Project Fi, and Area 120.\\n\\n![](../static/img/blog/welcome_lulu.png)\\n\\nWe look forward to working alongside Lulu to build the future of developer tools.\\n\\nWelcome to BuildBuddy, Lulu!"},{"id":"buildbuddy-v2-7-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v2-7-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v2-7-0-release-notes.md","source":"@site/blog/buildbuddy-v2-7-0-release-notes.md","title":"BuildBuddy v2.7.0 Release Notes","description":"To celebrate Bazelcon 2021 (and our Bazelcon talk), we\'ve got a lot in store for you in this release! We\'re excited to share that v2.7.0 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open-source via Github, Docker, and our Helm Charts!","date":"2021-11-18T12:00:00.000Z","formattedDate":"November 18, 2021","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":3.92,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"Welcoming Lulu Zhang","permalink":"/blog/welcoming-lulu-zhang"},"nextItem":{"title":"BuildBuddy v2.5.0 Release Notes","permalink":"/blog/buildbuddy-v2-5-0-release-notes"}},"content":"To celebrate Bazelcon 2021 (and [our Bazelcon talk](https://opensourcelive.withgoogle.com/events/bazelcon2021?talk=bazel-in-the-cloud)), we\'ve got a lot in store for you in this release! We\'re excited to share that **v2.7.0** of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open-source via [Github](https://github.com/buildbuddy-io/buildbuddy), [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image), and [our Helm Charts](https://github.com/buildbuddy-io/buildbuddy-helm)!\\n\\nWe\'ve also updated [the list of open source repositories that use BuildBuddy](https://www.buildbuddy.io/open-source-repos). If you have an open source repo that\'s using BuildBuddy, and would like to be included on the list - please fill out the quick form at the bottom of that page!\\n\\nThanks to everyone using open source, cloud-hosted, and enterprise BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\n## New in v2.7.0\\n\\n- **M1 Mac support** - we now [publish](https://github.com/buildbuddy-io/buildbuddy/releases/tag/v2.7.0) BuildBuddy executor binaries built for M1 Macs. These can be used with BuildBuddy Cloud\'s **Bring Your Own Executors** feature, BuildBuddy managed Mac executors, or in a self-hosted RBE cluster.\\n\\n- **Build log improvements** - the build log viewer is core to the BuildBuddy experience. We\'ve made a ton of improvements in this release to make this log viewing experience even better. Build logs are now **live** and update much more frequently. You can also now **search** build logs with a built-in search bar, **download** the raw build log text, and even **wrap** long lines.\\n\\n![](../static/img/blog/build_logs.png)\\n\\n- **Cache miss debugging UI** - one of the requests we get most frequently is for help debugging remote cache misses. There\'s a [guide](https://docs.bazel.build/versions/main/remote-execution-caching-debug.html) in the Bazel documentation, but it can be cumbersome to follow. We\'ve made this process easier by surfacing individual action cache misses directly on the BuildBuddy cache tab. This allows you to quickly dive into which targets and actions missed cache and compare them against previous builds. You can click on any of these action hashes to explore the action\'s input files, environment variables, and command arguments. This is just the first step in making cache misses easier to debug - we\'re working on making this process even easier.\\n\\n![](../static/img/blog/cache_misses.png)\\n\\n- **Member management & roles** - we\'ve heard from many of the large organizations that we work with that they\'d like to be able to limit which members of their organization are able to access certain BuildBuddy functionality - like editing organization settings. In order to support this, we\'ve added a new member management UI on the BuildBuddy organization settings page. Here you can assign either `Admin` or `Developer` roles to members of your BuildBuddy organization.\\n\\n![](../static/img/blog/members.png)\\n\\n- **Usage page** - while our Trends page gives users great insight into how their build metrics are trending over time, it\'s less useful for getting a sense of your total BuildBuddy usage for the current month (and previous months). We\'ve introduced a new Usage page that allows you to get a quick glance of the metrics that are important for billing.\\n  ![](../static/img/blog/usage.png)\\n\\n- **And much much more** - Every release comes packed with so many new features, performance improvements and bug fixes that we can\'t get to them all. Here are some more highlights:\\n  - Mac support for remote persistent workers\\n  - API improvements, including a build log download endpoint and target filtering by tag\\n  - Fixes for issues that can cause unnecessary BEP disconnects\\n  - Improvements to autoscaling scale-downs\\n  - Reduced memory footprint\\n  - New BEP live data export functionality\\n  - Flag overrides for platform properties for switching between pools without invalidating the cache\\n  - SAML quality of life improvements\\n  - Configurable executor docker image warm up\\n  - Support for Azure Storage as a storage backend\\n  - AWS WebIdentity authentication support\\n  - Private container registry support\\n  - A built-in Xcode locator in executors for discovering available Xcode versions\\n\\n## Coming soon!\\n\\nIn addition to all of these great new features, we\'ve also been laying the groundwork for some big new features that we\'re working on:\\n\\n- A new caching infrastructure that will enable far more flexibility in where and how cache artifacts are stored.\\n- Mac support for [BuildBuddy Workflows](https://blog.buildbuddy.io/blog/meet-buildbuddy-workflows/).\\n- A managed cloud Bazel service that uses [Firecracker microVMs](https://firecracker-microvm.github.io/) to give you warm, incremental Bazel instances in the cloud (right next to your RBE cluster) that spin up in milliseconds.\\n- A web-based code editor built on top of VSCode (similar to [vscode.dev](https://vscode.dev/)) built entirely for Bazel that can kick off fully incremental RBE-enabled cloud Bazel builds & tests. If you\'re an ex-Googler who misses Cider &mdash; get excited!\\n\\nIf you\'re interested in any of these upcoming features and would like to try them out &mdash; [sign up here for early access](https://buildbuddy.typeform.com/to/BZikT3Eu)!\\n\\nThat\'s it for this release. Stay tuned for more updates!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"buildbuddy-v2-5-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v2-5-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v2-5-0-release-notes.md","source":"@site/blog/buildbuddy-v2-5-0-release-notes.md","title":"BuildBuddy v2.5.0 Release Notes","description":"We\'re excited to share that v2.5.0 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open-source via Github, Docker, and our Helm Charts!","date":"2021-08-30T12:00:00.000Z","formattedDate":"August 30, 2021","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":3.19,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v2.7.0 Release Notes","permalink":"/blog/buildbuddy-v2-7-0-release-notes"},"nextItem":{"title":"Meet BuildBuddy Workflows","permalink":"/blog/meet-buildbuddy-workflows"}},"content":"We\'re excited to share that v2.5.0 of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open-source via [Github](https://github.com/buildbuddy-io/buildbuddy), [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image), and [our Helm Charts](https://github.com/buildbuddy-io/buildbuddy-helm)!\\n\\nThanks to everyone using open source, cloud-hosted, and enterprise BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\n## New in v2.5.0\\n\\n- **The new global filter** - BuildBuddy collects lots of build information across CI and local builds. In order to make navigating these builds easier, we\'ve introduced a new global filter. The global filter allows you to filter by status and role on any page - with more options including user, repo, and branch coming soon.\\n\\n![](../static/img/blog/global_filter.png)\\n\\n- **Date picker** - To complement the new global filter, we\'ve also added a date picker. The date picker allows you to select a time range and see builds, trends, etc. for exactly the time period you\'re interested in.\\n\\n![](../static/img/blog/date_picker.png)\\n\\n- **Clickable trends** - Now that you can filter any view by date, we\'ve added a feature to the Trends page that allows you to click on a data point and be taken to a filtered view of builds from just that time period. As part of this change, the trends page now also respects your local time zone.\\n\\n![](../static/img/blog/trends.png)\\n\\n- **Branch information** - BuildBuddy now collects information about a build\'s git branch in addition to the repo and commit info already collected. This makes it even easier to navigate your builds.\\n\\n![](../static/img/blog/branch.png)\\n\\n- **Light terminal theme** - For those of you who suffer from eye strain when reading light text on dark backgrounds: we\'ve heard your feedback. We\'ve added a new light terminal theme that can be enabled in your personal settings.\\n\\n![](../static/img/blog/light_terminal.png)\\n\\n- **Improved flaky test support** - Flaky tests can destroy developer productivity. To make them easier to deal with, we\'ve added a new feature that calls out flaky tests & timeouts more explicitly. We\'ve also improved the behavior of our RBE to reduce flakes due to timeouts when caused by external factors like Docker image pulls.\\n\\n![](../static/img/blog/flaky_test.png)\\n\\n- **Remote executions tab** - We\'ve had a hidden feature for a while that allowed you to click on the `Remote execution on` label to see an overview of remotely executed actions for RBE builds. We\'ve now promoted this feature to its own `Executions` tab. With this change come new features like search and filtering.\\n\\n![](../static/img/blog/executions_tab.png)\\n\\n- **Action input & output files** - When clicking on an individual remotely executed actions, we now have a new file viewer that allows you to navigate the input files of the action. You can click on any of these files (as well as any output files the action has) to download them from the remote cache.\\n\\n![](../static/img/blog/file_tree.png)\\n\\n- **Action timing** - The timing tab gives you a breakdown of execution timing from Bazel\'s point of view, but there\'s another story to tell from the remote executor\'s point of view. Action pages now show a visual breakdown of time spent in queue, downloading inputs, executing, and uploading outputs for each remotely executed action.\\n\\n![](../static/img/blog/action_timeline.png)\\n\\n- **Revamped settings page** - We\'ve revamped the settings page to make it easier to manage your BuildBuddy account.\\n\\n![](../static/img/blog/settings.png)\\n\\n- **And much much more** - Every release comes packed with so many new features, performance improvements and bug fixes that we can\'t get to them all. Here are some more highlights:\\n  - Support for serving static files from a CDN\\n  - Support for MinIO as a storage backend\\n  - Buildkite links now link to the specific Buildkite job that spawned the invocation\\n  - Support for distributed tracing backends like Jaeger, Google Cloud Trace, and others\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"meet-buildbuddy-workflows","metadata":{"permalink":"/blog/meet-buildbuddy-workflows","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/meet-buildbuddy-workflows.md","source":"@site/blog/meet-buildbuddy-workflows.md","title":"Meet BuildBuddy Workflows","description":"Traditional CI systems, like Jenkins, Travis, CircleCI, and BuildKite, are built around the concept of a pipeline. Pipelines allow you to specify a list of build/test steps to run for each commit or pull request to your repo. Pipelines are great because you can run many in parallel across multiple machines. Unfortunately, there are often dependencies between these pipelines, for example a build step that must be completed before a test step can begin.","date":"2021-06-30T12:00:00.000Z","formattedDate":"June 30, 2021","tags":[{"label":"product","permalink":"/blog/tags/product"}],"readingTime":4.66,"truncated":false,"authors":[{"name":"Brandon Duffany","title":"Engineer @ BuildBuddy","url":"https://www.linkedin.com/in/brandon-duffany-39b7217a","imageURL":"https://avatars.githubusercontent.com/u/2414826?v=4"}],"prevItem":{"title":"BuildBuddy v2.5.0 Release Notes","permalink":"/blog/buildbuddy-v2-5-0-release-notes"},"nextItem":{"title":"Introducing BuildBuddy v2","permalink":"/blog/introducing-buildbuddy-v2"}},"content":"Traditional [CI systems](https://en.wikipedia.org/wiki/Continuous_integration), like Jenkins, Travis, CircleCI, and BuildKite, are built around the concept of a pipeline. Pipelines allow you to specify a list of build/test steps to run for each commit or pull request to your repo. Pipelines are great because you can run many in parallel across multiple machines. Unfortunately, there are often dependencies between these pipelines, for example a build step that must be completed before a test step can begin.\\n\\nSome tools, like [GitLab Pipelines](https://docs.gitlab.com/ee/ci/pipelines/), attempt to solve this problem by allowing you to specify dependencies between pipelines. This approach is better, but forces you to manually maintain the relationships between pipelines in a pile of YAML configuration files. As the number of dependencies grow, any sufficiently complex CI system [starts to resemble a build system](https://gregoryszorc.com/blog/2021/04/07/modern-ci-is-too-complex-and-misdirected/).\\n\\nNone of these pipeline-based approaches are well suited for Bazel\'s approach to dependency management and remote build execution, which involves generating a [Directed Acyclic Graph](https://en.wikipedia.org/wiki/Directed_acyclic_graph) of all build and test actions. Bazel\'s approach allows for optimal parallelization and caching of these actions. It also enables rebuilding and retesting only affected targets, saving both engineering time and compute resources.\\n\\n## Introducing a Bazel-focused CI Solution\\n\\nIn today\'s [BuildBuddy v2.3 release](https://github.com/buildbuddy-io/buildbuddy/releases/tag/v2.3.0), which is now live on BuildBuddy Cloud, we\'re launching **BuildBuddy Workflows**. BuildBuddy Workflows is a Continuous Integration (CI) solution for Bazel repositories hosted on GitHub (with support for other providers coming soon).\\n\\nLike other CI solutions, Workflows give you the confidence that your code\\nbuilds successfully and passes all tests before you merge pull requests or\\ndeploy a new release.\\n\\nBut because BuildBuddy Workflows were built for Bazel repos and tightly\\nintegrated with BuildBuddy RBE and Remote Caching, they are **_really fast_**.\\n\\n## How fast are BuildBuddy Workflows?\\n\\nWe\'ve used BuildBuddy Workflows on our own repos for the past few\\nmonths, comparing them side-by-side with our existing CI solution built on GitHub Actions with BuildBuddy RBE and Remote Caching enabled.\\n\\nBy leveraging warm, hosted, Bazel processes, as well as BuildBuddy\'s\\nremote caching and execution, Workflows dramatically sped up our CI runs.\\nCompared to our previous solution (which used BuildBuddy RBE and Remote Caching on GitHub Runners), we reduced the median duration by nearly **8X** &mdash; with most CI runs completing in just a few seconds.\\n\\nThis overlapping histogram chart shows the complete picture. Note that\\nthe majority of BuildBuddy workflow runs took 30 seconds or less, while\\nnearly all runs on GitHub Actions took at least 2 minutes and 15 seconds:\\n\\n![overlapping histogram comparing BuildBuddy and GitHub actions](../static/img/blog/workflows.png)\\n\\n## How did we make BuildBuddy Workflows so fast?\\n\\nIn addition to convenience and security, one of our main goals for Workflows\\nwas to maximize performance, even for very large source repositories.\\n\\nWe did this in two main ways:\\n\\n1. Ensuring a **fast network connection between Bazel and BuildBuddy\'s RBE & caching servers**.\\n2. Running workflows against **hosted, warm, Bazel instances**.\\n\\n### Fast connection to BuildBuddy RBE\\n\\nIn our experience, network latency is often the biggest bottleneck in many Bazel Remote Build Execution and Remote Caching setups.\\n\\nThe solution here was simple: run Workflows on executors in the same datacenters where BuildBuddy RBE and Cache nodes are deployed.\\n\\nWith GitHub actions or other CI solutions, the network connection might\\nbe fast (particularly after the recent network optimizations we made in\\n[BuildBuddy v2](/blog/introducing-buildbuddy-v2)) &mdash; but not nearly as fast\\nas having workflow runners on the same local network as BuildBuddy\\nitself.\\n\\n### Hosted, Warm, Bazel instances\\n\\nOnce you have a sufficiently fast RBE and Remote Caching setup, and have removed network bottlenecks &mdash; the CI bottleneck often becomes Bazel\'s [analysis phase](https://docs.bazel.build/versions/main/glossary.html#analysis-phase).\\n\\nBy re-using warm Bazel processes when possible, we\'re able to re-use Bazel\'s analysis cache across CI runs of the same repo. This can save several minutes per build, depending on the size of your repository and the number of external dependencies being pulled in.\\n\\nThis is similar to how [Google\'s Build Dequeuing Service](https://dl.acm.org/doi/pdf/10.1145/3395363.3397371) performs workspace selection:\\n\\n> A well-chosen workspace can increase the build speed by an\\n> order of magnitude by reusing the various cached results from the\\n> previous execution. [...] We have observed that builds that execute the same targets as a previous\\n> build are effectively no-ops using this technique\\n\\n## How do I use BuildBuddy Workflows?\\n\\nBuildBuddy Workflows are launching today, in Beta, for all GitHub users. You can get started with BuildBuddy Workflows by checking out our [setup guide](https://docs.buildbuddy.io/docs/workflows-setup/).\\nIf you\'ve already linked your GitHub account to BuildBuddy, it\'ll only take\\nabout 30 seconds to enable Workflows for your repo &mdash; just select a repo\\nto link, and we\'ll take care of the rest!\\n\\n## Other changes in BuildBuddy v2.3\\n\\nWhile the main focus of BuildBuddy v2.3 has been on launching BuildBuddy Workflows, the release also contains several other features, in addition to lots of bug fixes and performance improvements.\\n\\n### Dependency graph visualization\\n\\nWe added dependency graph visualizations for `bazel query` commands that use the `--output graph` parameter. This visualization is zoom-able and pan-able, and can render graphs with thousands of edges.\\n\\nHere\'s an example of a command you can run to generate a graph:\\n\\n```\\nbazel query \'//...\' --output graph --bes_backend=cloud.buildbuddy.io --bes_results_url=https://app.buildbuddy.io/invocation/\\n```\\n\\nAnd the resulting output:\\n\\n![Bazel query dependency graph visualization](../static/img/blog/query_graph.png)\\n\\n### Clickable RBE Actions\\n\\nFor actions executed with BuildBuddy Remote Build Execution, you can now click on individual actions to get the full set of command arguments, environment variables, execution metadata, output files, and more:\\n\\n![RBE actions view](../static/img/blog/clickable_rbe_actions.png)\\n\\nThat\'s it for this release! As always, message us on [Slack](https://buildbuddy.slack.com) or\\n[file an issue](https://github.com/buildbuddy-io/buildbuddy/issues/new)\\nif you need help, run into any issues, or have feature requests!"},{"id":"introducing-buildbuddy-v2","metadata":{"permalink":"/blog/introducing-buildbuddy-v2","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/introducing-buildbuddy-v2.md","source":"@site/blog/introducing-buildbuddy-v2.md","title":"Introducing BuildBuddy v2","description":"Our mission at BuildBuddy is to make developers more productive. When we released the first version of BuildBuddy a little over a year ago, we were blown away by the demand for tools and techniques for speeding up common developer workflows like building, testing, and debugging code. We\'ve been working hard ever since - using our own tools to build the next generation of developer tooling for all.","date":"2021-05-27T12:00:00.000Z","formattedDate":"May 27, 2021","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":4.535,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"Meet BuildBuddy Workflows","permalink":"/blog/meet-buildbuddy-workflows"},"nextItem":{"title":"BuildBuddy Achieves SOC 2 Certification","permalink":"/blog/buildbuddy-achieves-soc-2-certification"}},"content":"Our mission at BuildBuddy is to make developers more productive. When we released the [first version](https://blog.buildbuddy.io/blog/meet-buildbuddy) of BuildBuddy a little over a year ago, we were blown away by the demand for tools and techniques for speeding up common developer workflows like building, testing, and debugging code. We\'ve been working hard ever since - using our own tools to build the next generation of developer tooling for all.\\n\\nToday we\'re excited to announce v2 of BuildBuddy! We\'ve completely revamped our caching and remote build execution infrastructure to give our users and customers the one thing they care about above all else: **speed**.\\n\\n![](../static/img/blog/tensorflow.svg)\\n\\nWhen optimizing the performance of a remote build execution system, there are 3 critical bottlenecks: Caching, Sandboxing, and Execution. We\'ve made order of magnitude improvements in each of these areas, bringing clean, uncached build times for [TensorFlow](https://github.com/tensorflow/tensorflow) (7,000+ actions) on BuildBuddy RBE down from 28 minutes last August to just **3.47 minutes** with BuildBuddy v2. This build takes over **4 hours** (250 min) on a 3.3GHz i7 Macbook Pro.\\n\\n## Caching\\n\\nThe biggest remote build execution bottleneck is right in the name: **remote**. This means we have to ship source files, tools, and other inputs needed to execute the build from the host machine to a remote cluster of build servers over the network.\\n\\nIn BuildBuddy v2, some of the many improvements in this area include:\\n\\n- Completely revamped caching infrastructure for microsecond read/write latencies\\n- Improved batch performance for quickly moving 100k+ small files\\n- Load balancer optimizations to improve large file throughput\\n\\nFor a more in-depth look at optimizing for high throughput and low latency, we highly recommend [this great article from the Dropbox Engineering team](https://dropbox.tech/infrastructure/optimizing-web-servers-for-high-throughput-and-low-latency) which was incredibly helpful in identifying and fixing bottlenecks.\\n\\nAll of these improvements, when taken together, have driven a colossal improvement in both upload and download throughput across file sizes. We have more work to do in this area, but we\'re really pleased with the results in this release.\\n\\n![](../static/img/blog/upload_throughput.svg)\\n\\n## Sandboxing\\n\\nOnce we\'ve got all of the inputs we need to execute an action on a remote executor, the next step is to set up the execution root. One of Bazel\'s core features is the ability to perform [hermetic builds](https://georgi.hristozov.net/2020/11/01/the-power-of-hermetic-builds). In order to achieve this, we spin up a clean Docker container for each action to execute in. This is similar to Bazel\'s `docker` [spawn strategy](https://docs.bazel.build/versions/master/remote-execution-sandbox.html).\\n\\nWhile this helps ensure that remotely executed actions are hermetic, there is often a trade-off between hermeticity and performance. You can make this trade-off locally using Bazel\'s different spawn strategies: `sandboxed`, `local`, and `worker`.\\n\\nWhen using remote build execution, you typically don\'t have the ability to make these trade-offs. That\'s why we\'ve introduced 3 new features that give users back some of that control. By default, actions will still be executed in clean Docker images - but if you specify one of the following execution properties, you can alter that behavior:\\n\\n- `recycle-runner`: actions will still be executed in a clean execution root - but the executor will re-use an existing docker image from a pool of re-usable containers. This is similar in behavior to Bazel\'s `sandboxed` execution strategy.\\n- `preserve-workspace`: actions will re-use an execution root from a pool of re-usable workspaces and only download inputs that have been added or changed since the previously executed action, while cleaning up any outputs. This is similar in behavior to Bazel\'s `local` execution strategy.\\n- `persistent-workers`: the executor will use the [persistent-worker](https://docs.bazel.build/versions/master/persistent-workers.html) protocol to communicate with actions that support them. This can help speed up certain build actions that support persist workers (like Java, Scala, Typescript, and others) by 2-4x. This execution property can be applied at the [target level](https://docs.buildbuddy.io/docs/rbe-pools#target-level) for actions that support them. We\'ve also added support for the proposed `persistentWorkerKey` execution property which removes the need for target-level specification. This is similar in behavior to Bazel\'s `worker` execution strategy.\\n\\n## Execution\\n\\nNow that we\'ve got our inputs on the executor, and our execution root set up, our final step is the actual execution.\\n\\nWe\'ve made significant improvements here as well:\\n\\n- We\'ve upgraded our default executor cluster to run on compute-optimized Intel Cascade Lake machines with up to 3.8 GHz sustained all-core turbo.\\n- Our Mac executors now run on bare-metal Mac minis, which show huge improvements over the previous [Orka](https://www.macstadium.com/orka) machines we used for I/O intensive workloads.\\n- Our new caching and auto-scaling infrastructure supports scaling up and down from just a few executors to hundreds of machines depending on load while still supporting the `--remote_download_minimal` flag.\\n- The groundwork has been laid for what we call **Bring Your Own Executors**. This will allow users to take advantage of BuildBuddy\'s UI and global caching infrastructure while running their own executor pools.\\n\\n![](../static/img/blog/autoscaling.png)\\n\\n## Other improvements\\n\\nWhile our focus for v2 has been on RBE performance, we\'ve made plenty of other improvements in this release:\\n\\n- Improved query performance for large customers with 1 million+ invocations\\n- Added hinted handoff for write failures\\n- Fetches are now displayed in the results UI\\n- Timing tab improvements\\n- Right click to copy downloadable artifact URLs\\n- Lots and lots of reliability improvements\\n- Default Xcode version configuration options\\n\\nWe have several big announcements coming in the next few weeks, so stay tuned for more!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at **hello@buildbuddy.io** with any questions, comments, or thoughts.\\n\\nHappy Building!"},{"id":"buildbuddy-achieves-soc-2-certification","metadata":{"permalink":"/blog/buildbuddy-achieves-soc-2-certification","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildBuddy-achieves-soc-2-certification.md","source":"@site/blog/buildBuddy-achieves-soc-2-certification.md","title":"BuildBuddy Achieves SOC 2 Certification","description":"Our mission at BuildBuddy is to help developers be more productive. It\'s our highest priority to make sure that your data is safe so that you can focus on what matters: building your product.","date":"2021-04-28T12:00:00.000Z","formattedDate":"April 28, 2021","tags":[{"label":"company","permalink":"/blog/tags/company"},{"label":"security","permalink":"/blog/tags/security"}],"readingTime":0.92,"truncated":false,"authors":[{"name":"George Li","title":"Head of Sales @ BuildBuddy","url":"https://www.linkedin.com/in/gli/","imageURL":"https://avatars.githubusercontent.com/u/27219306?v=4"}],"prevItem":{"title":"Introducing BuildBuddy v2","permalink":"/blog/introducing-buildbuddy-v2"},"nextItem":{"title":"BuildBuddy v1.8.0 Release Notes","permalink":"/blog/buildbuddy-v1-8-0-release-notes"}},"content":"Our mission at BuildBuddy is to help developers be more productive. It\'s our highest priority to make sure that your data is safe so that you can focus on what matters: building your product.\\n\\nToday, we\u2019re excited to share that BuildBuddy has achieved SOC 2 certification.\\n\\n<p align=\\"center\\">\\n  <img src=\\"/img/blog/soc2.jpg\\" />\\n</p>\\n\\nThe audit was conducted by [The Cadence Group](https://thecadencegroup.com/), compliance specialists who have performed SOC reporting examinations for some of the largest software companies in the world. Our certification means that we adhere to the highest standards of security, processing integrity, and risk management.\\n\\nOur SOC 2 Report outlines how we encrypt our customer\u2019s data, control access to our systems, scan for vulnerabilities, respond to incidents, and more.\\n\\nIn addition to completing our SOC 2 audit, we\'ve partnered with [Vanta](https://www.vanta.com/products/soc-2) to continuously monitor our SOC 2 compliance and ensure that the security practices we\'ve put in place are being followed.\\n\\nWe\u2019re happy to discuss our security policies in more detail or send over a copy of our SOC 2 report. Please feel free to reach out to us at [security@buildbuddy.io](mailto:security@buildbuddy.io) for more information!"},{"id":"buildbuddy-v1-8-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-8-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-8-0-release-notes.md","source":"@site/blog/buildbuddy-v1-8-0-release-notes.md","title":"BuildBuddy v1.8.0 Release Notes","description":"We\'re excited to share that v1.8.0 of BuildBuddy is live on Cloud Hosted BuildBuddy, Enterprise, and Open Source via GitHub, Docker, and our Helm Charts!","date":"2021-03-18T12:00:00.000Z","formattedDate":"March 18, 2021","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"},{"label":"team","permalink":"/blog/tags/team"}],"readingTime":2.93,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy Achieves SOC 2 Certification","permalink":"/blog/buildbuddy-achieves-soc-2-certification"},"nextItem":{"title":"BuildBuddy v1.5.0 Release Notes","permalink":"/blog/buildbuddy-v1-5-0-release-notes"}},"content":"We\'re excited to share that v1.8.0 of BuildBuddy is live on [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/), Enterprise, and Open Source via [GitHub](https://github.com/buildbuddy-io/buildbuddy), [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image), and [our Helm Charts](https://github.com/buildbuddy-io/buildbuddy-helm)!\\n\\nThanks to everyone using open source, cloud-hosted, and enterprise BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\n**A special thank you to our new open-source contributor:**\\n\\n- [**Ashley Davies**](https://github.com/ashleydavies) who contributed several pull requests to our [Helm charts](https://github.com/buildbuddy-io/buildbuddy-helm/) in order to make them easier to use in clusters that already have an Nginx controller deployed.\\n\\n**And a warm welcome to our three new team members!\xa0**\\n\\n- [**Pari Parajuli**](https://www.linkedin.com/in/pari-parajuli/) who joins our engineering team as an intern who\'s currently studying at University of California, Berkeley.\\n- [**Vadim Berezniker**](https://www.linkedin.com/in/vadimberezniker/) who joins our engineering team after 7 years at Google on the Google Cloud team.\\n- [**Zoey Greer**](https://www.linkedin.com/in/zoey-greer/) who joins us as a software engineer from the Google Search team.\\n\\nWe\'re excited to continue growing BuildBuddy and fulfill our mission of making developers more productive!\\n\\nOur focus for this release was on reliability, performance, improved documentation,\xa0and making BuildBuddy easier to release and monitor.\\n\\n## **New in v1.8.0**\\n\\n- **Read-only API keys** - when using Bazel remote caching, teams often need to configure which machines have write access to the cache. While Bazel has some flags to control cache writes, using these can be error prone and insecure. BuildBuddy now makes this easy by introducing the ability to create both read-only and read+write api keys on your organization settings page. You can create as many API keys (and certificates) as you\'d like and distribute them to your CI machines, workstations, and other endpoints.\\n\\n![](../static/img/blog/read-only.png)\\n\\n- **Improved docs** - we\'ve completely revamped [our documentation](https://docs.buildbuddy.io/) and added support for tables of contents, syntax highlighting, better navigation, dark mode (!!), interactive widgets, and an \\"Edit this page\\" button that links directly to the correct file in our [GitHub docs directory](https://github.com/buildbuddy-io/buildbuddy/tree/master/docs) for submitting pull requests. With these great new features, we\'ll be ramping up documentation on both new and existing BuildBuddy features to make the lives of BuildBuddy users easier.\\n\\n![](../static/img/blog/docsv2.png)\\n\\n- **Testing improvements** - we\'ve invested heavily in our testing infrastructure, adding new integration tests and test fixtures that make testing BuildBuddy\'s interactions with Bazel easier. This will lead to more stable releases and faster iteration cycles going forward.\\n\\n- **Remote execution improvements** - we\'ve made more speed and reliability improvements to our remote build execution platform, including faster cache hit checking, faster auth checks, and better support for iOS builds.\\n\\n- **Buildkite integration -** invocations that are kicked off from Buildkite now link back to the Buildkite job that triggered them.\\n\\n![](../static/img/blog/buildkite.png)\\n\\n- **Grafana** - our [Helm charts](https://github.com/buildbuddy-io/buildbuddy-helm) make deploying BuildBuddy to Kubernetess cluster a breeze. One thing that\'s been tricky for many users has been accessing the Prometheus data that BuildBuddy exports in an easily digestible format. To fix this, we made it easy to [deploy Grafana and Prometheus](https://github.com/buildbuddy-io/buildbuddy-helm/tree/master/charts/buildbuddy-enterprise#example-with-prometheus--grafana) via our Helm charts with just a couple lines of configuration. It comes out of the box with a default dashboard that shows popular BuildBuddy metrics and can be easily extended to add more graphs.\\n\\n![](../static/img/blog/grafana.png)\\n\\n- **More to come** - we\'ve been laying the groundwork for two major projects that will go live in the coming weeks to make building and testing your Bazel projects even faster.\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at **hello@buildbuddy.io** with any questions, comments, or thoughts."},{"id":"buildbuddy-v1-5-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-5-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-5-0-release-notes.md","source":"@site/blog/buildbuddy-v1-5-0-release-notes.md","title":"BuildBuddy v1.5.0 Release Notes","description":"We\'re excited to share that v1.5.0 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open-source via Github, Docker, and our Helm Charts!","date":"2021-01-08T12:00:00.000Z","formattedDate":"January 8, 2021","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":2.745,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.8.0 Release Notes","permalink":"/blog/buildbuddy-v1-8-0-release-notes"},"nextItem":{"title":"BuildBuddy v1.4.0 Release Notes","permalink":"/blog/buildbuddy-v1-4-0-release-notes"}},"content":"We\'re excited to share that v1.5.0 of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open-source via [Github](https://github.com/buildbuddy-io/buildbuddy), [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image), and [our Helm Charts](https://github.com/buildbuddy-io/buildbuddy-helm)!\\n\\nThanks to everyone using open source, cloud-hosted, and enterprise BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\nA special thank you to our new open-source contributor:\\n\\n- [**Corbin McNeely-Smith**](https://github.com/restingbull) who contributed to making our auth flow more resilient to error cases, and made our health-check handlers more flexible to support different load-balancers.\\n\\nOur focus for this release was on giving\xa0users more visibility into test flakiness, monitoring &\xa0scaling improvements, and security hardening.\\n\\n## **New in v1.5.0**\\n\\n- **Test flakiness dashboard** - one of the feature requests we get most frequently from BuildBuddy users is the ability to collect target-level data and analyze it across invocations. Today we\'re taking the first step in the direction with our new test dashboard. The test dashboard allows you to monitor per-target test statuses by commit - so you can quickly identify and fix flaky test targets that slow down developer velocity.\xa0It also has a timing view that gives you a heat-map to quickly identify slow targets.\xa0This is just the first step we\'re taking in exposing more target-level data and are excited to build additional features based on your feedback!\\n\\n![](../static/img/blog/test-grid.png)\\n\\n- **Prometheus metrics** - we\'ve added a ton of new Prometheus metrics to BuildBuddy that allow open-source and Enterprise users to monitor not only BuildBuddy\'s performance, but the overall health of their developer productivity efforts. This allows you to hook into existing monitoring and alerting tools like Grafana to analyze and get notified when your developers are experiencing issues.\xa0Metrics include build duration, cache hit & miss rates, remote execution queue length, and more. For a full list of the new metrics we now expose, see our [Prometheus metric documentation](https://www.buildbuddy.io/docs/prometheus-metrics). Interested in some metrics that aren\'t on this list? Let us know!\\n\\n![](../static/img/blog/prometheus.png)\\n\\n- **Auto-scaling** - with the addition of our new Prometheus metrics, we\'ve also made improvements to the autoscaling capabilities of BuildBuddy executors. Now in addition to scaling off of raw compute metrics like CPU\xa0and RAM, BuildBuddy executors can also be configured to scale based on executor queue length and other custom metrics. This allows you to achieve better performance under heavy load while also managing your compute resources more efficiently and cost-effectively.\\n\\n![](../static/img/blog/autoscaling-prometheus.png)\\n\\n- **Security hardening** - as part of our SOC 2 compliance controls, BuildBuddy undergoes regularly scheduled penetration tests by paid security professionals.\xa0This release contains fixes for all three non-critical findings from our January 2021 pen-test.\\n\\n- **Memory leak fixes** - we found and fixed 2 memory leaks in our BuildBuddy app (using our new Prometheus metrics!) that would occasionally cause BuildBuddy app servers to restart due to memory pressure.\\n\\n- **Mac executor bug fix** - we fixed a tricky bug caused by quirks in the way OS\xa0X handles hard-linking that significantly improves the reliability of our Mac RBE executors.\\n\\n- **More bug fixes** - there are lots of other bug fixes in this release including improved deadline and timeout handling, executor task scheduling improvements, and more!\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"buildbuddy-v1-4-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-4-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-4-0-release-notes.md","source":"@site/blog/buildbuddy-v1-4-0-release-notes.md","title":"BuildBuddy v1.4.0 Release Notes","description":"We\'re excited to share that v1.4.0 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open-source via Github and Docker!","date":"2020-11-12T12:00:00.000Z","formattedDate":"November 12, 2020","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":3.76,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.5.0 Release Notes","permalink":"/blog/buildbuddy-v1-5-0-release-notes"},"nextItem":{"title":"Welcoming George Li, Head of Sales","permalink":"/blog/welcoming-george-li-head-of-sales"}},"content":"We\'re excited to share that v1.4.0 of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open-source via [Github](https://github.com/buildbuddy-io/buildbuddy) and [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image)!\\n\\nThanks to everyone using open source, cloud-hosted, and enterprise BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\nA special thank you to our new contributors who we\'ll soon be sending BuildBuddy t-shirts and holographic BuildBuddy stickers:\\n\\n- [**Daniel Purkh\xfas**](https://github.com/purkhusid) who enabled environment variable expansion in BuildBuddy config files & more\\n\\n- [**Joshua Katz**](https://github.com/gravypod) who added support for auto-populating build metadata from GitLab CI\xa0invocations\\n\\nOur focus for this release was on giving\xa0users new tools to share, compare, analyze, and manage BuildBuddy invocations - as well as major performance and reliability improvements to our remote build execution service.\\n\\nWe\'re also excited to share that over the coming weeks and months, we\'ll be open sourcing much more of BuildBuddy - including our remote build execution platform. At BuildBuddy we\'re firmly committed to open source and believe that a transparent and open model is the only way to build truly great developer infrastructure for all.\\n\\n## **New to Open Source BuildBuddy**\\n\\n- **Invocation sharing &\xa0visibility controls** - while you\'ve always been able to share BuildBuddy links with members of your organization, it\'s been difficult to share invocations more broadly (in\xa0GitHub issues or on StackOverflow). Now that working from home is the new norm, sharing links to your build logs or invocations details and artifacts has become more important than ever. To support this, we\'ve added a **Share** button on the invocation page that allows you to control visibility of your invocations\xa0(this can be disabled at the organization level).\xa0We\'ve also disabled the expiration of invocations and build logs for everyone on BuildBuddy Cloud - so you can share BuildBuddy links with confidence.\\n\\n![](../static/img/blog/share.png)\\n\\n- **Invocation diffing** - we\'ve all run into the problem where a build works on your machine, but not on your coworker\'s machine. To support debugging these kinds of issues, we\'ve added the ability to diff builds straight from the invocations page.\xa0This allows you to quickly find any flags or invocation details that may have changed between builds. Stay tuned for more diffing features here, including cache hit debugging and more.\\n\\n![](../static/img/blog/compare.png)\\n\\n- **Suggested fixes** - as software engineers, we often find ourselves bumping into errors and issues that many others have bumped into before. A tool like BuildBuddy provides the perfect way to quickly surface these suggested fixes to developers quickly, without even so much as a Google search. We\'ve started by adding suggestions for common issues that BuildBuddy users run into, but stay tuned for the ability to add your own custom fix suggestions and share them with your organization and beyond!\\n\\n![](../static/img/blog/suggested-fixes.png)\\n\\n- **Easy invocation deletion** - you can now delete your BuildBuddy invocations directly from the invocation page \\"three dot\\" menu in case you want to share an invocation and delete it when you\'re done.\\n\\n![](../static/img/blog/deletion.png)\\n\\n## New to Cloud & Enterprise BuildBuddy\\n\\n- **Cache stats &\xa0filters** - our trends page now allows you to see trends in caching performance broken down by the Action\xa0Cache (AC) and the Content Addressable Store (CAS).\xa0The trends page is now also filterable by CI vs non-CI\xa0builds, and by user, repo, commit, or host.\\n\\n![](../static/img/blog/filtered-trends.png)\\n\\n- **Simplified API\xa0key header auth** - previously if you wanted to authenticate your BuildBuddy invocations using an API key (instead of using certificated based mTLS), you had to place your API key in each BuildBuddy flag that connected to BuildBuddy with YOUR_API_KEY@cloud.buildbuddy.io. This has been greatly simplified in this release with the support for the --remote_header flag, which allows you to more easily separate auth credentials into a separate .bazelrc file.\\n\\n![](../static/img/blog/api-header.png)\\n\\n- **Organization creation and invitations** - you can now create organizations and send invitation links to others.\\n\\n![](../static/img/blog/org-invites.png)\\n\\n- **Remote build execution performance and reliability improvements** - we\'ve made a whole host of changes to our remote build execution executors and schedulers to make them more fault tolerant, easier to scale, and faster. We\'ve also exposed support for executor pools on BuildBuddy Enterprise which allow you to route remote execution traffic based on OS, CPU architecture, GPU requirements, CPU/memory requirements, and more. Routing can be configured at both the platform and individual target level. Finally, we\'ve added improved documentation to help get up and running with RBE\xa0more quickly.\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"welcoming-george-li-head-of-sales","metadata":{"permalink":"/blog/welcoming-george-li-head-of-sales","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/welcoming-george-li-head-of-sales.md","source":"@site/blog/welcoming-george-li-head-of-sales.md","title":"Welcoming George Li, Head of Sales","description":"To fulfill our mission of bringing the world\'s best developer tools to every company, we\'re building a team that\'s ready to work with the world\'s best enterprises. That\'s why we\'re excited to share today that George Li is joining BuildBuddy to lead our enterprise sales efforts as our Head of Sales.","date":"2020-11-12T12:00:00.000Z","formattedDate":"November 12, 2020","tags":[{"label":"company","permalink":"/blog/tags/company"},{"label":"team","permalink":"/blog/tags/team"}],"readingTime":0.52,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.4.0 Release Notes","permalink":"/blog/buildbuddy-v1-4-0-release-notes"},"nextItem":{"title":"BuildBuddy v1.3.0 Release Notes","permalink":"/blog/buildbuddy-v1-3-0-release-notes"}},"content":"To fulfill our mission of bringing the world\'s best developer tools to every company, we\'re building a team that\'s ready to work with the world\'s best enterprises. That\'s why we\'re excited to share today that [**George Li**](https://www.linkedin.com/in/gli/) is joining BuildBuddy to lead our enterprise sales efforts as our Head of Sales.\\n\\nGeorge joins us from Looker where he served as Head of APAC Sales Engineering. He joined Google Cloud through their [acquisition](https://techcrunch.com/2020/02/13/google-closes-2-6b-looker-acquisition/) of Looker in February, having helped the company grow to a $2.6B valuation.\\n\\n![](../static/img/blog/welcome-george.png)\\n\\nWe look forward to working alongside George to build the future of developer tools.\\n\\nWelcome to BuildBuddy, George!"},{"id":"buildbuddy-v1-3-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-3-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-3-0-release-notes.md","source":"@site/blog/buildbuddy-v1-3-0-release-notes.md","title":"BuildBuddy v1.3.0 Release Notes","description":"We\'re excited to share that v1.3.0 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open-source via Github and Docker!","date":"2020-09-30T12:00:00.000Z","formattedDate":"September 30, 2020","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":3.135,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"Welcoming George Li, Head of Sales","permalink":"/blog/welcoming-george-li-head-of-sales"},"nextItem":{"title":"BuildBuddy v1.2.1 Release Notes","permalink":"/blog/buildbuddy-v1-2-1-release-notes"}},"content":"We\'re excited to share that v1.3.0 of BuildBuddy is live on both[ Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open-source via[ Github](https://github.com/buildbuddy-io/buildbuddy) and[ Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image)!\\n\\nThanks to everyone using open source and cloud-hosted BuildBuddy. We\u2019ve made lots of improvements in this release based on your feedback.\\n\\nOur focus for this release was on giving users new tools to improve build performance, debug cache hits, and a completely redesigned Cloud & Enterprise experience.\\n\\n## **New to Open Source BuildBuddy**\\n\\n- **Timing profile explorer **- Bazel\'s timing profile is the best way to get detailed insights into where to spend your time optimizing your build. Unfortunately, extracting useful information out of the thousands of events can be challenging without using something like Chrome\'s profiling tools. Now we\'ve built these tools right into the BuildBuddy timing tab so you can explore this info for any build. See which actions dominate your build\'s critical path or find out how much time is spent downloading outputs - now with a single click.\\n\\n![](../static/img/blog/timing-profile.png)\\n\\nDive into the timing for every action, critical path information, and more.\\n\\n- **Cache stats **- one of the feature requests we get most frequently is for more information on cache hits and misses. This data can be tricky to get a hold of because it\'s not made easily available by Bazel\'s build event protocol. That\'s why we\'ve introduced BuildBuddy\'s new cache tab. It gives you a view into cache hits, misses, and writes for every invocation that uses BuildBuddy\'s gRPC cache. It breaks these numbers down by action cache (AC) and content addressable store (CAS). BuildBuddy also tracks the volume and throughput of cache requests so you can see how much data is moving in and out of the cache - and at what speed.\\n\\n![](../static/img/blog/cache-stats.png)\\n\\nGet a view into cache performance for every invocation.\\n\\n- **Environment variable redaction controls** - when debugging cache hits, it can be useful to get a full picture of the inputs that are affecting a particular build - like the PATH environment variable. By default, BuildBuddy redacts nearly all environment variables passed into Bazel. We\'ve added controls per invocation that allow you to optionally allow environment variables of your choice to skip redaction. Information on configuring this can be found in our[ build metadata docs](https://www.buildbuddy.io/docs/guide-metadata#environment-variable-redacting).\\n\\n## **New to Cloud & Enterprise BuildBuddy**\\n\\n- **Redesigned navigation **- as BuildBuddy has grown from a debugging tool to a fully-featured platform to debug, analyze, monitor, and share builds across your organization, we\'ve outgrown the minimal navigation setup that has gotten us this far. In Cloud and Enterprise BuildBuddy, we\'ve replaced the top menu bar with a more fully-featured left-nav. This gives us room to add new features like Trends and provides easier access to critical pages like Setup & Docs.\\n\\n![](../static/img/blog/navigation.png)\\n\\nThe new navigation makes room for new features.\\n\\n- **Trends **- BuildBuddy has lots of information about every invocation that it collects. Now with Trends, you can follow how your builds are changing over time. Have all of the cache improvements you\'ve been working on decreased average build time over the last month? Has the addition of a new external dependency significantly increased the length of your slowest builds? Answering these questions is easy with BuildBuddy Trends.\\n\\n![](../static/img/blog/trends-v0.png)\\n\\n- **Redis Pub/Sub support **- we\'ve added support for Redis Pub/Sub to significantly improve remote build execution performance. It\'s completely optional for on-prem deployments, but in our testing it\'s improved performance for builds with lots of small actions by a factor of 2x. No change is required for Cloud users - just enjoy the faster builds!\\n\\nThat\u2019s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - join our[ Slack channel](https://slack.buildbuddy.io) or email us at hello@buildbuddy.io with any questions, comments, or thoughts."},{"id":"buildbuddy-v1-2-1-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-2-1-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-2-1-release-notes.md","source":"@site/blog/buildbuddy-v1-2-1-release-notes.md","title":"BuildBuddy v1.2.1 Release Notes","description":"Excited to share that v1.2.1 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open source via Github and Docker!","date":"2020-09-03T12:00:00.000Z","formattedDate":"September 3, 2020","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"},{"label":"team","permalink":"/blog/tags/team"}],"readingTime":4.395,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.3.0 Release Notes","permalink":"/blog/buildbuddy-v1-3-0-release-notes"},"nextItem":{"title":"BuildBuddy v1.1.0 Release Notes","permalink":"/blog/buildbuddy-v1-1-0-release-notes"}},"content":"Excited to share that v1.2.1 of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open source via [Github](https://github.com/buildbuddy-io/buildbuddy) and [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/docs/on-prem.md#docker-image)!\\n\\nThanks to everyone that has tested open source and cloud-hosted BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\nA special welcome to our newest contributor and **team member**:\\n\\n- [Brandon Duffany](https://github.com/bduffany) - Brandon is an ex-Googler and Cornell alumn who\'s worked as a software engineer on Google Assistant and Google Ads. He\'ll start off focused on surfacing better profiling and timing information to help users track down and fix slow builds!\\n\\nOur focus for this release was on expanding access to BuildBuddy as well as improving scalability and performance.\\n\\nWe\'re also excited to announce that we\'re expanding the BuildBuddy Cloud free tier. BuildBuddy Cloud is now **free for teams of up to 3 engineers** in addition to being free for individuals open source projects of any size.\\n\\n## **New to Open Source BuildBuddy**\\n\\n- **Official BuildBuddy Helm charts** - thanks to a [request](https://github.com/buildbuddy-io/buildbuddy/issues/35) from [Nathan Leung](https://github.com/nathanhleung) we\'ve created official [BuildBuddy Helm Charts](https://github.com/buildbuddy-io/buildbuddy-helm) that are available for both [Open Source](https://github.com/buildbuddy-io/buildbuddy-helm/tree/master/charts/buildbuddy) and [Enterprise](https://github.com/buildbuddy-io/buildbuddy-helm/tree/master/charts/buildbuddy-enterprise) deployments.\xa0[Helm](https://helm.sh/) enables you to deploy BuildBuddy to a Kubernetes cluster with a single command, and makes configuration a breeze.\xa0The charts can optionally take care of provisioning a MySQL instance, an Nginx ingress, and even Memcached.**\u200d**\\n\\n![](../static/img/blog/helm.png)\\n\\n- **Build metadata** - a frequent request from users is the ability to associate a BuildBuddy invocation with a particular git commit and repo. To support this, we\'ve added optional build metadata including repo URL, commit SHA, and CI role that can be passed up with your build. This metadata can be passed up using the **--build_metadata** flag, using a **--workspace_status_command** script, or using environment variables commonly set by CI\xa0providers like CircleCI, BuildKite, GitHub Actions, and others. More information on how to configure your metadata can be found in our [build metadata guide.](https://www.buildbuddy.io/docs/guide-metadata)\\n\\n- **GitHub commit status publishing** - now that you can configure build metadata to associate invocations with a GitHub repo and commit, we\'ve added the ability to publish commit statuses straight to GitHub when you\'ve set your metadata role to **CI**. To enable this feature, simply click **Link\xa0GitHub Account**\xa0in your BuildBuddy profile dropdown\xa0(if you\'re using self hosted BuildBuddy, you\'ll need to [create a Github OAuth app](https://www.buildbuddy.io/docs/config-github) and add it to your config.yaml file).\\n\\n![](../static/img/blog/commit-status.png)\\n\\nBuildBuddy links directly on GitHub\\n\\n- **Improved cache hit rate** - we\'ve made improvement to our Action Cache validation logic that should result in higher cache hit rates.\\n\\n- **New guides** - we\'ve added new guides to our documentation, including our [Authentication Guide](https://www.buildbuddy.io/docs/guide-auth), [Build Metadata Guide](https://www.buildbuddy.io/docs/guide-metadata), [Remote Build Execution with Github Actions Guide](https://www.buildbuddy.io/docs/rbe-github-actions), with more coming soon. We\'ve also started collecting troubleshooting documentation for common errors including [RBE\xa0Failures](https://www.buildbuddy.io/docs/troubleshooting-rbe), and [Slow Uploads](https://www.buildbuddy.io/docs/troubleshooting-slow-upload). Contributions [welcome](https://github.com/buildbuddy-io/buildbuddy/tree/master/docs)!\\n\\n- **Target information in timing tab** - in Bazel 3.4.0, the experimental [flag](https://docs.bazel.build/versions/master/command-line-reference.html#flag--experimental_profile_include_target_label) **--experimental_profile_include_target_label** was introduced which adds target information to profiling events. When this flag is enabled, this target information is now displayed in the BuildBuddy Timing tab.\\n\\n## New to Cloud & Enterprise BuildBuddy\\n\\n- **BuildBuddy Cloud is now free for teams of up to 3** - we want to make BuildBuddy available to every team - regardless of size.\xa0BuildBuddy has always been free for individuals and open source projects and today we\'re expanding this to teams of up to 3 engineers. As your team continues to grow, we have reasonably priced plans that scale from startups to the largest enterprises.\\n\\n![](../static/img/blog/pricing.png)\\n\\n- **Distributed scheduler** - the scheduler is a core component of any remote execution platform.\xa0In many cases, it is a single point of failure that turns an otherwise robust system into a fragile, stateful service that\'s hard to scale. In BuildBuddy 1.2.1, we rewrote our **distributed** Remote Build Execution scheduler from the ground up based on many learnings and best practices from state-of-the-art systems like Apache Spark. This enables BuildBuddy to scale to handle the largest workloads with no single point of failure, single digit millisecond queue wait times, and fault tolerance that enables execution on preemptible nodes.\xa0This allows for more cost effective high availability configurations, and allows you to deploy new BuildBuddy releases without a blip in ongoing executions.\\n\\n- **Remote asset API\xa0** - in Bazel 3.0.0 the Remote\xa0Asset API was introduced along with the --experimental_remote_downloader [flag](https://docs.bazel.build/versions/master/command-line-reference.html#flag--experimental_remote_downloader). In this release, we\'ve added basic support for this experimental API.\\n\\n- **Organization configuration** - we\'ve added configuration options for on-prem installs that allow you to configure an organization\'s name and limit signups to emails from a specific domain.\xa0More information in the [org config documentation](https://www.buildbuddy.io/docs/config-org).\\n\\n- **Configurable anonymous access** - we\'ve added a configuration option that allows organizations with authentication configured to choose whether or not anonymous access should be enabled.\xa0Anonymous access is off by default when auth is configured.\xa0More information in the [auth config documentation](https://www.buildbuddy.io/docs/config-auth).\\n\\n- **S3 cache support** - BuildBuddy [previously](https://github.com/buildbuddy-io/buildbuddy/pull/12) had support for using Amazon S3 as a backing store for build events. In this release, we\'ve added Amazon S3 support for as a backing store for caching as well, with support for streaming, ContainsMulti, and more.\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - join our [Slack channel](https://slack.buildbuddy.io) or email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"buildbuddy-v1-1-0-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-1-0-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-1-0-release-notes.md","source":"@site/blog/buildbuddy-v1-1-0-release-notes.md","title":"BuildBuddy v1.1.0 Release Notes","description":"Excited to share that v1.1.0 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open source via Github and Docker!","date":"2020-07-15T12:00:00.000Z","formattedDate":"July 15, 2020","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":3.66,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.2.1 Release Notes","permalink":"/blog/buildbuddy-v1-2-1-release-notes"},"nextItem":{"title":"BuildBuddy v1.0.6 Release Notes","permalink":"/blog/buildbuddy-v1-0-6-release-notes"}},"content":"Excited to share that v1.1.0 of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open source via [Github](https://github.com/buildbuddy-io/buildbuddy) and [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/SETUP.md#docker-image)!\\n\\nThanks to everyone that has tested open source and cloud-hosted BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\nA special thank you to our new contributors:\\n\\n- [Sergio Rodriguez Orellana](https://github.com/SrodriguezO) who contributed support for making dense mode the default view mode.\\n- [Tim Glaser](https://twitter.com/timgl?lang=en) who made some major improvements to our documentation.\\n\\nOur focus for this release was on our new Remote Build Execution platform. This release marks a huge step in fulfilling our mission of making developers more productive by supporting the Bazel ecosystem.\\n\\nBuildBuddy\'s Remote Build Execution platform supports executing your Bazel build and tests in parallel across thousands of machines with automatic scaling, support for custom Docker images, and more.\xa0We\'ve been iterating on and testing BuildBuddy RBE\xa0for months with companies of different sizes, and are excited to now make it available to everyone.\\n\\nWhile BuildBuddy RBE is not yet fully open source, we\'re offering Cloud RBE for free to individuals and open source projects to show our appreciation to the open source community.\\n\\nWe\'ll be adding more documentation on getting started with BuildBuddy RBE\xa0in the coming weeks, but in the meantime feel free to email us at <rbe@buildbuddy.io> or ping us in the [BuildBuddy Slack](https://join.slack.com/t/buildbuddy/shared_invite/zt-e0cugoo1-GiHaFuzzOYBPQzl9rkUR_g) and we\'ll be happy to help you get started.\\n\\n## **New to Open Source BuildBuddy**\\n\\n- **Cache & remote execution badges -\xa0**BuildBuddy invocations pages now show badges that indicate whether or not caching and remote execution are enabled. Clicking on these badges takes you to instructions on how to configure these if they\'re enabled for your BuildBuddy instance.\\n\\n![](../static/img/blog/cache-badge.png)\\n\\n- **Remote build execution configuration options** - the BuildBuddy configuration widget has now been updated to enable configuring of remote build execution if it\'s enabled for your BuildBuddy instance.\\n\\n![](../static/img/blog/config-options.png)\\n\\n- **Better build status support** - BuildBuddy now better distinguishes between in-progress, failed, passed, and cancelled builds with new colorful status indicators, favicons, and more.\\n\\n![](../static/img/blog/favicon.png)\\n\\n- **Improved documentation and new website** - we\'ve completely revamped the BuildBuddy documentation, and it\'s now sync\'d between GitHub and [buildbuddy.io/docs/](https://buildbuddy.io/docs/), so your docs will be fresh regardless of where you\'re reading them.\xa0We\'ll be adding new sections on configuring RBE\xa0in the coming weeks. We\'ve also completely revamped the BuildBuddy website to make it easier to navigate and perform actions like requesting a quote, or subscribing to our [newsletter](#wf-form-Newsletter-Form).\\n\\n![](../static/img/blog/docs.png)\\n\\n- **Test run grid** - BuildBuddy will now automatically display test runs as a grid when a single test target is run more than 10 times. This supports the use case of finding and fixing flaky tests by running them with **--runs_per_test=100**.\\n\\n![](../static/img/blog/test-runs.png)\\n\\n- **Performance and reliability improvements** - we put a lot of work into improving performance and reliability in this release. This includes changes like better event flushing (no more getting stuck on 15 build events), better shutdown behavior, speed improvements and optimizations in build artifact uploading and downloading, and more.\\n\\n\u200d\\n\\n## New to Cloud & Enterprise BuildBuddy\\n\\n- **Remote Build Execution** - BuildBuddy Cloud and enterprise on-prem now support Remote Build Execution. Features include custom Docker image support, automatic scaling, multiple caching layers, and more. Additional features like Mac support, viewing of remote build actions in BuildBuddy, and more are coming soon.\\n\\n![](../static/img/blog/rbe.png)\\n\\n- **Invocation grouping** - BuildBuddy invocations can now be grouped by commit and by repo.\xa0These can be populated in one of three ways:\\n\\n1.  automatically by common CI\xa0environments like CircleCI and GitHub actions\\n2.  manually by using build flags **--build_metadata=REPO_URL=** and **--build_metadata=COMMIT_SHA=**\u200d\\n3.  by using a **--workspace_status_command** script like [this one](https://github.com/buildbuddy-io/buildbuddy/blob/master/workspace_status.sh)\\n\\n![](../static/img/blog/commits.png)\\n\\n- **New cloud endpoint** - BuildBuddy now exposes a L7 load balanced gRPCS cloud endpoint at **cloud.buildbuddy.io** which can be used for BES, cache, and remote execution (see our [.bazelrc](https://github.com/buildbuddy-io/buildbuddy/blob/master/.bazelrc#L25) for an example).\xa0We\'ll gradually be migrating users to this from the old events.buildbuddy.io, and cache.buildbuddy.io endpoints with port numbers.\\n\\n- **Easier enterprise deployment** - deploying enterprise BuildBuddy is now just as easy as deploying open source BuildBuddy, with a one line install script that deploys to your Kubernetes cluster.\xa0It takes your [BuildBuddy configuration file](https://www.buildbuddy.io/docs/config) as a parameter so you can easily configure things to your needs.\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"buildbuddy-v1-0-6-release-notes","metadata":{"permalink":"/blog/buildbuddy-v1-0-6-release-notes","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-v1-0-6-release-notes.md","source":"@site/blog/buildbuddy-v1-0-6-release-notes.md","title":"BuildBuddy v1.0.6 Release Notes","description":"Excited to share that v1.0.6 of BuildBuddy is live on both Cloud Hosted BuildBuddy and open source via Github and Docker!","date":"2020-05-20T12:00:00.000Z","formattedDate":"May 20, 2020","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":2.525,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.1.0 Release Notes","permalink":"/blog/buildbuddy-v1-1-0-release-notes"},"nextItem":{"title":"Introducing BuildBuddy Version 1.0","permalink":"/blog/introducing-buildbuddy-v1"}},"content":"Excited to share that v1.0.6 of BuildBuddy is live on both [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/) and open source via [Github](https://github.com/buildbuddy-io/buildbuddy) and [Docker](https://github.com/buildbuddy-io/buildbuddy/blob/master/SETUP.md#docker-image)!\\n\\nThanks to all of you that have been using open source and cloud-hosted BuildBuddy. We\'ve made lots of improvements in this release based on your feedback.\\n\\nA special thank you to our new contributors:\\n\\n- [Roger Hu](https://github.com/rogerhu) who contributed [Amazon S3 storage support](https://github.com/buildbuddy-io/buildbuddy/commit/8ba12398e448b457cdbd1e0c8913e9aba46323cb).\\n- [Andrew Allen](https://github.com/achew22) who [updated BuildBuddy\'s open source repo](https://github.com/buildbuddy-io/buildbuddy/commit/59bee5228c7c3da9d0cdaba934fce2118e7e9adc) to conform to open source golang expectations.\\n\\nOur three major focuses for this release were on a better test results view, certificate based authentication, and our new results-store API.\\n\\nWe also laid a lot of groundwork for remote build execution in this release, which will be available in the coming weeks.\\n\\n## New to Open Source BuildBuddy\\n\\n- **Test results view** - we\'ve added support for parsing test.xml files that are uploaded to a BuildBuddy remote cache. This allows us to show information about individual test cases and quickly surface information on which test cases failed and why.\\n\\n- **Large log file support** - we\'ve improved BuildBuddy\'s log viewer to enable the rendering of 100MB+ log files with full ANSI color support in milliseconds using incremental rendering.\\n\\n- **Timing controls** - BuildBuddy\'s timing tab now has improved controls that enable users to choose grouping and page size options. This allows you to easily see the slowest build phases across threads.\\n\\n- **gRPCS support** - BuildBuddy now supports and defaults to encrypted gRPCS connections to Bazel using TLS. Support includes automatic obtaining of server-side TLS certificates using [ACME](https://en.wikipedia.org/wiki/Automated_Certificate_Management_Environment) and [Let\'s Encrypt](https://letsencrypt.org/). This also includes the ability to connect to remote caches over gRPCS via the bytestream API.\\n- **URL secret redaction** - we\'ve updated our log scrubbing logic to redact any URLs that might contain secrets from uploaded build events.\\n\\nOur open source BuildBuddy distribution is targeted at individuals viewing and debugging their Bazel builds. For teams and organizations, we provide an enterprise version of BuildBuddy that adds support for team-specific features.\\n\\nMany of these Enterprise features are also available for free to individuals via [Cloud Hosted BuildBuddy](https://app.buildbuddy.io/).\\n\\n\u200d\\n\\n## New to Cloud & Enterprise BuildBuddy\\n\\n- **Certificate based auth** - authentication between Bazel and BuildBuddy can now be authenticated and encrypted using certificate-based [mTLS](https://en.wikipedia.org/wiki/Mutual_authentication).\\n- **Auth configuration widget** - using BuildBuddy\'s new configuration widget, it\'s easy to setup an auth configuration that makes sense for your team. This includes options to pull credentials into user-specific .bazelrc files and download generated auth certificates.\\n\\n- **Build Results API** - many teams want to do more with their build results. With BuildBuddy\'s [Build Results API](https://github.com/buildbuddy-io/buildbuddy/blob/master/proto/api/v1/service.proto) - users have programmatic access to an invocation\'s targets, actions, and build artifacts. This allows teams to build out custom integrations with their existing tooling. If you\'d like access to the API, or have more information you\'d like exposed, email [developers@buildbuddy.io](https://buildbuddy.io/blog/buildbuddy-v1-0-6-release-notes/developers@buildbuddy.io).\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"introducing-buildbuddy-v1","metadata":{"permalink":"/blog/introducing-buildbuddy-v1","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/introducing-buildbuddy-v1.md","source":"@site/blog/introducing-buildbuddy-v1.md","title":"Introducing BuildBuddy Version 1.0","description":"We released our initial open source version of BuildBuddy to the Bazel community last month and have received a ton of interest, support, and feedback. We really appreciate everyone who\'s taken the time to kick the tires and try it out!","date":"2020-04-24T12:00:00.000Z","formattedDate":"April 24, 2020","tags":[{"label":"product","permalink":"/blog/tags/product"},{"label":"release-notes","permalink":"/blog/tags/release-notes"}],"readingTime":3.885,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy v1.0.6 Release Notes","permalink":"/blog/buildbuddy-v1-0-6-release-notes"},"nextItem":{"title":"BuildBuddy joins Y Combinator","permalink":"/blog/buildbuddy-joins-y-combinator"}},"content":"We released our initial open source version of BuildBuddy to the Bazel community last month and have received a ton of interest, support, and feedback. We really appreciate everyone who\'s taken the time to kick the tires and try it out!\\n\\nWe\'re excited to share that BuildBuddy has been run on-prem at over 20 companies, and hundreds more developers have tried our cloud-hosted version.\\n\\nPeople have found the shareable invocation links particularly useful when debugging builds remotely with co-workers while working from home. No more pasting console outputs into Pastebin!\\n\\nWe\'ve taken all of the feedback we\'ve gotten and made lots of improvements to both the open source and enterprise versions of BuildBuddy.\\n\\nOur three major focuses for this release were on better build artifact handling, better test support, and enterprise authentication. We hope these changes help you continue to build and debug software faster. Keep the feedback coming!\\n\\n## New to Open Source BuildBuddy\\n\\n- **Remote cache support** - we\'ve added a built-in Bazel remote cache to BuildBuddy, implementing the gRPC remote caching APIs. This allows BuildBuddy to optionally collect build artifacts, timing profile information, test logs, and more.\\n\\n- **Clickable build artifacts** - this was our most requested feature. Clicking on build artifacts in the BuildBuddy UI now downloads the artifact when using either the built-in BuildBuddy cache, or a third-party cache running in GRPC mode that supports the bytestream API - like [bazel-remote](https://github.com/buchgr/bazel-remote).\\n\\n- **Detailed timing information** - getting detailed timing information on your Bazel builds can be a hassle. Now BuildBuddy invocations include a new \\"Timing\\" tab - which pulls the Bazel profile logs from your build cache and displays them in a human-readable format. Stay tuned for flame charts!\\n\\n- **Viewable test logs** - digging into test logs for your Bazel runs can be a pain. Now BuildBuddy surfaces test logs directly in the UI when you click on a test target (GRPC remote cache required).\\n\\n- **Multiple test-run support** - one of our favorite features of Bazel is that it will rerun flaky tests for you. BuildBuddy now supports viewing information about multiple attempts of a single test run.\\n\\n- **Client environment variable redaction** - client environment variables are now redacted from BuildBuddy\'s invocation details to avoid over-sharing.\\n\\n- **Dense UI mode** - based on feedback on information density of the default BuildBuddy UI, we added a \\"Dense mode\\" that packs more information into every square inch.\\n\\n- **BES backend multiplexing** - we heard from some of you that you\'d like to try BuildBuddy, but were already pointing your bes_backend flag at another service. We\'ve added the build_event_proxy configuration option that allows you to specify other backends that your build events should be forwarded to. See the [configuration docs](https://github.com/buildbuddy-io/buildbuddy/blob/master/CONFIG.md#buildeventproxy) for more information.\\n\\n- **Slack webhook support** - we\'ve added a configuration option that allows you to message a Slack channel when builds finish. This is a nice way of getting a quick notification when a long running build completes, or a CI build fails. See the [configuration docs](https://github.com/buildbuddy-io/buildbuddy/blob/master/CONFIG.md#integrations) for more information.\\n\\nOur open source BuildBuddy distribution is targeted at individuals viewing and debugging their Bazel builds. For teams and organizations, we provide an enterprise version of BuildBuddy that adds support for team-specific features.\\n\\n\u200d\\n\\n## New to Enterprise BuildBuddy\\n\\n- **OpenID Connect auth support** - organizations can now specify an OpenID Connect provider to handle authentication for their BuildBuddy instance. This allows for the flexibility to use Google login if you use GSuite, auth services like Okta, or an in-house solution that supports OpenID Connect.\\n\\n- **Authenticated build log & cache uploads** - BuildBuddy now supports generating authenticated upload URLs for both the build event and remote cache backends. Events uploaded with authentication will be associated with your organization and will not be viewable by unauthorized clients.\\n\\n- **Organization support** - BuildBuddy now supports creating organizations that allow builds to be viewed and aggregated across your team/company.\\n\\n- **Organization build history** - with organization support comes a new view that allows you to see recent builds across your organization.\\n\\n- **User & host overviews** - you can now see all of the users and hosts that have uploaded builds to your organization. This allows you to drill into all of the builds uploaded from a CI machine for example.\\n\\n- **Build grid** - the new build grid gives you a visual overview of the build history for an organization, host, or user. This allows you to quickly find and fix failing builds.\\n\\nThat\'s it for this release. Stay tuned for more updates coming soon!\\n\\nAs always, we love your feedback - email us at <hello@buildbuddy.io> with any questions, comments, or thoughts."},{"id":"buildbuddy-joins-y-combinator","metadata":{"permalink":"/blog/buildbuddy-joins-y-combinator","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/buildbuddy-joins-y-combinator.md","source":"@site/blog/buildbuddy-joins-y-combinator.md","title":"BuildBuddy joins Y Combinator","description":"If you\'ve hung out around developers for any extended period --- you\'ve probably heard \\"my code is compiling\\" as an excuse from them when they\'re slacking off and browsing Hacker News.","date":"2020-03-16T12:00:00.000Z","formattedDate":"March 16, 2020","tags":[{"label":"company","permalink":"/blog/tags/company"}],"readingTime":0.89,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"Introducing BuildBuddy Version 1.0","permalink":"/blog/introducing-buildbuddy-v1"},"nextItem":{"title":"Meet BuildBuddy","permalink":"/blog/meet-buildbuddy"}},"content":"If you\'ve hung out around developers for any extended period --- you\'ve probably heard \\"my code is compiling\\" as an excuse from them when they\'re slacking off and browsing Hacker News.\\n\\n<figure className=\\"image\\">\\n  <img src=\\"/img/blog/xkcd.png\\" />\\n  <figcaption>\\"Compiling\\" via <a href=\\"https://xkcd.com/303/\\">XKCD</a></figcaption>\\n</figure>\\n\\nSlow, flaky builds waste hours of developer time --- leading to slow dev refresh cycles and unhappy, unproductive engineers. This is the problem we\'re solving at BuildBuddy.\\n\\n[BuildBuddy](http://buildbuddy.io/) is a managed [Bazel](https://bazel.build/) build system. It brings a Google-style development environment and 10x faster builds to any company.\\n\\nWe\'re excited to share that we\'ve been accepted into [Y Combinator](https://www.ycombinator.com/) and have been participating in their Winter 2020 batch. Here\'s a photo from our first batch dinner where the founders of Airbnb (YC Winter 2009) told us stories about their YC experience:\\n\\n<figure className=\\"image\\">\\n  <img src=\\"/img/blog/yc-dinner.jpg\\" />\\n  <figcaption>Airbnb founders speak at our first batch dinner via <a href=\\"https://twitter.com/gustaf/status/1215039947356270594\\">Gustaf Alstromer</a></figcaption>\\n</figure>\\n\\nWe\'re excited to share more about BuildBuddy in the coming months. If you intrigued and want to learn more - feel free to shoot us an email at <hello@buildbuddy.io>."},{"id":"meet-buildbuddy","metadata":{"permalink":"/blog/meet-buildbuddy","editUrl":"https://github.com/buildbuddy-io/buildbuddy/edit/master/website/blog/meet-buildbuddy.md","source":"@site/blog/meet-buildbuddy.md","title":"Meet BuildBuddy","description":"BuildBuddy is a managed Bazel build system --- it brings a Google-style development environment to any company in minutes.","date":"2020-03-04T12:00:00.000Z","formattedDate":"March 4, 2020","tags":[{"label":"company","permalink":"/blog/tags/company"},{"label":"product","permalink":"/blog/tags/product"}],"readingTime":1.085,"truncated":false,"authors":[{"name":"Siggi Simonarson","title":"Co-founder @ BuildBuddy","url":"https://www.linkedin.com/in/siggisim/","imageURL":"https://avatars.githubusercontent.com/u/1704556?v=4"}],"prevItem":{"title":"BuildBuddy joins Y Combinator","permalink":"/blog/buildbuddy-joins-y-combinator"}},"content":"BuildBuddy is a managed [Bazel](https://bazel.build/) build system --- it brings a Google-style development environment to any company in minutes.\\n\\nThe first product we\'ve built is an [open-core](https://en.wikipedia.org/wiki/Open-core_model) Bazel build log viewer. It consumes the Bazel [build event protocol](https://docs.bazel.build/versions/master/build-event-protocol.html) and makes logs accessible through a user-friendly web UI. If you\'re familiar with [Google\'s Sponge tool](https://mike-bland.com/2012/10/01/tools.html#tap-and-sponge) - it\'s basically an open source version of that. It\'s available in 3 forms:\\n\\n- **Open source** - You can find the core product open source and free to use with an MIT license on [GitHub](https://github.com/buildbuddy-io/buildbuddy).\\n- **Cloud hosted** - We also offer a cloud hosted version of the product at [buildbuddy.io](https://buildbuddy.io/). Plans range from a free version for personal use to an enterprise version suited for companies with complex needs.\\n- **On-prem** - We offer an enterprise version of the product that you can run on-premises or in your own cloud. This version comes with all the bells and whistles - like dashboards, user accounts, and dedicated support.\\n\\nThe Bazel build log viewer is just the start. We\'re working on a [shared build cache](https://docs.bazel.build/versions/master/remote-caching.html), [remote build execution](https://docs.bazel.build/versions/master/remote-execution.html), and more.\\n\\nOur end goal is to take the pain out of managing Bazel, so you can focus on building your product.\\n\\nReach out to us at <hello@buildbuddy.io> if you\'re interested, we\'d love to chat!"}]}')}}]);