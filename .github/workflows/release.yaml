name: "test-release"

on:
  pull_request:
    branches:
      - master

# on:
#   push:
#     tags:
#       - "v*"

jobs:
  # create-release:
  #   runs-on: ubuntu-latest
  #   if: "!contains(github.event.head_commit.message, 'release skip')"
  #   steps:
  #     - uses: "marvinpinto/action-automatic-releases@latest"
  #       with:
  #         repo_token: "${{ secrets.BUILDBUDDY_GITHUB_USER_TOKEN }}"
  #         prerelease: false
  #         draft: true

  build:
    runs-on: ${{ matrix.platform }}
    if: "!contains(github.event.head_commit.message, 'release skip')"
    strategy:
      matrix:
        # platform: [macos-latest, ubuntu-latest, m1]
        platform: [m1]
        include:
          # - platform: macos-latest
          #   OSName: darwin
          #   arch: amd64
          #   prefix: ""

          # - platform: ubuntu-latest
          #   OSName: linux
          #   arch: amd64
          #   prefix: ""

          - platform: m1
            OSName: darwin
            arch: arm64
            executorOnly: true
            # prefix: "arch -arm64 "
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-${{matrix.OSName}}-${{matrix.arch}}"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-${{matrix.OSName}}-${{matrix.arch}} "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: Get Tag
        id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

      - name: Upload All Artifacts
        if: ${{!matrix.executorOnly}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" clean --expunge && "${GITHUB_WORKSPACE}/bin/bazel" build --config=release --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} --define version=${{ steps.tag.outputs.TAG }} //server/cmd/buildbuddy:buildbuddy //enterprise/server/cmd/server:buildbuddy //enterprise/server/cmd/executor:executor
          cp bazel-bin/server/cmd/**/**/buildbuddy buildbuddy-${{matrix.OSName}}-${{matrix.arch}}
          cp bazel-bin/enterprise/server/cmd/**/**/buildbuddy buildbuddy-enterprise-${{matrix.OSName}}-${{matrix.arch}}
          cp bazel-bin/enterprise/server/cmd/**/**/executor executor-enterprise-${{matrix.OSName}}-${{matrix.arch}}
          ls
          # gh release upload ${{ steps.tag.outputs.TAG }} buildbuddy-${{matrix.OSName}}-${{matrix.arch}} buildbuddy-enterprise-${{matrix.OSName}}-${{matrix.arch}} executor-enterprise-${{matrix.OSName}}-${{matrix.arch}} --clobber

      - name: Upload Executor Artifacts
        if: ${{matrix.executorOnly}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          /usr/bin/arch -arch arm64e /bin/bash --noprofile --norc -eo pipefail -c \""${GITHUB_WORKSPACE}/bin/bazel" clean --expunge && "${GITHUB_WORKSPACE}/bin/bazel" build --config=release --remote_header=x-buildbuddy-api-key=${{ secrets.BUILDBUDDY_ORG_API_KEY }} --define version=${{ steps.tag.outputs.TAG }} //enterprise/server/cmd/executor:executor\"
          cp bazel-bin/enterprise/server/cmd/**/**/executor executor-enterprise-${{matrix.OSName}}-${{matrix.arch}}
          ls
          # gh release upload ${{ steps.tag.outputs.TAG }} buildbuddy-${{matrix.OSName}}-${{matrix.arch}} buildbuddy-enterprise-${{matrix.OSName}}-${{matrix.arch}} executor-enterprise-${{matrix.OSName}}-${{matrix.arch}} --clobber
